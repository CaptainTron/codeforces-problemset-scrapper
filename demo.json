[
{"url": "https://codeforces.com//problemset/problem/1995/E2", "name": "Let Me Teach You a Lesson (Hard Version)", "tags": ["2-sat", "bitmasks", "data structures", "dp", "graphs", "matrices", "two pointers"], "problem_rating": [null], "solved_by": "x51"},
{"url": "https://codeforces.com//problemset/problem/1995/E1", "name": "Let Me Teach You a Lesson (Easy Version)", "tags": ["2-sat", "data structures", "dp", "two pointers"], "problem_rating": [null], "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/1995/D", "name": "Cases", "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "dp", "graphs", "greedy", "strings"], "problem_rating": [null], "solved_by": "x640"},
{"url": "https://codeforces.com//problemset/problem/1995/C", "name": "Squaring", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "math", "number theory"], "problem_rating": [null], "solved_by": "x3500"},
{"url": "https://codeforces.com//problemset/problem/1995/B2", "name": "Bouquet (Hard Version)", "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "problem_rating": [null], "solved_by": "x4313"},
{"url": "https://codeforces.com//problemset/problem/1995/B1", "name": "Bouquet (Easy Version)", "tags": ["binary search", "brute force", "greedy", "sortings", "sortings", "two pointers"], "problem_rating": [null], "solved_by": "x11242"},
{"url": "https://codeforces.com//problemset/problem/1995/A", "name": "Diagonals", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": [null], "solved_by": "x16327"},
{"url": "https://codeforces.com//problemset/problem/1994/H", "name": "Fortnite", "tags": ["combinatorics", "constructive algorithms", "games", "greedy", "hashing", "interactive", "math", "number theory", "strings"], "problem_rating": [null], "solved_by": "x85"},
{"url": "https://codeforces.com//problemset/problem/1994/G", "name": "Minecraft", "tags": ["bitmasks", "brute force", "dp", "math"], "problem_rating": [null], "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/1994/F", "name": "Stardew Valley", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": [null], "solved_by": "x788"},
{"url": "https://codeforces.com//problemset/problem/1994/E", "name": "Wooden Game", "tags": ["bitmasks", "greedy", "math", "trees"], "problem_rating": [null], "solved_by": "x2932"},
{"url": "https://codeforces.com//problemset/problem/1994/D", "name": "Funny Game", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "math", "number theory", "trees"], "problem_rating": [null], "solved_by": "x3866"},
{"url": "https://codeforces.com//problemset/problem/1994/C", "name": "Hungry Games", "tags": ["binary search", "dp", "two pointers"], "problem_rating": [null], "solved_by": "x7691"},
{"url": "https://codeforces.com//problemset/problem/1994/B", "name": "Fun Game", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": [null], "solved_by": "x12898"},
{"url": "https://codeforces.com//problemset/problem/1994/A", "name": "Diverse Game", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": [null], "solved_by": "x16404"},
{"url": "https://codeforces.com//problemset/problem/1992/G", "name": "Ultra-Meow", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x2149"},
{"url": "https://codeforces.com//problemset/problem/1992/F", "name": "Valuable Cards", "tags": ["brute force", "dp", "greedy", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x4444"},
{"url": "https://codeforces.com//problemset/problem/1992/E", "name": "Novice's Mistake", "tags": ["brute force", "constructive algorithms", "implementation", "math", "strings"], "problem_rating": "1700", "solved_by": "x7456"},
{"url": "https://codeforces.com//problemset/problem/1992/D", "name": "Test of Love", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16834"},
{"url": "https://codeforces.com//problemset/problem/1992/C", "name": "Gorilla and Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x24726"},
{"url": "https://codeforces.com//problemset/problem/1992/B", "name": "Angry Monk", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x28949"},
{"url": "https://codeforces.com//problemset/problem/1992/A", "name": "Only Pluses", "tags": ["brute force", "constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x34055"},
{"url": "https://codeforces.com//problemset/problem/1990/F", "name": "Polygonal Segments", "tags": ["data structures", "divide and conquer", "greedy", "two pointers"], "problem_rating": [null], "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1990/E2", "name": "Catch the Mole(Hard Version)", "tags": ["binary search", "data structures", "dfs and similar", "interactive", "trees"], "problem_rating": [null], "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1990/E1", "name": "Catch the Mole(Easy Version)", "tags": ["binary search", "data structures", "dfs and similar", "interactive", "trees"], "problem_rating": [null], "solved_by": "x590"},
{"url": "https://codeforces.com//problemset/problem/1990/D", "name": "Grid Puzzle", "tags": ["bitmasks", "dp", "greedy", "implementation", "math"], "problem_rating": [null], "solved_by": "x4060"},
{"url": "https://codeforces.com//problemset/problem/1990/C", "name": "Mad MAD Sum", "tags": ["brute force", "greedy", "math"], "problem_rating": [null], "solved_by": "x7966"},
{"url": "https://codeforces.com//problemset/problem/1990/B", "name": "Array Craft", "tags": ["constructive algorithms", "greedy"], "problem_rating": [null], "solved_by": "x12335"},
{"url": "https://codeforces.com//problemset/problem/1990/A", "name": "Submission Bait", "tags": ["brute force", "games", "greedy", "sortings"], "problem_rating": [null], "solved_by": "x16885"},
{"url": "https://codeforces.com//problemset/problem/1989/F", "name": "Simultaneous Coloring", "tags": ["dfs and similar", "divide and conquer", "graphs"], "problem_rating": "3000", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1989/E", "name": "Distance to Different", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x1531"},
{"url": "https://codeforces.com//problemset/problem/1989/D", "name": "Smithing Skill", "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x4911"},
{"url": "https://codeforces.com//problemset/problem/1989/C", "name": "Two Movies", "tags": ["greedy", "math"], "problem_rating": "1400", "solved_by": "x15412"},
{"url": "https://codeforces.com//problemset/problem/1989/B", "name": "Substring and Subsequence", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x17339"},
{"url": "https://codeforces.com//problemset/problem/1989/A", "name": "Catch the Coin", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23347"},
{"url": "https://codeforces.com//problemset/problem/1988/F", "name": "Heartbeat", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3000", "solved_by": "x91"},
{"url": "https://codeforces.com//problemset/problem/1988/E", "name": "Range Minimum Sum", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation"], "problem_rating": "2300", "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/1988/D", "name": "The Omnipotent Monster Killer", "tags": ["brute force", "dfs and similar", "dp", "trees"], "problem_rating": "2000", "solved_by": "x3785"},
{"url": "https://codeforces.com//problemset/problem/1988/C", "name": "Increasing Sequence with Fixed OR", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x13452"},
{"url": "https://codeforces.com//problemset/problem/1988/B", "name": "Make Majority", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x18740"},
{"url": "https://codeforces.com//problemset/problem/1988/A", "name": "Split the Multiset", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x19261"},
{"url": "https://codeforces.com//problemset/problem/1987/H", "name": "Fumo Temple", "tags": ["interactive"], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1987/G2", "name": "Spinning Round (Hard Version)", "tags": ["divide and conquer", "dp", "trees"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1987/G1", "name": "Spinning Round (Easy Version)", "tags": ["divide and conquer", "dp", "trees"], "problem_rating": "2900", "solved_by": "x196"},
{"url": "https://codeforces.com//problemset/problem/1987/F2", "name": "Interesting Problem (Hard Version)", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x823"},
{"url": "https://codeforces.com//problemset/problem/1987/F1", "name": "Interesting Problem (Easy Version)", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x936"},
{"url": "https://codeforces.com//problemset/problem/1987/E", "name": "Wonderful Tree!", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2736"},
{"url": "https://codeforces.com//problemset/problem/1987/D", "name": "World is Mine", "tags": ["dp", "games"], "problem_rating": "1800", "solved_by": "x5946"},
{"url": "https://codeforces.com//problemset/problem/1987/C", "name": "Basil's Garden", "tags": ["dp", "greedy"], "problem_rating": "1200", "solved_by": "x14953"},
{"url": "https://codeforces.com//problemset/problem/1987/B", "name": "K-Sort", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x17666"},
{"url": "https://codeforces.com//problemset/problem/1987/A", "name": "Upload More RAM", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22251"},
{"url": "https://codeforces.com//problemset/problem/1986/G2", "name": "Permutation Problem (Hard Version)", "tags": ["brute force", "data structures", "hashing", "math", "number theory"], "problem_rating": "2500", "solved_by": "x856"},
{"url": "https://codeforces.com//problemset/problem/1986/G1", "name": "Permutation Problem (Simple Version)", "tags": ["binary search", "brute force", "combinatorics", "data structures", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1212"},
{"url": "https://codeforces.com//problemset/problem/1986/F", "name": "Non-academic Problem", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3688"},
{"url": "https://codeforces.com//problemset/problem/1986/E", "name": "Beautiful Array", "tags": ["greedy", "math", "number theory", "sortings"], "problem_rating": "1700", "solved_by": "x7427"},
{"url": "https://codeforces.com//problemset/problem/1986/D", "name": "Mathematical Problem", "tags": ["brute force", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x13324"},
{"url": "https://codeforces.com//problemset/problem/1986/C", "name": "Update Queries", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x20754"},
{"url": "https://codeforces.com//problemset/problem/1986/B", "name": "Matrix Stabilization", "tags": ["brute force", "data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24109"},
{"url": "https://codeforces.com//problemset/problem/1986/A", "name": "X Axis", "tags": ["brute force", "geometry", "math", "sortings"], "problem_rating": "800", "solved_by": "x36032"},
{"url": "https://codeforces.com//problemset/problem/1985/H2", "name": "Maximize the Largest Component (Hard Version)", "tags": ["data structures", "dfs and similar", "dp", "dsu", "implementation"], "problem_rating": "2200", "solved_by": "x1273"},
{"url": "https://codeforces.com//problemset/problem/1985/H1", "name": "Maximize the Largest Component (Easy Version)", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1700", "solved_by": "x4669"},
{"url": "https://codeforces.com//problemset/problem/1985/G", "name": "D-Function", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1600", "solved_by": "x7858"},
{"url": "https://codeforces.com//problemset/problem/1985/F", "name": "Final Boss", "tags": ["binary search", "data structures"], "problem_rating": "1500", "solved_by": "x12957"},
{"url": "https://codeforces.com//problemset/problem/1985/E", "name": "Secret Box", "tags": ["brute force", "combinatorics", "math"], "problem_rating": "1200", "solved_by": "x17621"},
{"url": "https://codeforces.com//problemset/problem/1985/D", "name": "Manhattan Circle", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x30682"},
{"url": "https://codeforces.com//problemset/problem/1985/C", "name": "Good Prefixes", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x28255"},
{"url": "https://codeforces.com//problemset/problem/1985/B", "name": "Maximum Multiple Sum", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x40269"},
{"url": "https://codeforces.com//problemset/problem/1985/A", "name": "Creating Words", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x45044"},
{"url": "https://codeforces.com//problemset/problem/1984/H", "name": "Tower Capturing", "tags": ["combinatorics", "dp", "geometry"], "problem_rating": "3300", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1984/G", "name": "Magic Trick II", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "3200", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1984/F", "name": "Reconstruction", "tags": ["brute force", "dp", "math"], "problem_rating": "2500", "solved_by": "x802"},
{"url": "https://codeforces.com//problemset/problem/1984/E", "name": "Shuffle", "tags": ["dp", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1222"},
{"url": "https://codeforces.com//problemset/problem/1984/D", "name": "''a'' String Problem", "tags": ["brute force", "hashing", "implementation", "math", "string suffix structures", "strings"], "problem_rating": "2000", "solved_by": "x2857"},
{"url": "https://codeforces.com//problemset/problem/1984/C2", "name": "Magnitude (Hard Version)", "tags": ["combinatorics", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6486"},
{"url": "https://codeforces.com//problemset/problem/1984/C1", "name": "Magnitude (Easy Version)", "tags": ["dp", "greedy", "math"], "problem_rating": "1300", "solved_by": "x14552"},
{"url": "https://codeforces.com//problemset/problem/1984/B", "name": "Large Addition", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x16582"},
{"url": "https://codeforces.com//problemset/problem/1984/A", "name": "Strange Splitting", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x19560"},
{"url": "https://codeforces.com//problemset/problem/1983/G", "name": "Your Loss", "tags": ["bitmasks", "brute force", "dp", "trees"], "problem_rating": "3000", "solved_by": "x163"},
{"url": "https://codeforces.com//problemset/problem/1983/F", "name": "array-value", "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x944"},
{"url": "https://codeforces.com//problemset/problem/1983/E", "name": "I Love Balls", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1668"},
{"url": "https://codeforces.com//problemset/problem/1983/D", "name": "Swap Dilemma", "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x6995"},
{"url": "https://codeforces.com//problemset/problem/1983/C", "name": "Have Your Cake and Eat It Too", "tags": ["binary search", "brute force", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x10780"},
{"url": "https://codeforces.com//problemset/problem/1983/B", "name": "Corner Twist", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x14317"},
{"url": "https://codeforces.com//problemset/problem/1983/A", "name": "Array Divisibility", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23322"},
{"url": "https://codeforces.com//problemset/problem/1982/F", "name": "Sorting Problem Again", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2600", "solved_by": "x792"},
{"url": "https://codeforces.com//problemset/problem/1982/E", "name": "Number of k-good subarrays", "tags": ["bitmasks", "brute force", "combinatorics", "divide and conquer", "dp", "math", "meet-in-the-middle"], "problem_rating": "2300", "solved_by": "x1345"},
{"url": "https://codeforces.com//problemset/problem/1982/D", "name": "Beauty of the mountains", "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "problem_rating": "1700", "solved_by": "x6135"},
{"url": "https://codeforces.com//problemset/problem/1982/C", "name": "Boring Day", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x15129"},
{"url": "https://codeforces.com//problemset/problem/1982/B", "name": "Collatz Conjecture", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x15080"},
{"url": "https://codeforces.com//problemset/problem/1982/A", "name": "Soccer", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "800", "solved_by": "x22856"},
{"url": "https://codeforces.com//problemset/problem/1981/F", "name": "Turtle and Paths on a Tree", "tags": ["data structures", "dp", "trees"], "problem_rating": "3000", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/1981/E", "name": "Turtle and Intersected Segments", "tags": ["data structures", "dsu", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x704"},
{"url": "https://codeforces.com//problemset/problem/1981/D", "name": "Turtle and Multiplication", "tags": ["constructive algorithms", "dfs and similar", "graphs", "number theory"], "problem_rating": "2400", "solved_by": "x1366"},
{"url": "https://codeforces.com//problemset/problem/1981/C", "name": "Turtle and an Incomplete Sequence", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x4581"},
{"url": "https://codeforces.com//problemset/problem/1981/B", "name": "Turtle and an Infinite Sequence", "tags": ["bitmasks", "math"], "problem_rating": "1300", "solved_by": "x12307"},
{"url": "https://codeforces.com//problemset/problem/1981/A", "name": "Turtle and Piggy Are Playing a Game", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x20642"},
{"url": "https://codeforces.com//problemset/problem/1980/G", "name": "Yasya and the Mysterious Tree", "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "greedy", "strings", "trees"], "problem_rating": "2300", "solved_by": "x1022"},
{"url": "https://codeforces.com//problemset/problem/1980/F2", "name": "Field Division (hard version)", "tags": ["math", "sortings"], "problem_rating": "2400", "solved_by": "x854"},
{"url": "https://codeforces.com//problemset/problem/1980/F1", "name": "Field Division (easy version)", "tags": ["data structures", "math", "sortings"], "problem_rating": "1900", "solved_by": "x3324"},
{"url": "https://codeforces.com//problemset/problem/1980/E", "name": "Permutation of Rows and Columns", "tags": ["constructive algorithms", "data structures", "greedy", "hashing", "implementation", "math", "matrices", "sortings"], "problem_rating": "1600", "solved_by": "x9221"},
{"url": "https://codeforces.com//problemset/problem/1980/D", "name": "GCD-sequence", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "1400", "solved_by": "x12829"},
{"url": "https://codeforces.com//problemset/problem/1980/C", "name": "Sofia and the Lost Operations", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x16965"},
{"url": "https://codeforces.com//problemset/problem/1980/B", "name": "Choosing Cubes", "tags": ["sortings", "sortings"], "problem_rating": "800", "solved_by": "x32204"},
{"url": "https://codeforces.com//problemset/problem/1980/A", "name": "Problem Generator", "tags": ["math"], "problem_rating": "800", "solved_by": "x37305"},
{"url": "https://codeforces.com//problemset/problem/1979/F", "name": "Kostyanych's Theorem", "tags": ["brute force", "constructive algorithms", "graphs", "interactive"], "problem_rating": "2900", "solved_by": "x251"},
{"url": "https://codeforces.com//problemset/problem/1979/E", "name": "Manhattan Triangle", "tags": ["binary search", "constructive algorithms", "data structures", "geometry", "implementation", "two pointers"], "problem_rating": "2400", "solved_by": "x1237"},
{"url": "https://codeforces.com//problemset/problem/1979/D", "name": "Fixing a Binary String", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "hashing", "strings"], "problem_rating": "1800", "solved_by": "x5851"},
{"url": "https://codeforces.com//problemset/problem/1979/C", "name": "Earning on Bets", "tags": ["binary search", "combinatorics", "constructive algorithms", "number theory"], "problem_rating": "1200", "solved_by": "x17003"},
{"url": "https://codeforces.com//problemset/problem/1979/B", "name": "XOR Sequences", "tags": ["bitmasks", "greedy"], "problem_rating": "1000", "solved_by": "x20896"},
{"url": "https://codeforces.com//problemset/problem/1979/A", "name": "Guess the Maximum", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x27211"},
{"url": "https://codeforces.com//problemset/problem/1978/F", "name": "Large Graph", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "number theory", "two pointers"], "problem_rating": "2400", "solved_by": "x1129"},
{"url": "https://codeforces.com//problemset/problem/1978/E", "name": "Computing Machine", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x3233"},
{"url": "https://codeforces.com//problemset/problem/1978/D", "name": "Elections", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9710"},
{"url": "https://codeforces.com//problemset/problem/1978/C", "name": "Manhattan Permutations", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x13169"},
{"url": "https://codeforces.com//problemset/problem/1978/B", "name": "New Bakery", "tags": ["binary search", "greedy", "math", "ternary search"], "problem_rating": "800", "solved_by": "x20426"},
{"url": "https://codeforces.com//problemset/problem/1978/A", "name": "Alice and Books", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x23360"},
{"url": "https://codeforces.com//problemset/problem/1977/E", "name": "Tensor", "tags": ["constructive algorithms", "graphs", "interactive"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1977/D", "name": "XORificator", "tags": ["bitmasks", "brute force", "greedy", "hashing"], "problem_rating": "2300", "solved_by": "x1615"},
{"url": "https://codeforces.com//problemset/problem/1977/C", "name": "Nikita and LCM", "tags": ["brute force", "data structures", "dp", "greedy", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x6012"},
{"url": "https://codeforces.com//problemset/problem/1977/B", "name": "Binary Colouring", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16431"},
{"url": "https://codeforces.com//problemset/problem/1977/A", "name": "Little Nikita", "tags": ["math"], "problem_rating": "800", "solved_by": "x28589"},
{"url": "https://codeforces.com//problemset/problem/1976/F", "name": "Remove Bridges", "tags": ["data structures", "dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/1976/E", "name": "Splittable Permutations", "tags": ["combinatorics", "data structures", "dfs and similar", "greedy", "math", "trees"], "problem_rating": "2500", "solved_by": "x878"},
{"url": "https://codeforces.com//problemset/problem/1976/D", "name": "Invertible Bracket Sequences", "tags": ["binary search", "combinatorics", "data structures", "divide and conquer", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x3666"},
{"url": "https://codeforces.com//problemset/problem/1976/C", "name": "Job Interview", "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x9227"},
{"url": "https://codeforces.com//problemset/problem/1976/B", "name": "Increase/Decrease/Copy", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x20509"},
{"url": "https://codeforces.com//problemset/problem/1976/A", "name": "Verify Password", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x26238"},
{"url": "https://codeforces.com//problemset/problem/1975/I", "name": "Mind Bloom", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1975/H", "name": "378QAQ and Core", "tags": ["greedy", "strings"], "problem_rating": "3500", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1975/G", "name": "Zimpha Fan Club", "tags": ["fft", "greedy", "math", "strings"], "problem_rating": "3000", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/1975/F", "name": "Set", "tags": ["bitmasks", "brute force", "combinatorics", "dfs and similar", "divide and conquer", "dp", "math"], "problem_rating": "2600", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1975/E", "name": "Chain Queries", "tags": ["binary search", "data structures", "dfs and similar", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x2001"},
{"url": "https://codeforces.com//problemset/problem/1975/D", "name": "Paint the Tree", "tags": ["brute force", "dfs and similar", "dp", "greedy", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x5307"},
{"url": "https://codeforces.com//problemset/problem/1975/C", "name": "Chamo and Mocha's Array", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1200", "solved_by": "x13178"},
{"url": "https://codeforces.com//problemset/problem/1975/B", "name": "378QAQ and Mocha's Array", "tags": ["brute force", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x16265"},
{"url": "https://codeforces.com//problemset/problem/1975/A", "name": "Bazoka and Mocha's Array", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x17597"},
{"url": "https://codeforces.com//problemset/problem/1974/G", "name": "Money Buys Less Happiness Now", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3770"},
{"url": "https://codeforces.com//problemset/problem/1974/F", "name": "Cutting Game", "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x3205"},
{"url": "https://codeforces.com//problemset/problem/1974/E", "name": "Money Buys Happiness", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x7030"},
{"url": "https://codeforces.com//problemset/problem/1974/D", "name": "Ingenuity-2", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13438"},
{"url": "https://codeforces.com//problemset/problem/1974/C", "name": "Beautiful Triple Pairs", "tags": ["combinatorics", "data structures"], "problem_rating": "1400", "solved_by": "x14415"},
{"url": "https://codeforces.com//problemset/problem/1974/B", "name": "Symmetric Encoding", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x28549"},
{"url": "https://codeforces.com//problemset/problem/1974/A", "name": "Phone Desktop", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x31247"},
{"url": "https://codeforces.com//problemset/problem/1973/F", "name": "Maximum GCD Sum Queries", "tags": ["bitmasks", "brute force", "dp", "implementation", "number theory"], "problem_rating": "3100", "solved_by": "x182"},
{"url": "https://codeforces.com//problemset/problem/1973/E", "name": "Cat, Fox and Swaps", "tags": ["graphs", "math", "sortings"], "problem_rating": "2500", "solved_by": "x718"},
{"url": "https://codeforces.com//problemset/problem/1973/D", "name": "Cat, Fox and Maximum Array Split", "tags": ["brute force", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1743"},
{"url": "https://codeforces.com//problemset/problem/1973/C", "name": "Cat, Fox and Double Maximum", "tags": ["constructive algorithms", "greedy", "implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x7567"},
{"url": "https://codeforces.com//problemset/problem/1973/B", "name": "Cat, Fox and the Lonely Array", "tags": ["binary search", "bitmasks", "data structures", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x12856"},
{"url": "https://codeforces.com//problemset/problem/1973/A", "name": "Chess For Three", "tags": ["brute force", "dp", "implementation", "math"], "problem_rating": "900", "solved_by": "x22587"},
{"url": "https://codeforces.com//problemset/problem/1972/B", "name": "Coin Games", "tags": ["games"], "problem_rating": "900", "solved_by": "x19778"},
{"url": "https://codeforces.com//problemset/problem/1972/A", "name": "Contest Proposal", "tags": ["brute force", "greedy", "two pointers"], "problem_rating": "800", "solved_by": "x21575"},
{"url": "https://codeforces.com//problemset/problem/1971/H", "name": "±1", "tags": ["2-sat", "dfs and similar", "graphs"], "problem_rating": "2100", "solved_by": "x1528"},
{"url": "https://codeforces.com//problemset/problem/1971/G", "name": "XOUR", "tags": ["data structures", "dsu", "sortings"], "problem_rating": "1700", "solved_by": "x8260"},
{"url": "https://codeforces.com//problemset/problem/1971/F", "name": "Circle Perimeter", "tags": ["binary search", "brute force", "dfs and similar", "geometry", "implementation", "math"], "problem_rating": "1600", "solved_by": "x8878"},
{"url": "https://codeforces.com//problemset/problem/1971/E", "name": "Find the Car", "tags": ["binary search", "math", "sortings"], "problem_rating": "1500", "solved_by": "x12673"},
{"url": "https://codeforces.com//problemset/problem/1971/D", "name": "Binary Cut", "tags": ["dp", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x23717"},
{"url": "https://codeforces.com//problemset/problem/1971/C", "name": "Clock and Strings", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x29700"},
{"url": "https://codeforces.com//problemset/problem/1971/B", "name": "Different String", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x33471"},
{"url": "https://codeforces.com//problemset/problem/1971/A", "name": "My First Sorting Problem", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x40554"},
{"url": "https://codeforces.com//problemset/problem/1970/G3", "name": "Min-Fund Prison (Hard)", "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1970/G2", "name": "Min-Fund Prison (Medium)", "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x474"},
{"url": "https://codeforces.com//problemset/problem/1970/G1", "name": "Min-Fund Prison (Easy)", "tags": ["dfs and similar", "trees"], "problem_rating": "1900", "solved_by": "x1109"},
{"url": "https://codeforces.com//problemset/problem/1970/F3", "name": "Playing Quidditch (Hard)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/1970/F2", "name": "Playing Quidditch (Medium)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x307"},
{"url": "https://codeforces.com//problemset/problem/1970/F1", "name": "Playing Quidditch (Easy)", "tags": ["implementation"], "problem_rating": "2300", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1970/E3", "name": "Trails (Hard)", "tags": ["dp", "matrices"], "problem_rating": "2200", "solved_by": "x566"},
{"url": "https://codeforces.com//problemset/problem/1970/E2", "name": "Trails (Medium)", "tags": ["dp", "matrices"], "problem_rating": "2000", "solved_by": "x998"},
{"url": "https://codeforces.com//problemset/problem/1970/E1", "name": "Trails (Easy)", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x1667"},
{"url": "https://codeforces.com//problemset/problem/1970/D3", "name": "Arithmancy (Hard)", "tags": ["interactive"], "problem_rating": "3100", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1970/D2", "name": "Arithmancy (Medium)", "tags": ["constructive algorithms", "interactive", "probabilities", "strings"], "problem_rating": "2600", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/1970/D1", "name": "Arithmancy (Easy)", "tags": ["brute force", "constructive algorithms", "interactive", "strings"], "problem_rating": "2100", "solved_by": "x512"},
{"url": "https://codeforces.com//problemset/problem/1970/C3", "name": "Game on Tree (Hard)", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1900", "solved_by": "x1234"},
{"url": "https://codeforces.com//problemset/problem/1970/C2", "name": "Game on Tree (Medium)", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1700", "solved_by": "x2117"},
{"url": "https://codeforces.com//problemset/problem/1970/C1", "name": "Game on Tree (Easy)", "tags": ["games"], "problem_rating": "1400", "solved_by": "x2771"},
{"url": "https://codeforces.com//problemset/problem/1970/B3", "name": "Exact Neighbours (Hard)", "tags": ["constructive algorithms"], "problem_rating": "2300", "solved_by": "x399"},
{"url": "https://codeforces.com//problemset/problem/1970/B2", "name": "Exact Neighbours (Medium)", "tags": ["constructive algorithms"], "problem_rating": "2100", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/1970/B1", "name": "Exact Neighbours (Easy)", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x924"},
{"url": "https://codeforces.com//problemset/problem/1970/A3", "name": "Balanced Unshuffle (Hard)", "tags": ["constructive algorithms", "trees"], "problem_rating": "2400", "solved_by": "x398"},
{"url": "https://codeforces.com//problemset/problem/1970/A2", "name": "Balanced Unshuffle (Medium)", "tags": ["brute force", "constructive algorithms", "trees"], "problem_rating": "2400", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/1970/A1", "name": "Balanced Shuffle (Easy)", "tags": ["implementation", "sortings"], "problem_rating": "1000", "solved_by": "x3763"},
{"url": "https://codeforces.com//problemset/problem/1969/F", "name": "Card Pairing", "tags": ["dp", "greedy", "hashing", "implementation"], "problem_rating": "3000", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1969/E", "name": "Unique Array", "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1202"},
{"url": "https://codeforces.com//problemset/problem/1969/D", "name": "Shop Game", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4072"},
{"url": "https://codeforces.com//problemset/problem/1969/C", "name": "Minimizing the Sum", "tags": ["dp", "implementation"], "problem_rating": "1700", "solved_by": "x7699"},
{"url": "https://codeforces.com//problemset/problem/1969/B", "name": "Shifts and Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x17382"},
{"url": "https://codeforces.com//problemset/problem/1969/A", "name": "Two Friends", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x18767"},
{"url": "https://codeforces.com//problemset/problem/1968/G2", "name": "Division + LCP (hard version)", "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "math", "string suffix structures", "strings"], "problem_rating": "2200", "solved_by": "x1730"},
{"url": "https://codeforces.com//problemset/problem/1968/G1", "name": "Division + LCP (easy version)", "tags": ["binary search", "data structures", "dp", "hashing", "string suffix structures", "strings"], "problem_rating": "1900", "solved_by": "x3840"},
{"url": "https://codeforces.com//problemset/problem/1968/F", "name": "Equal XOR Segments", "tags": ["binary search", "data structures"], "problem_rating": "1800", "solved_by": "x4906"},
{"url": "https://codeforces.com//problemset/problem/1968/E", "name": "Cells Arrangement", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x9488"},
{"url": "https://codeforces.com//problemset/problem/1968/D", "name": "Permutation Game", "tags": ["brute force", "dfs and similar", "games", "graphs", "greedy", "math"], "problem_rating": "1300", "solved_by": "x13760"},
{"url": "https://codeforces.com//problemset/problem/1968/C", "name": "Assembly via Remainders", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1000", "solved_by": "x23087"},
{"url": "https://codeforces.com//problemset/problem/1968/B", "name": "Prefiquence", "tags": ["greedy", "two pointers"], "problem_rating": "800", "solved_by": "x26379"},
{"url": "https://codeforces.com//problemset/problem/1968/A", "name": "Maximize?", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x31470"},
{"url": "https://codeforces.com//problemset/problem/1967/F", "name": "Next and Prev", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "3200", "solved_by": "x52"},
{"url": "https://codeforces.com//problemset/problem/1967/E2", "name": "Again Counting Arrays (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3500", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1967/E1", "name": "Again Counting Arrays (Easy Version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3100", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1967/D", "name": "Long Way to be Non-decreasing", "tags": ["binary search", "dfs and similar", "graphs", "implementation", "shortest paths", "two pointers"], "problem_rating": "2800", "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1967/C", "name": "Fenwick Tree", "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "math", "trees"], "problem_rating": "2300", "solved_by": "x1524"},
{"url": "https://codeforces.com//problemset/problem/1967/B2", "name": "Reverse Card (Hard Version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "2200", "solved_by": "x3591"},
{"url": "https://codeforces.com//problemset/problem/1967/B1", "name": "Reverse Card (Easy Version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x12089"},
{"url": "https://codeforces.com//problemset/problem/1967/A", "name": "Permutation Counting", "tags": ["binary search", "greedy", "implementation", "math", "sortings"], "problem_rating": "1400", "solved_by": "x11322"},
{"url": "https://codeforces.com//problemset/problem/1966/B", "name": "Rectangle Filling", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x13928"},
{"url": "https://codeforces.com//problemset/problem/1966/A", "name": "Card Exchange", "tags": ["constructive algorithms", "games", "greedy"], "problem_rating": "800", "solved_by": "x16806"},
{"url": "https://codeforces.com//problemset/problem/1965/F", "name": "Conference", "tags": ["data structures", "flows"], "problem_rating": "3300", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/1965/E", "name": "Connected Cubes", "tags": ["constructive algorithms", "games"], "problem_rating": "3100", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1965/D", "name": "Missing Subarray Sum", "tags": ["constructive algorithms"], "problem_rating": "2900", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1965/C", "name": "Folding Strip", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2300", "solved_by": "x1699"},
{"url": "https://codeforces.com//problemset/problem/1965/B", "name": "Missing Subsequence Sum", "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1800", "solved_by": "x6046"},
{"url": "https://codeforces.com//problemset/problem/1965/A", "name": "Everything Nim", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x12367"},
{"url": "https://codeforces.com//problemset/problem/1958/J", "name": "Necromancer", "tags": ["*special problem"], "problem_rating": "3200", "solved_by": "x27"},
{"url": "https://codeforces.com//problemset/problem/1958/I", "name": "Equal Trees", "tags": ["*special problem", "graphs", "meet-in-the-middle"], "problem_rating": "3100", "solved_by": "x29"},
{"url": "https://codeforces.com//problemset/problem/1958/H", "name": "Composite Spells", "tags": ["*special problem", "dp"], "problem_rating": "2600", "solved_by": "x71"},
{"url": "https://codeforces.com//problemset/problem/1958/G", "name": "Observation Towers", "tags": ["*special problem"], "problem_rating": "2400", "solved_by": "x100"},
{"url": "https://codeforces.com//problemset/problem/1958/F", "name": "Narrow Paths", "tags": ["*special problem", "combinatorics"], "problem_rating": "2000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1958/E", "name": "Yet Another Permutation Constructive", "tags": ["*special problem", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1958/D", "name": "Staircase", "tags": ["*special problem"], "problem_rating": "1600", "solved_by": "x437"},
{"url": "https://codeforces.com//problemset/problem/1958/C", "name": "Firewood", "tags": ["*special problem"], "problem_rating": "1500", "solved_by": "x602"},
{"url": "https://codeforces.com//problemset/problem/1958/B", "name": "Clock in the Pool", "tags": ["*special problem", "math"], "problem_rating": "1400", "solved_by": "x770"},
{"url": "https://codeforces.com//problemset/problem/1958/A", "name": "1-3-5", "tags": ["*special problem", "dp"], "problem_rating": "1100", "solved_by": "x1460"},
{"url": "https://codeforces.com//problemset/problem/1957/F2", "name": "Frequency Mismatch (Hard Version)", "tags": ["binary search", "data structures", "dfs and similar", "hashing", "probabilities", "trees"], "problem_rating": "2700", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1957/F1", "name": "Frequency Mismatch (Easy Version)", "tags": ["binary search", "data structures", "divide and conquer", "hashing", "probabilities", "trees"], "problem_rating": "2600", "solved_by": "x416"},
{"url": "https://codeforces.com//problemset/problem/1957/E", "name": "Carousel of Combinations", "tags": ["brute force", "combinatorics", "dp", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1142"},
{"url": "https://codeforces.com//problemset/problem/1957/D", "name": "A BIT of an Inequality", "tags": ["bitmasks", "brute force", "dp", "math"], "problem_rating": "1900", "solved_by": "x4140"},
{"url": "https://codeforces.com//problemset/problem/1957/C", "name": "How Does the Rook Move?", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x8836"},
{"url": "https://codeforces.com//problemset/problem/1957/B", "name": "A BIT of a Construction", "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x16936"},
{"url": "https://codeforces.com//problemset/problem/1957/A", "name": "Stickogon", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x22132"},
{"url": "https://codeforces.com//problemset/problem/1956/F", "name": "Nene and the Passing Game", "tags": ["constructive algorithms", "data structures", "dsu", "graphs", "sortings"], "problem_rating": "3000", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/1956/E2", "name": "Nene vs. Monsters (Hard Version)", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x772"},
{"url": "https://codeforces.com//problemset/problem/1956/E1", "name": "Nene vs. Monsters (Easy Version)", "tags": ["brute force", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1360"},
{"url": "https://codeforces.com//problemset/problem/1956/D", "name": "Nene and the Mex Operator", "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "dp", "greedy", "implementation", "math"], "problem_rating": "2000", "solved_by": "x3600"},
{"url": "https://codeforces.com//problemset/problem/1956/C", "name": "Nene's Magical Matrix", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x12044"},
{"url": "https://codeforces.com//problemset/problem/1956/B", "name": "Nene and the Card Game", "tags": ["games", "greedy"], "problem_rating": "800", "solved_by": "x20445"},
{"url": "https://codeforces.com//problemset/problem/1956/A", "name": "Nene's Game", "tags": ["binary search", "brute force", "data structures", "games", "greedy"], "problem_rating": "800", "solved_by": "x20663"},
{"url": "https://codeforces.com//problemset/problem/1955/H", "name": "The Most Reckless Defense", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "flows", "graph matchings", "shortest paths"], "problem_rating": "2300", "solved_by": "x1159"},
{"url": "https://codeforces.com//problemset/problem/1955/G", "name": "GCD on a grid", "tags": ["brute force", "dfs and similar", "dp", "implementation", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4097"},
{"url": "https://codeforces.com//problemset/problem/1955/F", "name": "Unfair Game", "tags": ["dp", "games", "greedy", "math", "schedules"], "problem_rating": "1800", "solved_by": "x6564"},
{"url": "https://codeforces.com//problemset/problem/1955/E", "name": "Long Inversions", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x7989"},
{"url": "https://codeforces.com//problemset/problem/1955/D", "name": "Inaccurate Subsequence Search", "tags": ["data structures", "two pointers"], "problem_rating": "1400", "solved_by": "x14297"},
{"url": "https://codeforces.com//problemset/problem/1955/C", "name": "Inhabitant of the Deep Sea", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x19819"},
{"url": "https://codeforces.com//problemset/problem/1955/B", "name": "Progressive Square", "tags": ["constructive algorithms", "data structures", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x26185"},
{"url": "https://codeforces.com//problemset/problem/1955/A", "name": "Yogurt Sale", "tags": ["math"], "problem_rating": "800", "solved_by": "x40333"},
{"url": "https://codeforces.com//problemset/problem/1954/F", "name": "Unique Strings", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3100", "solved_by": "x237"},
{"url": "https://codeforces.com//problemset/problem/1954/E", "name": "Chain Reaction", "tags": ["binary search", "data structures", "dsu", "greedy", "implementation", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2035"},
{"url": "https://codeforces.com//problemset/problem/1954/D", "name": "Colored Balls", "tags": ["combinatorics", "dp", "math", "sortings"], "problem_rating": "1800", "solved_by": "x5571"},
{"url": "https://codeforces.com//problemset/problem/1954/C", "name": "Long Multiplication", "tags": ["greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x18060"},
{"url": "https://codeforces.com//problemset/problem/1954/B", "name": "Make It Ugly", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x17336"},
{"url": "https://codeforces.com//problemset/problem/1954/A", "name": "Painting the Ribbon", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x22617"},
{"url": "https://codeforces.com//problemset/problem/1953/A", "name": "Accuracy-Preserving Summation Algorithm", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1952/J", "name": "Help, what does it mean to be \"Based\"", "tags": ["brute force", "constructive algorithms", "expression parsing", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x734"},
{"url": "https://codeforces.com//problemset/problem/1952/I", "name": "Dark Matter", "tags": ["bitmasks", "geometry"], "problem_rating": [null], "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/1952/H", "name": "Palindrome", "tags": ["implementation", "strings"], "problem_rating": [null], "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/1952/G", "name": "Mathematician Takeover", "tags": ["binary search", "dfs and similar", "math"], "problem_rating": [null], "solved_by": "x986"},
{"url": "https://codeforces.com//problemset/problem/1952/F", "name": "Grid", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x1698"},
{"url": "https://codeforces.com//problemset/problem/1952/E", "name": "Sweep Line", "tags": ["combinatorics", "games", "math"], "problem_rating": [null], "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1952/D", "name": "Are You a Procrastinator?", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x4405"},
{"url": "https://codeforces.com//problemset/problem/1952/C", "name": "They Have Fooled", "tags": ["brute force", "schedules"], "problem_rating": [null], "solved_by": "x2819"},
{"url": "https://codeforces.com//problemset/problem/1952/B", "name": "Is it stated?", "tags": ["strings"], "problem_rating": [null], "solved_by": "x10647"},
{"url": "https://codeforces.com//problemset/problem/1952/A", "name": "Are You a Robot, Again?", "tags": ["strings"], "problem_rating": [null], "solved_by": "x11824"},
{"url": "https://codeforces.com//problemset/problem/1951/I", "name": "Growing Trees", "tags": ["binary search", "constructive algorithms", "flows", "graphs", "greedy"], "problem_rating": "3200", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1951/H", "name": "Thanos Snap", "tags": ["binary search", "dp", "games", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x234"},
{"url": "https://codeforces.com//problemset/problem/1951/G", "name": "Clacking Balls", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "3100", "solved_by": "x306"},
{"url": "https://codeforces.com//problemset/problem/1951/F", "name": "Inversion Composition", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2500", "solved_by": "x719"},
{"url": "https://codeforces.com//problemset/problem/1951/E", "name": "No Palindromes", "tags": ["brute force", "constructive algorithms", "divide and conquer", "greedy", "hashing", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x3355"},
{"url": "https://codeforces.com//problemset/problem/1951/D", "name": "Buying Jewels", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x5129"},
{"url": "https://codeforces.com//problemset/problem/1951/C", "name": "Ticket Hoarding", "tags": ["greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x10834"},
{"url": "https://codeforces.com//problemset/problem/1951/B", "name": "Battle Cows", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1200", "solved_by": "x13667"},
{"url": "https://codeforces.com//problemset/problem/1951/A", "name": "Dual Trigger", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x18531"},
{"url": "https://codeforces.com//problemset/problem/1950/G", "name": "Shuffling Songs", "tags": ["bitmasks", "dfs and similar", "dp", "graphs", "hashing", "implementation", "strings"], "problem_rating": "1900", "solved_by": "x3985"},
{"url": "https://codeforces.com//problemset/problem/1950/F", "name": "0, 1, 2, Tree!", "tags": ["bitmasks", "brute force", "greedy", "implementation", "trees"], "problem_rating": "1700", "solved_by": "x8465"},
{"url": "https://codeforces.com//problemset/problem/1950/E", "name": "Nearly Shortest Repeating Substring", "tags": ["brute force", "implementation", "number theory", "strings"], "problem_rating": "1500", "solved_by": "x13371"},
{"url": "https://codeforces.com//problemset/problem/1950/D", "name": "Product of Binary Decimals", "tags": ["brute force", "dp", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x21966"},
{"url": "https://codeforces.com//problemset/problem/1950/C", "name": "Clock Conversion", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x37560"},
{"url": "https://codeforces.com//problemset/problem/1950/B", "name": "Upscaling", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x35911"},
{"url": "https://codeforces.com//problemset/problem/1950/A", "name": "Stair, Peak, or Neither?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x48085"},
{"url": "https://codeforces.com//problemset/problem/1949/K", "name": "Make Triangle", "tags": ["constructive algorithms", "math"], "problem_rating": "2800", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1949/J", "name": "Amanda the Amoeba", "tags": ["graphs", "implementation", "trees", "two pointers"], "problem_rating": "2600", "solved_by": "x356"},
{"url": "https://codeforces.com//problemset/problem/1949/I", "name": "Disks", "tags": ["dfs and similar", "geometry", "graph matchings", "graphs"], "problem_rating": "1800", "solved_by": "x1499"},
{"url": "https://codeforces.com//problemset/problem/1949/H", "name": "Division Avoidance", "tags": ["greedy", "math"], "problem_rating": "3100", "solved_by": "x78"},
{"url": "https://codeforces.com//problemset/problem/1949/G", "name": "Scooter", "tags": ["graphs", "greedy"], "problem_rating": "2300", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1949/F", "name": "Dating", "tags": ["greedy", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/1949/E", "name": "Damage per Second", "tags": ["brute force", "math"], "problem_rating": "2900", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1949/D", "name": "Funny or Scary?", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/1949/C", "name": "Annual Ants' Gathering", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/1949/B", "name": "Charming Meals", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x2625"},
{"url": "https://codeforces.com//problemset/problem/1949/A", "name": "Grove", "tags": ["brute force", "dfs and similar", "dp", "geometry", "probabilities"], "problem_rating": "3300", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1948/G", "name": "MST with Matching", "tags": ["bitmasks", "brute force", "dsu", "graph matchings", "trees"], "problem_rating": "3100", "solved_by": "x662"},
{"url": "https://codeforces.com//problemset/problem/1948/F", "name": "Rare Coins", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1230"},
{"url": "https://codeforces.com//problemset/problem/1948/E", "name": "Clique Partition", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2820"},
{"url": "https://codeforces.com//problemset/problem/1948/D", "name": "Tandem Repeats?", "tags": ["brute force", "strings", "two pointers"], "problem_rating": "1700", "solved_by": "x8799"},
{"url": "https://codeforces.com//problemset/problem/1948/C", "name": "Arrow Path", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "1300", "solved_by": "x15724"},
{"url": "https://codeforces.com//problemset/problem/1948/B", "name": "Array Fix", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x21851"},
{"url": "https://codeforces.com//problemset/problem/1948/A", "name": "Special Characters", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x27575"},
{"url": "https://codeforces.com//problemset/problem/1946/F", "name": "Nobody is needed", "tags": ["2-sat", "data structures", "dfs and similar", "dp"], "problem_rating": "2500", "solved_by": "x847"},
{"url": "https://codeforces.com//problemset/problem/1946/E", "name": "Girl Permutation", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2285"},
{"url": "https://codeforces.com//problemset/problem/1946/D", "name": "Birthday Gift", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4386"},
{"url": "https://codeforces.com//problemset/problem/1946/C", "name": "Tree Cutting", "tags": ["binary search", "dp", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x9994"},
{"url": "https://codeforces.com//problemset/problem/1946/B", "name": "Maximum Sum", "tags": ["dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x19366"},
{"url": "https://codeforces.com//problemset/problem/1946/A", "name": "Median of an Array", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x25131"},
{"url": "https://codeforces.com//problemset/problem/1945/H", "name": "GCD is Greater", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1945/G", "name": "Cook and Porridge", "tags": ["binary search", "constructive algorithms", "data structures", "implementation"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1945/F", "name": "Kirill and Mushrooms", "tags": ["data structures", "sortings"], "problem_rating": "1900", "solved_by": "x3915"},
{"url": "https://codeforces.com//problemset/problem/1945/E", "name": "Binary Search", "tags": ["binary search", "constructive algorithms", "greedy"], "problem_rating": "1700", "solved_by": "x7597"},
{"url": "https://codeforces.com//problemset/problem/1945/D", "name": "Seraphim the Owl", "tags": ["dp", "greedy"], "problem_rating": "1300", "solved_by": "x13482"},
{"url": "https://codeforces.com//problemset/problem/1945/C", "name": "Left and Right Houses", "tags": ["brute force"], "problem_rating": "1200", "solved_by": "x14061"},
{"url": "https://codeforces.com//problemset/problem/1945/B", "name": "Fireworks", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x21428"},
{"url": "https://codeforces.com//problemset/problem/1945/A", "name": "Setting up Camp", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x26447"},
{"url": "https://codeforces.com//problemset/problem/1944/B", "name": "Equal XOR", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1100", "solved_by": "x15445"},
{"url": "https://codeforces.com//problemset/problem/1944/A", "name": "Destroying Bridges", "tags": ["graphs", "greedy", "math"], "problem_rating": "800", "solved_by": "x22627"},
{"url": "https://codeforces.com//problemset/problem/1943/F", "name": "Minimum Hamming Distance", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/1943/E2", "name": "MEX Game 2 (Hard Version)", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "3300", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1943/E1", "name": "MEX Game 2 (Easy Version)", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "2900", "solved_by": "x406"},
{"url": "https://codeforces.com//problemset/problem/1943/D2", "name": "Counting Is Fun (Hard Version)", "tags": ["combinatorics", "dp"], "problem_rating": "2800", "solved_by": "x667"},
{"url": "https://codeforces.com//problemset/problem/1943/D1", "name": "Counting Is Fun (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1355"},
{"url": "https://codeforces.com//problemset/problem/1943/C", "name": "Tree Compass", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1948"},
{"url": "https://codeforces.com//problemset/problem/1943/B", "name": "Non-Palindromic Substring", "tags": ["hashing", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x3584"},
{"url": "https://codeforces.com//problemset/problem/1943/A", "name": "MEX Game 1", "tags": ["games", "greedy"], "problem_rating": "1300", "solved_by": "x16734"},
{"url": "https://codeforces.com//problemset/problem/1942/H", "name": "Farmer John's Favorite Intern", "tags": ["data structures", "dp", "flows", "trees"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1942/G", "name": "Bessie and Cards", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1942/F", "name": "Farmer John's Favorite Function", "tags": ["brute force", "data structures", "implementation", "math"], "problem_rating": "2700", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/1942/E", "name": "Farm Game", "tags": ["combinatorics", "games"], "problem_rating": "2300", "solved_by": "x1574"},
{"url": "https://codeforces.com//problemset/problem/1942/D", "name": "Learning to Paint", "tags": ["binary search", "data structures", "dfs and similar", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x2640"},
{"url": "https://codeforces.com//problemset/problem/1942/C2", "name": "Bessie's Birthday Cake (Hard Version)", "tags": ["geometry", "greedy", "math"], "problem_rating": "1700", "solved_by": "x5863"},
{"url": "https://codeforces.com//problemset/problem/1942/C1", "name": "Bessie's Birthday Cake (Easy Version)", "tags": ["geometry", "greedy", "math"], "problem_rating": "1300", "solved_by": "x10353"},
{"url": "https://codeforces.com//problemset/problem/1942/B", "name": "Bessie and MEX", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x13266"},
{"url": "https://codeforces.com//problemset/problem/1942/A", "name": "Farmer John's Challenge", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x16670"},
{"url": "https://codeforces.com//problemset/problem/1941/G", "name": "Rudolf and Subway", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2000", "solved_by": "x3264"},
{"url": "https://codeforces.com//problemset/problem/1941/F", "name": "Rudolf and Imbalance", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x5587"},
{"url": "https://codeforces.com//problemset/problem/1941/E", "name": "Rudolf and k Bridges", "tags": ["binary search", "data structures", "dp", "two pointers"], "problem_rating": "1600", "solved_by": "x8945"},
{"url": "https://codeforces.com//problemset/problem/1941/D", "name": "Rudolf and the Ball Game", "tags": ["dfs and similar", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x17614"},
{"url": "https://codeforces.com//problemset/problem/1941/C", "name": "Rudolf and the Ugly String", "tags": ["dp", "greedy", "strings"], "problem_rating": "900", "solved_by": "x31710"},
{"url": "https://codeforces.com//problemset/problem/1941/B", "name": "Rudolf and 121", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1000", "solved_by": "x28258"},
{"url": "https://codeforces.com//problemset/problem/1941/A", "name": "Rudolf and the Ticket", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x40853"},
{"url": "https://codeforces.com//problemset/problem/1940/D", "name": "Almost Certainly", "tags": ["*special problem", "constructive algorithms", "data structures", "sortings"], "problem_rating": [null], "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/1940/C", "name": "Burenka and Pether", "tags": ["*special problem", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "problem_rating": [null], "solved_by": "x34"},
{"url": "https://codeforces.com//problemset/problem/1940/B", "name": "Three Arrays", "tags": ["*special problem", "constructive algorithms", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1940/A", "name": "Parallel Universes", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": [null], "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1939/D", "name": "Big Persimmon", "tags": ["*special problem", "dp", "games"], "problem_rating": [null], "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1939/C", "name": "More Gifts", "tags": ["*special problem", "dfs and similar", "two pointers"], "problem_rating": [null], "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/1939/B", "name": "Evidence Board", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": [null], "solved_by": "x214"},
{"url": "https://codeforces.com//problemset/problem/1939/A", "name": "Draw Polygon Lines", "tags": ["*special problem", "constructive algorithms", "dp", "geometry", "interactive"], "problem_rating": [null], "solved_by": "x21"},
{"url": "https://codeforces.com//problemset/problem/1938/M", "name": "Zig-zag", "tags": [], "problem_rating": "3500", "solved_by": "x50"},
{"url": "https://codeforces.com//problemset/problem/1938/L", "name": "XOR Operations", "tags": [], "problem_rating": "2800", "solved_by": "x259"},
{"url": "https://codeforces.com//problemset/problem/1938/K", "name": "Tree Quiz", "tags": [], "problem_rating": "2400", "solved_by": "x553"},
{"url": "https://codeforces.com//problemset/problem/1938/J", "name": "There and Back Again", "tags": [], "problem_rating": "2100", "solved_by": "x1156"},
{"url": "https://codeforces.com//problemset/problem/1938/I", "name": "Symmetric Boundary", "tags": [], "problem_rating": "2800", "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1938/H", "name": "Pho Restaurant", "tags": [], "problem_rating": "1600", "solved_by": "x1961"},
{"url": "https://codeforces.com//problemset/problem/1938/G", "name": "Personality Test", "tags": [], "problem_rating": "2300", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/1938/F", "name": "Forming Groups", "tags": [], "problem_rating": "2400", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1938/E", "name": "Duplicates", "tags": [], "problem_rating": "2200", "solved_by": "x898"},
{"url": "https://codeforces.com//problemset/problem/1938/D", "name": "Bánh Bò", "tags": [], "problem_rating": "3300", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1938/C", "name": "Bit Counting Sequence", "tags": [], "problem_rating": "1900", "solved_by": "x1327"},
{"url": "https://codeforces.com//problemset/problem/1938/B", "name": "Attraction Score", "tags": [], "problem_rating": "3000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1938/A", "name": "Antiparticle Antiphysics", "tags": [], "problem_rating": "3500", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1937/B", "name": "Binary Path", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14140"},
{"url": "https://codeforces.com//problemset/problem/1937/A", "name": "Shuffle Party", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x22481"},
{"url": "https://codeforces.com//problemset/problem/1936/F", "name": "Grand Finale: Circles", "tags": ["binary search", "geometry"], "problem_rating": "3300", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1936/E", "name": "Yet Yet Another Permutation Problem", "tags": ["divide and conquer", "fft", "math"], "problem_rating": "3400", "solved_by": "x103"},
{"url": "https://codeforces.com//problemset/problem/1936/D", "name": "Bitwise Paradox", "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "problem_rating": "3100", "solved_by": "x464"},
{"url": "https://codeforces.com//problemset/problem/1936/C", "name": "Pokémon Arena", "tags": ["data structures", "graphs", "greedy", "implementation", "shortest paths", "sortings"], "problem_rating": "2400", "solved_by": "x1205"},
{"url": "https://codeforces.com//problemset/problem/1936/B", "name": "Pinball", "tags": ["binary search", "data structures", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x2647"},
{"url": "https://codeforces.com//problemset/problem/1936/A", "name": "Bitwise Operation Wizard", "tags": ["bitmasks", "constructive algorithms", "greedy", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6997"},
{"url": "https://codeforces.com//problemset/problem/1935/F", "name": "Andrey's Tree", "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1935/E", "name": "Distance Learning Courses in MAC", "tags": ["bitmasks", "brute force", "data structures", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1273"},
{"url": "https://codeforces.com//problemset/problem/1935/D", "name": "Exam in MAC", "tags": ["binary search", "combinatorics", "implementation", "math"], "problem_rating": "1800", "solved_by": "x7782"},
{"url": "https://codeforces.com//problemset/problem/1935/C", "name": "Messenger in MAC", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7681"},
{"url": "https://codeforces.com//problemset/problem/1935/B", "name": "Informatics in MAC", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x17608"},
{"url": "https://codeforces.com//problemset/problem/1935/A", "name": "Entertainment in MAC", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x26848"},
{"url": "https://codeforces.com//problemset/problem/1934/E", "name": "Weird LCM Operations", "tags": ["brute force", "constructive algorithms", "number theory"], "problem_rating": "3000", "solved_by": "x206"},
{"url": "https://codeforces.com//problemset/problem/1934/D2", "name": "XOR Break --- Game Version", "tags": ["bitmasks", "games", "greedy", "interactive"], "problem_rating": "2400", "solved_by": "x1278"},
{"url": "https://codeforces.com//problemset/problem/1934/D1", "name": "XOR Break --- Solo Version", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "2100", "solved_by": "x3266"},
{"url": "https://codeforces.com//problemset/problem/1934/C", "name": "Find a Mine", "tags": ["binary search", "constructive algorithms", "geometry", "greedy", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6395"},
{"url": "https://codeforces.com//problemset/problem/1934/B", "name": "Yet Another Coin Problem", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x17865"},
{"url": "https://codeforces.com//problemset/problem/1934/A", "name": "Too Min Too Max", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x24527"},
{"url": "https://codeforces.com//problemset/problem/1933/G", "name": "Turtle Magic: Royal Turtle Shell Pattern", "tags": ["bitmasks", "brute force", "combinatorics", "constructive algorithms", "dfs and similar", "math"], "problem_rating": "2300", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/1933/F", "name": "Turtle Mission: Robot and the Earthquake", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2347"},
{"url": "https://codeforces.com//problemset/problem/1933/E", "name": "Turtle vs. Rabbit Race: Optimal Trainings", "tags": ["binary search", "implementation", "math", "ternary search"], "problem_rating": "1500", "solved_by": "x10529"},
{"url": "https://codeforces.com//problemset/problem/1933/D", "name": "Turtle Tenacity: Continual Mods", "tags": ["constructive algorithms", "greedy", "math", "number theory", "sortings"], "problem_rating": "1200", "solved_by": "x19150"},
{"url": "https://codeforces.com//problemset/problem/1933/C", "name": "Turtle Fingers: Count the Values of k", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1100", "solved_by": "x21732"},
{"url": "https://codeforces.com//problemset/problem/1933/B", "name": "Turtle Math: Fast Three Task", "tags": ["implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x31348"},
{"url": "https://codeforces.com//problemset/problem/1933/A", "name": "Turtle Puzzle: Rearrange and Negate", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x36968"},
{"url": "https://codeforces.com//problemset/problem/1932/G", "name": "Moving Platforms", "tags": ["graphs", "math", "number theory", "shortest paths"], "problem_rating": "2300", "solved_by": "x983"},
{"url": "https://codeforces.com//problemset/problem/1932/F", "name": "Feed Cats", "tags": ["data structures", "dp", "sortings"], "problem_rating": "1900", "solved_by": "x3777"},
{"url": "https://codeforces.com//problemset/problem/1932/E", "name": "Final Countdown", "tags": ["implementation", "math", "number theory"], "problem_rating": "1600", "solved_by": "x7582"},
{"url": "https://codeforces.com//problemset/problem/1932/D", "name": "Card Game", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x10789"},
{"url": "https://codeforces.com//problemset/problem/1932/C", "name": "LR-remainders", "tags": ["brute force", "data structures", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x14841"},
{"url": "https://codeforces.com//problemset/problem/1932/B", "name": "Chaya Calendar", "tags": ["number theory"], "problem_rating": "1100", "solved_by": "x19750"},
{"url": "https://codeforces.com//problemset/problem/1932/A", "name": "Thorns and Coins", "tags": ["dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x28270"},
{"url": "https://codeforces.com//problemset/problem/1931/G", "name": "One-Dimensional Puzzle", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2614"},
{"url": "https://codeforces.com//problemset/problem/1931/F", "name": "Chat Screenshots", "tags": ["combinatorics", "dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x7502"},
{"url": "https://codeforces.com//problemset/problem/1931/E", "name": "Anna and the Valentine's Day Gift", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14570"},
{"url": "https://codeforces.com//problemset/problem/1931/D", "name": "Divisible Pairs", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1300", "solved_by": "x17369"},
{"url": "https://codeforces.com//problemset/problem/1931/C", "name": "Make Equal Again", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x27709"},
{"url": "https://codeforces.com//problemset/problem/1931/B", "name": "Make Equal", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x31259"},
{"url": "https://codeforces.com//problemset/problem/1931/A", "name": "Recovering a Small String", "tags": ["brute force", "strings"], "problem_rating": "800", "solved_by": "x34896"},
{"url": "https://codeforces.com//problemset/problem/1930/I", "name": "Counting Is Fun", "tags": ["combinatorics"], "problem_rating": "3500", "solved_by": "x64"},
{"url": "https://codeforces.com//problemset/problem/1930/H", "name": "Interactive Mex Tree", "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "problem_rating": "3300", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1930/G", "name": "Prefix Max Set Counting", "tags": ["data structures", "dp", "trees"], "problem_rating": "3100", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/1930/F", "name": "Maximize the Difference", "tags": ["bitmasks", "brute force", "dfs and similar"], "problem_rating": "2700", "solved_by": "x666"},
{"url": "https://codeforces.com//problemset/problem/1930/E", "name": "2..3...4.... Wonderful! Wonderful!", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1061"},
{"url": "https://codeforces.com//problemset/problem/1930/D2", "name": "Sum over all Substrings (Hard Version)", "tags": ["bitmasks", "divide and conquer", "dp", "dsu", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2505"},
{"url": "https://codeforces.com//problemset/problem/1930/D1", "name": "Sum over all Substrings (Easy Version)", "tags": ["brute force", "dp", "greedy", "strings"], "problem_rating": "1800", "solved_by": "x3908"},
{"url": "https://codeforces.com//problemset/problem/1930/C", "name": "Lexicographically Largest", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x6741"},
{"url": "https://codeforces.com//problemset/problem/1930/B", "name": "Permutation Printing", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x14510"},
{"url": "https://codeforces.com//problemset/problem/1930/A", "name": "Maximise The Score", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x17939"},
{"url": "https://codeforces.com//problemset/problem/1929/F", "name": "Sasha and the Wedding Binary Search Tree", "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "math", "trees"], "problem_rating": "2300", "solved_by": "x1710"},
{"url": "https://codeforces.com//problemset/problem/1929/E", "name": "Sasha and the Happy Tree Cutting", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "problem_rating": "2300", "solved_by": "x1600"},
{"url": "https://codeforces.com//problemset/problem/1929/D", "name": "Sasha and a Walk in the City", "tags": ["combinatorics", "dp", "math", "trees"], "problem_rating": "1900", "solved_by": "x4461"},
{"url": "https://codeforces.com//problemset/problem/1929/C", "name": "Sasha and the Casino", "tags": ["binary search", "brute force", "constructive algorithms", "games", "greedy", "math"], "problem_rating": "1400", "solved_by": "x14091"},
{"url": "https://codeforces.com//problemset/problem/1929/B", "name": "Sasha and the Drawing", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x24580"},
{"url": "https://codeforces.com//problemset/problem/1929/A", "name": "Sasha and the Beautiful Array", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x30365"},
{"url": "https://codeforces.com//problemset/problem/1928/F", "name": "Digital Patterns", "tags": ["combinatorics", "data structures", "implementation", "math"], "problem_rating": "2900", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1928/E", "name": "Modular Sequence", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1619"},
{"url": "https://codeforces.com//problemset/problem/1928/D", "name": "Lonely Mountain Dungeons", "tags": ["brute force", "data structures", "greedy", "math", "ternary search"], "problem_rating": "1900", "solved_by": "x4008"},
{"url": "https://codeforces.com//problemset/problem/1928/C", "name": "Physical Education Lesson", "tags": ["brute force", "math", "number theory"], "problem_rating": "1600", "solved_by": "x8053"},
{"url": "https://codeforces.com//problemset/problem/1928/B", "name": "Equalize", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x16396"},
{"url": "https://codeforces.com//problemset/problem/1928/A", "name": "Rectangle Cutting", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x21968"},
{"url": "https://codeforces.com//problemset/problem/1927/G", "name": "Paint Charges", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1577"},
{"url": "https://codeforces.com//problemset/problem/1927/F", "name": "Microcycle", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "sortings", "trees"], "problem_rating": "1900", "solved_by": "x4113"},
{"url": "https://codeforces.com//problemset/problem/1927/E", "name": "Klever Permutation", "tags": ["constructive algorithms", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x13243"},
{"url": "https://codeforces.com//problemset/problem/1927/D", "name": "Find the Different Ones!", "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x19847"},
{"url": "https://codeforces.com//problemset/problem/1927/C", "name": "Choose the Different Ones!", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x26801"},
{"url": "https://codeforces.com//problemset/problem/1927/B", "name": "Following the String", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "900", "solved_by": "x31811"},
{"url": "https://codeforces.com//problemset/problem/1927/A", "name": "Make it White", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x41450"},
{"url": "https://codeforces.com//problemset/problem/1926/G", "name": "Vlad and Trouble at MIT", "tags": ["dfs and similar", "dp", "flows", "graphs", "greedy", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3297"},
{"url": "https://codeforces.com//problemset/problem/1926/F", "name": "Vlad and Avoiding X", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1600"},
{"url": "https://codeforces.com//problemset/problem/1926/E", "name": "Vlad and an Odd Ordering", "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11122"},
{"url": "https://codeforces.com//problemset/problem/1926/D", "name": "Vlad and Division", "tags": ["bitmasks", "greedy"], "problem_rating": "1300", "solved_by": "x14656"},
{"url": "https://codeforces.com//problemset/problem/1926/C", "name": "Vlad and a Sum of Sum of Digits", "tags": ["dp", "implementation"], "problem_rating": "1200", "solved_by": "x24975"},
{"url": "https://codeforces.com//problemset/problem/1926/B", "name": "Vlad and Shapes", "tags": ["geometry", "implementation"], "problem_rating": "800", "solved_by": "x31262"},
{"url": "https://codeforces.com//problemset/problem/1926/A", "name": "Vlad and the Best of Five", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x45046"},
{"url": "https://codeforces.com//problemset/problem/1925/D", "name": "Good Trip", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x3422"},
{"url": "https://codeforces.com//problemset/problem/1925/B", "name": "A Balanced Problemset?", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x19168"},
{"url": "https://codeforces.com//problemset/problem/1925/A", "name": "We Got Everything Covered!", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "800", "solved_by": "x28028"},
{"url": "https://codeforces.com//problemset/problem/1924/F", "name": "Anti-Proxy Attendance", "tags": ["constructive algorithms", "dp", "interactive", "ternary search"], "problem_rating": "3500", "solved_by": "x142"},
{"url": "https://codeforces.com//problemset/problem/1924/E", "name": "Paper Cutting Again", "tags": ["combinatorics", "probabilities"], "problem_rating": "3100", "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/1924/D", "name": "Balanced Subsequences", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2700", "solved_by": "x910"},
{"url": "https://codeforces.com//problemset/problem/1924/C", "name": "Fractal Origami", "tags": ["geometry", "math", "matrices"], "problem_rating": "2400", "solved_by": "x1094"},
{"url": "https://codeforces.com//problemset/problem/1924/B", "name": "Space Harbour", "tags": ["data structures", "implementation", "math", "sortings"], "problem_rating": "2100", "solved_by": "x2391"},
{"url": "https://codeforces.com//problemset/problem/1924/A", "name": "Did We Get Everything Covered?", "tags": ["constructive algorithms", "dp", "greedy", "shortest paths", "strings"], "problem_rating": "1500", "solved_by": "x13142"},
{"url": "https://codeforces.com//problemset/problem/1923/F", "name": "Shrink-Reverse", "tags": ["binary search", "brute force", "greedy", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x357"},
{"url": "https://codeforces.com//problemset/problem/1923/E", "name": "Count Paths", "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "problem_rating": "2000", "solved_by": "x3484"},
{"url": "https://codeforces.com//problemset/problem/1923/D", "name": "Slimes", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6342"},
{"url": "https://codeforces.com//problemset/problem/1923/C", "name": "Find B", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x14183"},
{"url": "https://codeforces.com//problemset/problem/1923/B", "name": "Monsters Attack!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x17017"},
{"url": "https://codeforces.com//problemset/problem/1923/A", "name": "Moving Chips", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23991"},
{"url": "https://codeforces.com//problemset/problem/1922/F", "name": "Replace on Segment", "tags": ["dp", "graph matchings"], "problem_rating": "2500", "solved_by": "x1285"},
{"url": "https://codeforces.com//problemset/problem/1922/E", "name": "Increasing Subsequences", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7361"},
{"url": "https://codeforces.com//problemset/problem/1922/D", "name": "Berserk Monsters", "tags": ["brute force", "data structures", "dsu", "implementation", "math"], "problem_rating": "1900", "solved_by": "x5448"},
{"url": "https://codeforces.com//problemset/problem/1922/C", "name": "Closest Cities", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x17715"},
{"url": "https://codeforces.com//problemset/problem/1922/B", "name": "Forming Triangles", "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "problem_rating": "1200", "solved_by": "x19838"},
{"url": "https://codeforces.com//problemset/problem/1922/A", "name": "Tricky Template", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26464"},
{"url": "https://codeforces.com//problemset/problem/1921/G", "name": "Mischievous Shooter", "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1183"},
{"url": "https://codeforces.com//problemset/problem/1921/F", "name": "Sum of Progression", "tags": ["brute force", "data structures", "dp", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3645"},
{"url": "https://codeforces.com//problemset/problem/1921/E", "name": "Eat the Chip", "tags": ["brute force", "games", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9356"},
{"url": "https://codeforces.com//problemset/problem/1921/D", "name": "Very Different Array", "tags": ["data structures", "greedy", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x20866"},
{"url": "https://codeforces.com//problemset/problem/1921/C", "name": "Sending Messages", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x28387"},
{"url": "https://codeforces.com//problemset/problem/1921/B", "name": "Arranging Cats", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x32930"},
{"url": "https://codeforces.com//problemset/problem/1921/A", "name": "Square", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x41524"},
{"url": "https://codeforces.com//problemset/problem/1920/F2", "name": "Smooth Sailing (Hard Version)", "tags": ["binary search", "data structures", "dsu", "geometry", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x434"},
{"url": "https://codeforces.com//problemset/problem/1920/F1", "name": "Smooth Sailing (Easy Version)", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x917"},
{"url": "https://codeforces.com//problemset/problem/1920/E", "name": "Counting Binary Strings", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2496"},
{"url": "https://codeforces.com//problemset/problem/1920/D", "name": "Array Repetition", "tags": ["binary search", "brute force", "dsu", "implementation", "math"], "problem_rating": "1900", "solved_by": "x5335"},
{"url": "https://codeforces.com//problemset/problem/1920/C", "name": "Partitioning the Array", "tags": ["brute force", "math", "number theory"], "problem_rating": "1600", "solved_by": "x12650"},
{"url": "https://codeforces.com//problemset/problem/1920/B", "name": "Summation Game", "tags": ["games", "greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20063"},
{"url": "https://codeforces.com//problemset/problem/1920/A", "name": "Satisfying Constraints", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x27132"},
{"url": "https://codeforces.com//problemset/problem/1919/H", "name": "Tree Diameter", "tags": ["interactive", "trees"], "problem_rating": "2000", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1919/G", "name": "Tree LGM", "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "problem_rating": "3500", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/1919/F2", "name": "Wine Factory (Hard Version)", "tags": ["data structures", "dp", "flows", "greedy", "matrices"], "problem_rating": "2800", "solved_by": "x784"},
{"url": "https://codeforces.com//problemset/problem/1919/F1", "name": "Wine Factory (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "2300", "solved_by": "x2096"},
{"url": "https://codeforces.com//problemset/problem/1919/E", "name": "Counting Prefixes", "tags": ["combinatorics", "constructive algorithms", "dp", "implementation", "math"], "problem_rating": "2600", "solved_by": "x815"},
{"url": "https://codeforces.com//problemset/problem/1919/D", "name": "01 Tree", "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x3711"},
{"url": "https://codeforces.com//problemset/problem/1919/C", "name": "Grouping Increases", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1400", "solved_by": "x17849"},
{"url": "https://codeforces.com//problemset/problem/1919/B", "name": "Plus-Minus Split", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x29322"},
{"url": "https://codeforces.com//problemset/problem/1919/A", "name": "Wallet Exchange", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x32504"},
{"url": "https://codeforces.com//problemset/problem/1918/G", "name": "Permutation of Given", "tags": ["constructive algorithms", "math"], "problem_rating": "2700", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1918/F", "name": "Caterpillar on a Tree", "tags": ["dfs and similar", "graphs", "greedy", "implementation", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x824"},
{"url": "https://codeforces.com//problemset/problem/1918/E", "name": "ace5 and Task Order", "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "problem_rating": "2200", "solved_by": "x1641"},
{"url": "https://codeforces.com//problemset/problem/1918/D", "name": "Blocking Elements", "tags": ["binary search", "data structures", "dp", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x4514"},
{"url": "https://codeforces.com//problemset/problem/1918/C", "name": "XOR-distance", "tags": ["bitmasks", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x13329"},
{"url": "https://codeforces.com//problemset/problem/1918/B", "name": "Minimize Inversions", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x22984"},
{"url": "https://codeforces.com//problemset/problem/1918/A", "name": "Brick Wall", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x29501"},
{"url": "https://codeforces.com//problemset/problem/1917/F", "name": "Construct Tree", "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "problem_rating": "2500", "solved_by": "x931"},
{"url": "https://codeforces.com//problemset/problem/1917/E", "name": "Construct Matrix", "tags": ["constructive algorithms", "math"], "problem_rating": "2500", "solved_by": "x1319"},
{"url": "https://codeforces.com//problemset/problem/1917/D", "name": "Yet Another Inversions Problem", "tags": ["combinatorics", "data structures", "dp", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1716"},
{"url": "https://codeforces.com//problemset/problem/1917/C", "name": "Watering an Array", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9891"},
{"url": "https://codeforces.com//problemset/problem/1917/B", "name": "Erase First or Second Letter", "tags": ["brute force", "combinatorics", "data structures", "dp", "strings"], "problem_rating": "1100", "solved_by": "x20761"},
{"url": "https://codeforces.com//problemset/problem/1917/A", "name": "Least Product", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x24853"},
{"url": "https://codeforces.com//problemset/problem/1916/H2", "name": "Matrix Rank (Hard Version)", "tags": ["combinatorics", "dp", "math", "matrices", "string suffix structures"], "problem_rating": "2700", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/1916/H1", "name": "Matrix Rank (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math", "matrices"], "problem_rating": "2700", "solved_by": "x600"},
{"url": "https://codeforces.com//problemset/problem/1916/G", "name": "Optimizations From Chelsu", "tags": ["divide and conquer", "dp", "number theory", "trees"], "problem_rating": "3500", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1916/F", "name": "Group Division", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2900", "solved_by": "x439"},
{"url": "https://codeforces.com//problemset/problem/1916/E", "name": "Happy Life in University", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2156"},
{"url": "https://codeforces.com//problemset/problem/1916/D", "name": "Mathematical Problem", "tags": ["brute force", "constructive algorithms", "geometry", "math"], "problem_rating": "1700", "solved_by": "x8216"},
{"url": "https://codeforces.com//problemset/problem/1916/C", "name": "Training Before the Olympiad", "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x17285"},
{"url": "https://codeforces.com//problemset/problem/1916/B", "name": "Two Divisors", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1000", "solved_by": "x24745"},
{"url": "https://codeforces.com//problemset/problem/1916/A", "name": "2023", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x25167"},
{"url": "https://codeforces.com//problemset/problem/1915/G", "name": "Bicycles", "tags": ["graphs", "greedy", "implementation", "shortest paths", "sortings"], "problem_rating": "1800", "solved_by": "x5883"},
{"url": "https://codeforces.com//problemset/problem/1915/F", "name": "Greetings", "tags": ["data structures", "divide and conquer", "sortings"], "problem_rating": "1500", "solved_by": "x12648"},
{"url": "https://codeforces.com//problemset/problem/1915/E", "name": "Romantic Glasses", "tags": ["data structures", "greedy", "math"], "problem_rating": "1300", "solved_by": "x20018"},
{"url": "https://codeforces.com//problemset/problem/1915/D", "name": "Unnatural Language Processing", "tags": ["greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x29067"},
{"url": "https://codeforces.com//problemset/problem/1915/C", "name": "Can I Square?", "tags": ["binary search", "implementation"], "problem_rating": "800", "solved_by": "x39964"},
{"url": "https://codeforces.com//problemset/problem/1915/B", "name": "Not Quite Latin Square", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "800", "solved_by": "x40414"},
{"url": "https://codeforces.com//problemset/problem/1915/A", "name": "Odd One Out", "tags": ["bitmasks", "implementation"], "problem_rating": "800", "solved_by": "x53186"},
{"url": "https://codeforces.com//problemset/problem/1914/G2", "name": "Light Bulbs (Hard Version)", "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "graphs", "hashing"], "problem_rating": "2300", "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1914/G1", "name": "Light Bulbs (Easy Version)", "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "dsu", "graphs", "math", "trees"], "problem_rating": "2100", "solved_by": "x1751"},
{"url": "https://codeforces.com//problemset/problem/1914/F", "name": "Programming Competition", "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x3888"},
{"url": "https://codeforces.com//problemset/problem/1914/E2", "name": "Game with Marbles (Hard Version)", "tags": ["games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11791"},
{"url": "https://codeforces.com//problemset/problem/1914/E1", "name": "Game with Marbles (Easy Version)", "tags": ["brute force", "games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11683"},
{"url": "https://codeforces.com//problemset/problem/1914/D", "name": "Three Activities", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x19884"},
{"url": "https://codeforces.com//problemset/problem/1914/C", "name": "Quests", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x22370"},
{"url": "https://codeforces.com//problemset/problem/1914/B", "name": "Preparing for the Contest", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29498"},
{"url": "https://codeforces.com//problemset/problem/1914/A", "name": "Problemsolving Log", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x30772"},
{"url": "https://codeforces.com//problemset/problem/1913/F", "name": "Palindromic Problem", "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x304"},
{"url": "https://codeforces.com//problemset/problem/1913/E", "name": "Matrix Problem", "tags": ["flows", "graphs"], "problem_rating": "2400", "solved_by": "x956"},
{"url": "https://codeforces.com//problemset/problem/1913/D", "name": "Array Collapse", "tags": ["data structures", "divide and conquer", "dp", "trees"], "problem_rating": "2100", "solved_by": "x2906"},
{"url": "https://codeforces.com//problemset/problem/1913/C", "name": "Game with Multiset", "tags": ["binary search", "bitmasks", "brute force", "greedy"], "problem_rating": "1300", "solved_by": "x14355"},
{"url": "https://codeforces.com//problemset/problem/1913/B", "name": "Swap and Delete", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x24106"},
{"url": "https://codeforces.com//problemset/problem/1913/A", "name": "Rating Increase", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22962"},
{"url": "https://codeforces.com//problemset/problem/1912/L", "name": "LOL Lovers", "tags": ["strings"], "problem_rating": "800", "solved_by": "x6687"},
{"url": "https://codeforces.com//problemset/problem/1912/K", "name": "Kim's Quest", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "1800", "solved_by": "x2232"},
{"url": "https://codeforces.com//problemset/problem/1912/J", "name": "Joy of Pokémon Observation", "tags": [], "problem_rating": "2300", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1912/I", "name": "Innovative Washing Machine", "tags": ["geometry", "math", "two pointers"], "problem_rating": "3300", "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1912/H", "name": "Hypercatapult Commute", "tags": ["graphs"], "problem_rating": "2400", "solved_by": "x396"},
{"url": "https://codeforces.com//problemset/problem/1912/G", "name": "Great City Saint Petersburg", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x438"},
{"url": "https://codeforces.com//problemset/problem/1912/F", "name": "Fugitive Frenzy", "tags": ["math", "probabilities"], "problem_rating": "3100", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1912/E", "name": "Evaluate It and Back Again", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2200", "solved_by": "x837"},
{"url": "https://codeforces.com//problemset/problem/1912/D", "name": "Divisibility Test", "tags": ["math"], "problem_rating": "1900", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/1912/C", "name": "Cactus Transformation", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x54"},
{"url": "https://codeforces.com//problemset/problem/1912/B", "name": "Blueprint for Seating", "tags": ["combinatorics", "divide and conquer", "math"], "problem_rating": "2100", "solved_by": "x972"},
{"url": "https://codeforces.com//problemset/problem/1912/A", "name": "Accumulator Apex", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x1965"},
{"url": "https://codeforces.com//problemset/problem/1910/J", "name": "Two Colors", "tags": ["*special problem"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1910/I", "name": "Inverse Problem", "tags": ["*special problem", "combinatorics", "dp"], "problem_rating": "2700", "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1910/H", "name": "Sum of Digits of Sums", "tags": ["*special problem", "binary search", "data structures"], "problem_rating": "2400", "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/1910/G", "name": "Pool Records", "tags": ["*special problem", "greedy"], "problem_rating": "2700", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1910/F", "name": "Build Railway Stations", "tags": ["*special problem", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1910/E", "name": "Maximum Sum Subarrays", "tags": ["*special problem", "dp"], "problem_rating": "2100", "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/1910/D", "name": "Remove and Add", "tags": ["*special problem", "greedy"], "problem_rating": "1800", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/1910/C", "name": "Poisonous Swamp", "tags": ["*special problem", "*special problem", "implementation", "implementation"], "problem_rating": "1600", "solved_by": "x613"},
{"url": "https://codeforces.com//problemset/problem/1910/B", "name": "Security Guard", "tags": ["*special problem", "greedy"], "problem_rating": "1600", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1910/A", "name": "Username", "tags": ["*special problem", "implementation"], "problem_rating": "1100", "solved_by": "x1703"},
{"url": "https://codeforces.com//problemset/problem/1909/I", "name": "Short Permutation Problem", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "1900", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1909/H", "name": "Parallel Swaps Sort", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3500", "solved_by": "x71"},
{"url": "https://codeforces.com//problemset/problem/1909/G", "name": "Pumping Lemma", "tags": ["hashing", "strings"], "problem_rating": "3000", "solved_by": "x371"},
{"url": "https://codeforces.com//problemset/problem/1909/F2", "name": "Small Permutation Problem (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/1909/F1", "name": "Small Permutation Problem (Easy Version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x1708"},
{"url": "https://codeforces.com//problemset/problem/1909/E", "name": "Multiple Lamps", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1309"},
{"url": "https://codeforces.com//problemset/problem/1909/D", "name": "Split Plus K", "tags": ["greedy", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4196"},
{"url": "https://codeforces.com//problemset/problem/1909/C", "name": "Heavy Intervals", "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x10564"},
{"url": "https://codeforces.com//problemset/problem/1909/B", "name": "Make Almost Equal With Mod", "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "problem_rating": "1200", "solved_by": "x15450"},
{"url": "https://codeforces.com//problemset/problem/1909/A", "name": "Distinct Buttons", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x16080"},
{"url": "https://codeforces.com//problemset/problem/1907/G", "name": "Lights", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1835"},
{"url": "https://codeforces.com//problemset/problem/1907/F", "name": "Shift and Reverse", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4628"},
{"url": "https://codeforces.com//problemset/problem/1907/E", "name": "Good Triples", "tags": ["brute force", "combinatorics", "number theory"], "problem_rating": "1600", "solved_by": "x9547"},
{"url": "https://codeforces.com//problemset/problem/1907/D", "name": "Jumping Through Segments", "tags": ["binary search", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x12983"},
{"url": "https://codeforces.com//problemset/problem/1907/C", "name": "Removal of Unattractive Pairs", "tags": ["constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x19321"},
{"url": "https://codeforces.com//problemset/problem/1907/B", "name": "YetnotherrokenKeoard", "tags": ["data structures", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x24433"},
{"url": "https://codeforces.com//problemset/problem/1907/A", "name": "Rook", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x35410"},
{"url": "https://codeforces.com//problemset/problem/1906/M", "name": "Triangle Construction", "tags": ["greedy", "math"], "problem_rating": "1700", "solved_by": "x2474"},
{"url": "https://codeforces.com//problemset/problem/1906/L", "name": "Palindromic Parentheses", "tags": ["constructive algorithms"], "problem_rating": "2500", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1906/K", "name": "Deck-Building Game", "tags": ["divide and conquer", "math"], "problem_rating": "2500", "solved_by": "x274"},
{"url": "https://codeforces.com//problemset/problem/1906/J", "name": "Count BFS Graph", "tags": ["combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1906/I", "name": "Contingency Plan 2", "tags": ["graph matchings"], "problem_rating": "2900", "solved_by": "x132"},
{"url": "https://codeforces.com//problemset/problem/1906/H", "name": "Twin Friends", "tags": ["combinatorics", "dp"], "problem_rating": "2200", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1906/G", "name": "Grid Game 2", "tags": ["games", "number theory"], "problem_rating": "2900", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1906/F", "name": "Maximize The Value", "tags": ["data structures", "sortings"], "problem_rating": "2100", "solved_by": "x995"},
{"url": "https://codeforces.com//problemset/problem/1906/E", "name": "Merge Not Sort", "tags": ["constructive algorithms", "dp"], "problem_rating": "1900", "solved_by": "x1410"},
{"url": "https://codeforces.com//problemset/problem/1906/D", "name": "Spaceship Exploration", "tags": ["binary search", "geometry"], "problem_rating": "2800", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1906/C", "name": "Cursed Game", "tags": ["interactive"], "problem_rating": "3000", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/1906/B", "name": "Button Pressing", "tags": ["bitmasks", "constructive algorithms", "hashing"], "problem_rating": "2600", "solved_by": "x476"},
{"url": "https://codeforces.com//problemset/problem/1906/A", "name": "Easy As ABC", "tags": ["brute force"], "problem_rating": "1000", "solved_by": "x3804"},
{"url": "https://codeforces.com//problemset/problem/1905/F", "name": "Field Should Not Be Empty", "tags": ["brute force", "data structures", "divide and conquer"], "problem_rating": "2600", "solved_by": "x506"},
{"url": "https://codeforces.com//problemset/problem/1905/E", "name": "One-X", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2400", "solved_by": "x903"},
{"url": "https://codeforces.com//problemset/problem/1905/D", "name": "Cyclic MEX", "tags": ["data structures", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3656"},
{"url": "https://codeforces.com//problemset/problem/1905/C", "name": "Largest Subsequence", "tags": ["greedy", "strings"], "problem_rating": "1400", "solved_by": "x11612"},
{"url": "https://codeforces.com//problemset/problem/1905/B", "name": "Begginer's Zelda", "tags": ["greedy", "trees"], "problem_rating": "1100", "solved_by": "x15835"},
{"url": "https://codeforces.com//problemset/problem/1905/A", "name": "Constructive Problems", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x22434"},
{"url": "https://codeforces.com//problemset/problem/1904/F", "name": "Beautiful Tree", "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x339"},
{"url": "https://codeforces.com//problemset/problem/1904/E", "name": "Tree Queries", "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x898"},
{"url": "https://codeforces.com//problemset/problem/1904/D2", "name": "Set To Max (Hard Version)", "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x4114"},
{"url": "https://codeforces.com//problemset/problem/1904/D1", "name": "Set To Max (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x6232"},
{"url": "https://codeforces.com//problemset/problem/1904/C", "name": "Array Game", "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x11763"},
{"url": "https://codeforces.com//problemset/problem/1904/B", "name": "Collecting Game", "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x14098"},
{"url": "https://codeforces.com//problemset/problem/1904/A", "name": "Forked!", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x17833"},
{"url": "https://codeforces.com//problemset/problem/1903/F", "name": "Babysitting", "tags": ["2-sat", "binary search", "data structures", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1903/E", "name": "Geo Game", "tags": ["greedy", "interactive", "math"], "problem_rating": "2000", "solved_by": "x1907"},
{"url": "https://codeforces.com//problemset/problem/1903/D2", "name": "Maximum And Queries (hard version)", "tags": ["bitmasks", "divide and conquer", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x742"},
{"url": "https://codeforces.com//problemset/problem/1903/D1", "name": "Maximum And Queries (easy version)", "tags": ["binary search", "bitmasks", "brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5382"},
{"url": "https://codeforces.com//problemset/problem/1903/C", "name": "Theofanis' Nightmare", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x11217"},
{"url": "https://codeforces.com//problemset/problem/1903/B", "name": "StORage room", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x12110"},
{"url": "https://codeforces.com//problemset/problem/1903/A", "name": "Halloumi Boxes", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x27803"},
{"url": "https://codeforces.com//problemset/problem/1902/F", "name": "Trees and XOR Queries Again", "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x954"},
{"url": "https://codeforces.com//problemset/problem/1902/E", "name": "Collapsing Strings", "tags": ["data structures", "strings", "trees"], "problem_rating": "1900", "solved_by": "x4090"},
{"url": "https://codeforces.com//problemset/problem/1902/D", "name": "Robot Queries", "tags": ["binary search", "data structures", "dp", "implementation"], "problem_rating": "1900", "solved_by": "x3898"},
{"url": "https://codeforces.com//problemset/problem/1902/C", "name": "Insert and Equalize", "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13030"},
{"url": "https://codeforces.com//problemset/problem/1902/B", "name": "Getting Points", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1100", "solved_by": "x13893"},
{"url": "https://codeforces.com//problemset/problem/1902/A", "name": "Binary Imbalance", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x20427"},
{"url": "https://codeforces.com//problemset/problem/1901/F", "name": "Landscaping", "tags": ["binary search", "geometry", "two pointers"], "problem_rating": "2900", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1901/E", "name": "Compressed Tree", "tags": ["dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2200", "solved_by": "x1449"},
{"url": "https://codeforces.com//problemset/problem/1901/D", "name": "Yet Another Monster Fight", "tags": ["binary search", "dp", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6539"},
{"url": "https://codeforces.com//problemset/problem/1901/C", "name": "Add, Divide and Floor", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x11357"},
{"url": "https://codeforces.com//problemset/problem/1901/B", "name": "Chip and Ribbon", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x14503"},
{"url": "https://codeforces.com//problemset/problem/1901/A", "name": "Line Trip", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x28157"},
{"url": "https://codeforces.com//problemset/problem/1900/F", "name": "Local Deletions", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2800", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1900/E", "name": "Transitive Graph", "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation"], "problem_rating": "2100", "solved_by": "x1935"},
{"url": "https://codeforces.com//problemset/problem/1900/D", "name": "Small GCD", "tags": ["bitmasks", "brute force", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3947"},
{"url": "https://codeforces.com//problemset/problem/1900/C", "name": "Anji's Binary Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1300", "solved_by": "x11014"},
{"url": "https://codeforces.com//problemset/problem/1900/B", "name": "Laura and Operations", "tags": ["dp", "math"], "problem_rating": "900", "solved_by": "x16800"},
{"url": "https://codeforces.com//problemset/problem/1900/A", "name": "Cover in Water", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x24477"},
{"url": "https://codeforces.com//problemset/problem/1899/G", "name": "Unusual Entertainment", "tags": ["data structures", "dfs and similar", "dsu", "shortest paths", "sortings", "trees", "two pointers"], "problem_rating": "1900", "solved_by": "x3048"},
{"url": "https://codeforces.com//problemset/problem/1899/F", "name": "Alex's whims", "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1600", "solved_by": "x7134"},
{"url": "https://codeforces.com//problemset/problem/1899/E", "name": "Queue Sort", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x14758"},
{"url": "https://codeforces.com//problemset/problem/1899/D", "name": "Yarik and Musical Notes", "tags": ["hashing", "math", "number theory"], "problem_rating": "1300", "solved_by": "x12947"},
{"url": "https://codeforces.com//problemset/problem/1899/C", "name": "Yarik and Array", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x19607"},
{"url": "https://codeforces.com//problemset/problem/1899/B", "name": "250 Thousand Tons of TNT", "tags": ["brute force", "implementation", "number theory"], "problem_rating": "1100", "solved_by": "x19397"},
{"url": "https://codeforces.com//problemset/problem/1899/A", "name": "Game with Integers", "tags": ["games", "math", "number theory"], "problem_rating": "800", "solved_by": "x41547"},
{"url": "https://codeforces.com//problemset/problem/1898/F", "name": "Vova Escapes the Matrix", "tags": ["brute force", "dfs and similar", "divide and conquer", "shortest paths"], "problem_rating": "2600", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/1898/E", "name": "Sofia and Strings", "tags": ["data structures", "greedy", "sortings", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x2164"},
{"url": "https://codeforces.com//problemset/problem/1898/D", "name": "Absolute Beauty", "tags": ["greedy", "math"], "problem_rating": "1900", "solved_by": "x4998"},
{"url": "https://codeforces.com//problemset/problem/1898/C", "name": "Colorful Grid", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x5206"},
{"url": "https://codeforces.com//problemset/problem/1898/B", "name": "Milena and Admirer", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x11202"},
{"url": "https://codeforces.com//problemset/problem/1898/A", "name": "Milica and String", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x15572"},
{"url": "https://codeforces.com//problemset/problem/1896/H2", "name": "Cyclic Hamming (Hard Version)", "tags": ["brute force", "dp", "fft", "math", "number theory"], "problem_rating": "3500", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1896/H1", "name": "Cyclic Hamming (Easy Version)", "tags": ["brute force", "divide and conquer", "dp", "fft", "math", "number theory"], "problem_rating": "3400", "solved_by": "x87"},
{"url": "https://codeforces.com//problemset/problem/1896/G", "name": "Pepe Racing", "tags": ["constructive algorithms", "implementation", "interactive", "sortings"], "problem_rating": "3200", "solved_by": "x324"},
{"url": "https://codeforces.com//problemset/problem/1896/F", "name": "Bracket Xoring", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2600", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1896/E", "name": "Permutation Sorting", "tags": ["data structures", "sortings"], "problem_rating": "2100", "solved_by": "x2134"},
{"url": "https://codeforces.com//problemset/problem/1896/D", "name": "Ones and Twos", "tags": ["binary search", "data structures", "divide and conquer", "math", "two pointers"], "problem_rating": "1700", "solved_by": "x5474"},
{"url": "https://codeforces.com//problemset/problem/1896/C", "name": "Matching Arrays", "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x9167"},
{"url": "https://codeforces.com//problemset/problem/1896/B", "name": "AB Flipping", "tags": ["greedy", "strings", "two pointers"], "problem_rating": "900", "solved_by": "x14147"},
{"url": "https://codeforces.com//problemset/problem/1896/A", "name": "Jagged Swaps", "tags": ["sortings"], "problem_rating": "800", "solved_by": "x21075"},
{"url": "https://codeforces.com//problemset/problem/1895/G", "name": "Two Characters, Two Colors", "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "problem_rating": "3100", "solved_by": "x182"},
{"url": "https://codeforces.com//problemset/problem/1895/F", "name": "Fancy Arrays", "tags": ["combinatorics", "dp", "math", "matrices"], "problem_rating": "2600", "solved_by": "x702"},
{"url": "https://codeforces.com//problemset/problem/1895/E", "name": "Infinite Card Game", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "dsu", "games", "graphs", "greedy", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1513"},
{"url": "https://codeforces.com//problemset/problem/1895/D", "name": "XOR Construction", "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "problem_rating": "1900", "solved_by": "x5806"},
{"url": "https://codeforces.com//problemset/problem/1895/C", "name": "Torn Lucky Ticket", "tags": ["brute force", "dp", "hashing", "implementation", "math"], "problem_rating": "1400", "solved_by": "x10584"},
{"url": "https://codeforces.com//problemset/problem/1895/B", "name": "Points and Minimum Distance", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x20097"},
{"url": "https://codeforces.com//problemset/problem/1895/A", "name": "Treasure Chest", "tags": ["math"], "problem_rating": "800", "solved_by": "x23966"},
{"url": "https://codeforces.com//problemset/problem/1894/B", "name": "Two Out of Three", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x15325"},
{"url": "https://codeforces.com//problemset/problem/1894/A", "name": "Secret Sport", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x18564"},
{"url": "https://codeforces.com//problemset/problem/1893/E", "name": "Cacti Symphony", "tags": ["combinatorics", "dfs and similar", "dp", "graphs"], "problem_rating": "3500", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/1893/D", "name": "Colorful Constructive", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2600", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/1893/C", "name": "Freedom of Choice", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2538"},
{"url": "https://codeforces.com//problemset/problem/1893/B", "name": "Neutral Tonality", "tags": ["constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x8507"},
{"url": "https://codeforces.com//problemset/problem/1893/A", "name": "Anonymous Informant", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "1400", "solved_by": "x11822"},
{"url": "https://codeforces.com//problemset/problem/1891/F", "name": "A Growing Tree", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x3536"},
{"url": "https://codeforces.com//problemset/problem/1891/E", "name": "Brukhovich and Exams", "tags": ["brute force", "greedy", "implementation", "math", "sortings"], "problem_rating": "2500", "solved_by": "x799"},
{"url": "https://codeforces.com//problemset/problem/1891/D", "name": "Suspicious logarithms", "tags": ["binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x3843"},
{"url": "https://codeforces.com//problemset/problem/1891/C", "name": "Smilo and Monsters", "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x12325"},
{"url": "https://codeforces.com//problemset/problem/1891/B", "name": "Deja Vu", "tags": ["brute force", "math", "sortings"], "problem_rating": "1100", "solved_by": "x16918"},
{"url": "https://codeforces.com//problemset/problem/1891/A", "name": "Sorting with Twos", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x18878"},
{"url": "https://codeforces.com//problemset/problem/1890/B", "name": "Qingshan Loves Strings", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x17150"},
{"url": "https://codeforces.com//problemset/problem/1890/A", "name": "Doremy's Paint 3", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x24087"},
{"url": "https://codeforces.com//problemset/problem/1889/F", "name": "Doremy's Average Tree", "tags": ["data structures", "dp", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1889/E", "name": "Doremy's Swapping Trees", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1889/D", "name": "Game of Stacks", "tags": ["brute force", "dfs and similar", "graphs", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/1889/C2", "name": "Doremy's Drying Plan (Hard Version)", "tags": ["data structures", "dp"], "problem_rating": "2600", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/1889/C1", "name": "Doremy's Drying Plan (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3132"},
{"url": "https://codeforces.com//problemset/problem/1889/B", "name": "Doremy's Connecting Plan", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x7064"},
{"url": "https://codeforces.com//problemset/problem/1889/A", "name": "Qingshan Loves Strings 2", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x12622"},
{"url": "https://codeforces.com//problemset/problem/1887/F", "name": "Minimum Segments", "tags": ["constructive algorithms"], "problem_rating": "3400", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1887/E", "name": "Good Colorings", "tags": ["binary search", "constructive algorithms", "graphs", "interactive"], "problem_rating": "3100", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1887/D", "name": "Split", "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "problem_rating": "2700", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1887/C", "name": "Minimum Array", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "hashing", "two pointers"], "problem_rating": "2400", "solved_by": "x1656"},
{"url": "https://codeforces.com//problemset/problem/1887/B", "name": "Time Travel", "tags": ["binary search", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x2831"},
{"url": "https://codeforces.com//problemset/problem/1886/F", "name": "Diamond Theft", "tags": ["data structures", "greedy"], "problem_rating": "3300", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1886/E", "name": "I Wanna be the Team Leader", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1391"},
{"url": "https://codeforces.com//problemset/problem/1886/D", "name": "Monocarp and the Set", "tags": ["combinatorics", "data structures", "math"], "problem_rating": "2100", "solved_by": "x3450"},
{"url": "https://codeforces.com//problemset/problem/1886/C", "name": "Decreasing String", "tags": ["implementation", "strings"], "problem_rating": "1600", "solved_by": "x10917"},
{"url": "https://codeforces.com//problemset/problem/1886/B", "name": "Fear of the Dark", "tags": ["binary search", "geometry", "math"], "problem_rating": "1200", "solved_by": "x15705"},
{"url": "https://codeforces.com//problemset/problem/1886/A", "name": "Sum of Three", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x25274"},
{"url": "https://codeforces.com//problemset/problem/1885/A", "name": "Deterministic Scheduling for Extended Reality over 5G and Beyond", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1884/E", "name": "Hard Design", "tags": ["greedy", "implementation", "math"], "problem_rating": "2800", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1884/D", "name": "Counting Rhyme", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x3035"},
{"url": "https://codeforces.com//problemset/problem/1884/C", "name": "Medium Design", "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x5819"},
{"url": "https://codeforces.com//problemset/problem/1884/B", "name": "Haunted House", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x12314"},
{"url": "https://codeforces.com//problemset/problem/1884/A", "name": "Simple Design", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x17107"},
{"url": "https://codeforces.com//problemset/problem/1883/G2", "name": "Dances (Hard Version)", "tags": ["binary search", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5143"},
{"url": "https://codeforces.com//problemset/problem/1883/G1", "name": "Dances (Easy version)", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1400", "solved_by": "x10087"},
{"url": "https://codeforces.com//problemset/problem/1883/F", "name": "You Are So Beautiful", "tags": ["data structures"], "problem_rating": "1400", "solved_by": "x8941"},
{"url": "https://codeforces.com//problemset/problem/1883/E", "name": "Look Back", "tags": ["bitmasks", "greedy"], "problem_rating": "1700", "solved_by": "x7619"},
{"url": "https://codeforces.com//problemset/problem/1883/D", "name": "In Love", "tags": ["data structures", "greedy"], "problem_rating": "1500", "solved_by": "x10847"},
{"url": "https://codeforces.com//problemset/problem/1883/C", "name": "Raspberries", "tags": ["dp", "math"], "problem_rating": "1000", "solved_by": "x25048"},
{"url": "https://codeforces.com//problemset/problem/1883/B", "name": "Chemistry", "tags": ["strings"], "problem_rating": "900", "solved_by": "x29486"},
{"url": "https://codeforces.com//problemset/problem/1883/A", "name": "Morning", "tags": ["math"], "problem_rating": "800", "solved_by": "x24943"},
{"url": "https://codeforces.com//problemset/problem/1882/E2", "name": "Two Permutations (Hard Version)", "tags": ["constructive algorithms"], "problem_rating": "3100", "solved_by": "x289"},
{"url": "https://codeforces.com//problemset/problem/1882/E1", "name": "Two Permutations (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy", "number theory"], "problem_rating": "2400", "solved_by": "x988"},
{"url": "https://codeforces.com//problemset/problem/1882/D", "name": "Tree XOR", "tags": ["bitmasks", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5207"},
{"url": "https://codeforces.com//problemset/problem/1882/C", "name": "Card Game", "tags": ["brute force", "greedy"], "problem_rating": "1500", "solved_by": "x11864"},
{"url": "https://codeforces.com//problemset/problem/1882/B", "name": "Sets and Union", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x14987"},
{"url": "https://codeforces.com//problemset/problem/1882/A", "name": "Increasing Sequence", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x24953"},
{"url": "https://codeforces.com//problemset/problem/1881/G", "name": "Anya and the Mysterious String", "tags": ["binary search", "data structures"], "problem_rating": "2000", "solved_by": "x2260"},
{"url": "https://codeforces.com//problemset/problem/1881/F", "name": "Minimum Maximum Distance", "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x6455"},
{"url": "https://codeforces.com//problemset/problem/1881/E", "name": "Block Sequence", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x12910"},
{"url": "https://codeforces.com//problemset/problem/1881/D", "name": "Divide and Equalize", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x15941"},
{"url": "https://codeforces.com//problemset/problem/1881/C", "name": "Perfect Square", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x16570"},
{"url": "https://codeforces.com//problemset/problem/1881/B", "name": "Three Threadlets", "tags": ["math"], "problem_rating": "900", "solved_by": "x24699"},
{"url": "https://codeforces.com//problemset/problem/1881/A", "name": "Don't Try to Count", "tags": ["brute force", "strings"], "problem_rating": "800", "solved_by": "x29634"},
{"url": "https://codeforces.com//problemset/problem/1879/F", "name": "Last Man Standing", "tags": ["brute force", "data structures", "number theory"], "problem_rating": "2800", "solved_by": "x495"},
{"url": "https://codeforces.com//problemset/problem/1879/E", "name": "Interactive Game with Coloring", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation", "interactive", "trees"], "problem_rating": "2400", "solved_by": "x1223"},
{"url": "https://codeforces.com//problemset/problem/1879/D", "name": "Sum of XOR Functions", "tags": ["bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "problem_rating": "1700", "solved_by": "x7032"},
{"url": "https://codeforces.com//problemset/problem/1879/C", "name": "Make it Alternating", "tags": ["combinatorics", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x15994"},
{"url": "https://codeforces.com//problemset/problem/1879/B", "name": "Chips on the Board", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x21875"},
{"url": "https://codeforces.com//problemset/problem/1879/A", "name": "Rigged!", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22807"},
{"url": "https://codeforces.com//problemset/problem/1878/G", "name": "wxhtzdy ORO Tree", "tags": ["binary search", "bitmasks", "brute force", "data structures", "dfs and similar", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x1141"},
{"url": "https://codeforces.com//problemset/problem/1878/F", "name": "Vasilije Loves Number Theory", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3967"},
{"url": "https://codeforces.com//problemset/problem/1878/E", "name": "Iva & Pav", "tags": ["binary search", "bitmasks", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x11967"},
{"url": "https://codeforces.com//problemset/problem/1878/D", "name": "Reverse Madness", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x7982"},
{"url": "https://codeforces.com//problemset/problem/1878/C", "name": "Vasilije in Cacak", "tags": ["math"], "problem_rating": "900", "solved_by": "x30638"},
{"url": "https://codeforces.com//problemset/problem/1878/B", "name": "Aleksa and Stack", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x30801"},
{"url": "https://codeforces.com//problemset/problem/1878/A", "name": "How Much Does Daytona Cost?", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x41577"},
{"url": "https://codeforces.com//problemset/problem/1877/C", "name": "Joyboard", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x10580"},
{"url": "https://codeforces.com//problemset/problem/1877/A", "name": "Goals of Victory", "tags": ["math"], "problem_rating": "800", "solved_by": "x21033"},
{"url": "https://codeforces.com//problemset/problem/1876/G", "name": "Clubstep", "tags": ["binary search", "brute force", "data structures", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1876/F", "name": "Indefinite Clownfish", "tags": ["binary search", "graphs"], "problem_rating": "3500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1876/E", "name": "Ball-Stackable", "tags": ["constructive algorithms", "data structures", "dp", "trees"], "problem_rating": "3300", "solved_by": "x261"},
{"url": "https://codeforces.com//problemset/problem/1876/D", "name": "Lexichromatography", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "two pointers"], "problem_rating": "2500", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/1876/C", "name": "Autosynthesis", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2205"},
{"url": "https://codeforces.com//problemset/problem/1876/B", "name": "Effects of Anti Pimples", "tags": ["combinatorics", "number theory", "sortings"], "problem_rating": "1500", "solved_by": "x7944"},
{"url": "https://codeforces.com//problemset/problem/1876/A", "name": "Helmets in Night Light", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x16250"},
{"url": "https://codeforces.com//problemset/problem/1875/D", "name": "Jellyfish and Mex", "tags": ["dp"], "problem_rating": "1600", "solved_by": "x8165"},
{"url": "https://codeforces.com//problemset/problem/1875/C", "name": "Jellyfish and Green Apple", "tags": ["bitmasks", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x11281"},
{"url": "https://codeforces.com//problemset/problem/1875/A", "name": "Jellyfish and Undertale", "tags": ["brute force", "greedy"], "problem_rating": "900", "solved_by": "x23593"},
{"url": "https://codeforces.com//problemset/problem/1874/G", "name": "Jellyfish and Inscryption", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1874/F", "name": "Jellyfish and OEIS", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x193"},
{"url": "https://codeforces.com//problemset/problem/1874/E", "name": "Jellyfish and Hack", "tags": ["dp", "math"], "problem_rating": "3000", "solved_by": "x294"},
{"url": "https://codeforces.com//problemset/problem/1874/D", "name": "Jellyfish and Miku", "tags": ["divide and conquer", "dp", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x682"},
{"url": "https://codeforces.com//problemset/problem/1874/C", "name": "Jellyfish and EVA", "tags": ["dp", "graphs", "greedy", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1559"},
{"url": "https://codeforces.com//problemset/problem/1874/B", "name": "Jellyfish and Math", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1109"},
{"url": "https://codeforces.com//problemset/problem/1874/A", "name": "Jellyfish and Game", "tags": ["brute force", "games", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16562"},
{"url": "https://codeforces.com//problemset/problem/1873/H", "name": "Mad City", "tags": ["dfs and similar", "dsu", "games", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x6996"},
{"url": "https://codeforces.com//problemset/problem/1873/G", "name": "ABBC or BACB", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x12587"},
{"url": "https://codeforces.com//problemset/problem/1873/F", "name": "Money Trees", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x14765"},
{"url": "https://codeforces.com//problemset/problem/1873/E", "name": "Building an Aquarium", "tags": ["binary search", "sortings"], "problem_rating": "1100", "solved_by": "x24878"},
{"url": "https://codeforces.com//problemset/problem/1873/D", "name": "1D Eraser", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "800", "solved_by": "x34057"},
{"url": "https://codeforces.com//problemset/problem/1873/C", "name": "Target Practice", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x37930"},
{"url": "https://codeforces.com//problemset/problem/1873/B", "name": "Good Kid", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x46666"},
{"url": "https://codeforces.com//problemset/problem/1873/A", "name": "Short Sort", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x51541"},
{"url": "https://codeforces.com//problemset/problem/1872/G", "name": "Replace With Product", "tags": ["brute force", "greedy", "math"], "problem_rating": "2000", "solved_by": "x4119"},
{"url": "https://codeforces.com//problemset/problem/1872/F", "name": "Selling a Menagerie", "tags": ["dfs and similar", "dsu", "graphs", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6069"},
{"url": "https://codeforces.com//problemset/problem/1872/E", "name": "Data Structures Fan", "tags": ["binary search", "bitmasks", "data structures", "dp"], "problem_rating": "1500", "solved_by": "x12831"},
{"url": "https://codeforces.com//problemset/problem/1872/D", "name": "Plus Minus Permutation", "tags": ["math"], "problem_rating": "1200", "solved_by": "x22457"},
{"url": "https://codeforces.com//problemset/problem/1872/C", "name": "Non-coprime Split", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x22778"},
{"url": "https://codeforces.com//problemset/problem/1872/B", "name": "The Corridor or There and Back Again", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x27343"},
{"url": "https://codeforces.com//problemset/problem/1872/A", "name": "Two Vessels", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x38318"},
{"url": "https://codeforces.com//problemset/problem/1870/H", "name": "Standard Graph Problem", "tags": ["data structures", "graphs", "greedy", "trees"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1870/G", "name": "MEXanization", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1870/F", "name": "Lazy Numbers", "tags": ["binary search", "math"], "problem_rating": "2900", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1870/E", "name": "Another MEX Problem", "tags": ["bitmasks", "brute force", "dp", "shortest paths"], "problem_rating": "2300", "solved_by": "x2280"},
{"url": "https://codeforces.com//problemset/problem/1870/D", "name": "Prefix Purchase", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x6659"},
{"url": "https://codeforces.com//problemset/problem/1870/C", "name": "Colorful Table", "tags": ["binary search", "data structures", "dp", "implementation", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x11159"},
{"url": "https://codeforces.com//problemset/problem/1870/B", "name": "Friendly Arrays", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1200", "solved_by": "x13853"},
{"url": "https://codeforces.com//problemset/problem/1870/A", "name": "MEXanized Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x18828"},
{"url": "https://codeforces.com//problemset/problem/1869/B", "name": "2D Traveling", "tags": ["geometry", "math", "shortest paths", "sortings"], "problem_rating": "1100", "solved_by": "x15351"},
{"url": "https://codeforces.com//problemset/problem/1869/A", "name": "Make It Zero", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x20150"},
{"url": "https://codeforces.com//problemset/problem/1868/F", "name": "LIS?", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "3500", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1868/E", "name": "Min-Sum-Max", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1868/D", "name": "Flower-like Pseudotree", "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1868/C", "name": "Travel Plan", "tags": ["combinatorics", "dp", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1115"},
{"url": "https://codeforces.com//problemset/problem/1868/B2", "name": "Candy Party (Hard Version)", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2343"},
{"url": "https://codeforces.com//problemset/problem/1868/B1", "name": "Candy Party (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "graphs", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6754"},
{"url": "https://codeforces.com//problemset/problem/1868/A", "name": "Fill in the Matrix", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x11658"},
{"url": "https://codeforces.com//problemset/problem/1867/F", "name": "Most Different Tree", "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "hashing"], "problem_rating": "2700", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/1867/E2", "name": "Salyg1n and Array (hard version)", "tags": ["constructive algorithms", "interactive"], "problem_rating": "2200", "solved_by": "x3092"},
{"url": "https://codeforces.com//problemset/problem/1867/E1", "name": "Salyg1n and Array (simple version)", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x3646"},
{"url": "https://codeforces.com//problemset/problem/1867/D", "name": "Cyclic Operations", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x5582"},
{"url": "https://codeforces.com//problemset/problem/1867/C", "name": "Salyg1n and the MEX Game", "tags": ["constructive algorithms", "data structures", "games", "greedy", "interactive"], "problem_rating": "1300", "solved_by": "x10943"},
{"url": "https://codeforces.com//problemset/problem/1867/B", "name": "XOR Palindromes", "tags": ["bitmasks", "constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x16410"},
{"url": "https://codeforces.com//problemset/problem/1867/A", "name": "green_gold_dog, array and permutation", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x19686"},
{"url": "https://codeforces.com//problemset/problem/1866/M", "name": "Mighty Rock Tower", "tags": ["brute force", "combinatorics", "dp", "math", "probabilities"], "problem_rating": "2400", "solved_by": "x711"},
{"url": "https://codeforces.com//problemset/problem/1866/L", "name": "Lihmuf Balling", "tags": ["binary search", "brute force", "math"], "problem_rating": "2400", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1866/K", "name": "Keen Tree Calculation", "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x425"},
{"url": "https://codeforces.com//problemset/problem/1866/J", "name": "Jackets and Packets", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1866/I", "name": "Imagination Castle", "tags": ["dp", "games", "two pointers"], "problem_rating": "2300", "solved_by": "x690"},
{"url": "https://codeforces.com//problemset/problem/1866/H", "name": "Happy Sets", "tags": ["combinatorics"], "problem_rating": "2100", "solved_by": "x1568"},
{"url": "https://codeforces.com//problemset/problem/1866/G", "name": "Grouped Carriages", "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "problem_rating": "2100", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/1866/F", "name": "Freak Joker Process", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "3100", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1866/E", "name": "Elevators of Tamem", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x283"},
{"url": "https://codeforces.com//problemset/problem/1866/D", "name": "Digital Wallet", "tags": ["dp", "greedy"], "problem_rating": "2300", "solved_by": "x1234"},
{"url": "https://codeforces.com//problemset/problem/1866/C", "name": "Completely Searching for Inversions", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "1900", "solved_by": "x2940"},
{"url": "https://codeforces.com//problemset/problem/1866/B", "name": "Battling with Numbers", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1400", "solved_by": "x7470"},
{"url": "https://codeforces.com//problemset/problem/1866/A", "name": "Ambitious Kid", "tags": ["math"], "problem_rating": "800", "solved_by": "x19917"},
{"url": "https://codeforces.com//problemset/problem/1864/I", "name": "Future Dominators", "tags": ["graphs", "greedy"], "problem_rating": "3500", "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1864/H", "name": "Asterism Stream", "tags": ["dp", "math", "matrices"], "problem_rating": "3200", "solved_by": "x277"},
{"url": "https://codeforces.com//problemset/problem/1864/G", "name": "Magic Square", "tags": ["combinatorics", "constructive algorithms", "implementation"], "problem_rating": "3100", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/1864/F", "name": "Exotic Queries", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x1358"},
{"url": "https://codeforces.com//problemset/problem/1864/E", "name": "Guess Game", "tags": ["bitmasks", "data structures", "games", "math", "probabilities", "sortings", "strings", "trees"], "problem_rating": "2100", "solved_by": "x2522"},
{"url": "https://codeforces.com//problemset/problem/1864/D", "name": "Matrix Cascade", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6550"},
{"url": "https://codeforces.com//problemset/problem/1864/C", "name": "Divisor Chain", "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13092"},
{"url": "https://codeforces.com//problemset/problem/1864/B", "name": "Swap and Reverse", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x15095"},
{"url": "https://codeforces.com//problemset/problem/1864/A", "name": "Increasing and Decreasing", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x20072"},
{"url": "https://codeforces.com//problemset/problem/1863/I", "name": "Redundant Routes", "tags": ["constructive algorithms", "dp", "trees"], "problem_rating": "3500", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1863/H", "name": "Goldberg Machine 3", "tags": ["dp", "trees"], "problem_rating": "3500", "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1863/G", "name": "Swaps", "tags": ["combinatorics", "dp", "graphs", "math"], "problem_rating": "2800", "solved_by": "x588"},
{"url": "https://codeforces.com//problemset/problem/1863/F", "name": "Divide, XOR, and Conquer", "tags": ["bitmasks", "dp", "math"], "problem_rating": "2600", "solved_by": "x1070"},
{"url": "https://codeforces.com//problemset/problem/1863/E", "name": "Speedrun", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x2675"},
{"url": "https://codeforces.com//problemset/problem/1863/D", "name": "Two-Colored Dominoes", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x9242"},
{"url": "https://codeforces.com//problemset/problem/1863/C", "name": "MEX Repetition", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x13717"},
{"url": "https://codeforces.com//problemset/problem/1863/B", "name": "Split Sort", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14904"},
{"url": "https://codeforces.com//problemset/problem/1863/A", "name": "Channel", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x17718"},
{"url": "https://codeforces.com//problemset/problem/1862/G", "name": "The Great Equalizer", "tags": ["binary search", "data structures", "math", "sortings"], "problem_rating": "2000", "solved_by": "x2765"},
{"url": "https://codeforces.com//problemset/problem/1862/F", "name": "Magic Will Save the World", "tags": ["binary search", "bitmasks", "brute force", "dp"], "problem_rating": "1800", "solved_by": "x5998"},
{"url": "https://codeforces.com//problemset/problem/1862/E", "name": "Kolya and Movie Theatre", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1600", "solved_by": "x10283"},
{"url": "https://codeforces.com//problemset/problem/1862/D", "name": "Ice Cream Balls", "tags": ["binary search", "combinatorics", "constructive algorithms", "math"], "problem_rating": "1300", "solved_by": "x16670"},
{"url": "https://codeforces.com//problemset/problem/1862/C", "name": "Flower City Fence", "tags": ["binary search", "data structures", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x20248"},
{"url": "https://codeforces.com//problemset/problem/1862/B", "name": "Sequence Game", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x30404"},
{"url": "https://codeforces.com//problemset/problem/1862/A", "name": "Gift Carpet", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x31734"},
{"url": "https://codeforces.com//problemset/problem/1861/F", "name": "Four Suits", "tags": ["binary search", "bitmasks", "flows", "greedy"], "problem_rating": "3200", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1861/E", "name": "Non-Intersecting Subpermutations", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1662"},
{"url": "https://codeforces.com//problemset/problem/1861/D", "name": "Sorting By Multiplication", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x6518"},
{"url": "https://codeforces.com//problemset/problem/1861/C", "name": "Queries for the Array", "tags": ["data structures", "dfs and similar", "implementation", "strings", "trees"], "problem_rating": "1600", "solved_by": "x9806"},
{"url": "https://codeforces.com//problemset/problem/1861/B", "name": "Two Binary Strings", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1000", "solved_by": "x20866"},
{"url": "https://codeforces.com//problemset/problem/1861/A", "name": "Prime Deletion", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23576"},
{"url": "https://codeforces.com//problemset/problem/1860/F", "name": "Evaluate RBS", "tags": ["data structures", "geometry", "implementation", "math", "sortings"], "problem_rating": "2900", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1860/E", "name": "Fast Travel Text Editor", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1348"},
{"url": "https://codeforces.com//problemset/problem/1860/D", "name": "Balanced String", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x2874"},
{"url": "https://codeforces.com//problemset/problem/1860/C", "name": "Game on Permutation", "tags": ["data structures", "dp", "games", "greedy"], "problem_rating": "1400", "solved_by": "x12914"},
{"url": "https://codeforces.com//problemset/problem/1860/B", "name": "Fancy Coins", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16524"},
{"url": "https://codeforces.com//problemset/problem/1860/A", "name": "Not a Substring", "tags": ["constructive algorithms", "strings"], "problem_rating": "900", "solved_by": "x21310"},
{"url": "https://codeforces.com//problemset/problem/1859/F", "name": "Teleportation in Byteland", "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "problem_rating": "3200", "solved_by": "x386"},
{"url": "https://codeforces.com//problemset/problem/1859/E", "name": "Maximum Monogonosity", "tags": ["brute force", "dp", "math"], "problem_rating": "2500", "solved_by": "x1735"},
{"url": "https://codeforces.com//problemset/problem/1859/D", "name": "Andrey and Escape from Capygrad", "tags": ["binary search", "data structures", "dp", "dsu", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6796"},
{"url": "https://codeforces.com//problemset/problem/1859/C", "name": "Another Permutation Problem", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16678"},
{"url": "https://codeforces.com//problemset/problem/1859/B", "name": "Olya and Game with Arrays", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x25733"},
{"url": "https://codeforces.com//problemset/problem/1859/A", "name": "United We Stand", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "800", "solved_by": "x30802"},
{"url": "https://codeforces.com//problemset/problem/1858/E2", "name": "Rollbacks (Hard Version)", "tags": ["data structures", "interactive", "trees"], "problem_rating": "2600", "solved_by": "x1027"},
{"url": "https://codeforces.com//problemset/problem/1858/E1", "name": "Rollbacks (Easy Version)", "tags": ["brute force", "data structures", "dfs and similar", "trees"], "problem_rating": "2500", "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1858/D", "name": "Trees and Segments", "tags": ["brute force", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "2200", "solved_by": "x2757"},
{"url": "https://codeforces.com//problemset/problem/1858/C", "name": "Yet Another Permutation Problem", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x22573"},
{"url": "https://codeforces.com//problemset/problem/1858/B", "name": "The Walkway", "tags": ["brute force", "dp", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11036"},
{"url": "https://codeforces.com//problemset/problem/1858/A", "name": "Buttons", "tags": ["games", "greedy", "math"], "problem_rating": "800", "solved_by": "x36310"},
{"url": "https://codeforces.com//problemset/problem/1857/G", "name": "Counting Graphs", "tags": ["combinatorics", "divide and conquer", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2000", "solved_by": "x4266"},
{"url": "https://codeforces.com//problemset/problem/1857/F", "name": "Sum and Product", "tags": ["binary search", "data structures", "math"], "problem_rating": "1600", "solved_by": "x10972"},
{"url": "https://codeforces.com//problemset/problem/1857/E", "name": "Power of Points", "tags": ["math", "sortings"], "problem_rating": "1500", "solved_by": "x12000"},
{"url": "https://codeforces.com//problemset/problem/1857/D", "name": "Strong Vertices", "tags": ["math", "sortings", "trees"], "problem_rating": "1300", "solved_by": "x18649"},
{"url": "https://codeforces.com//problemset/problem/1857/C", "name": "Assembly via Minimums", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x24448"},
{"url": "https://codeforces.com//problemset/problem/1857/B", "name": "Maximum Rounding", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x22586"},
{"url": "https://codeforces.com//problemset/problem/1857/A", "name": "Array Coloring", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x45754"},
{"url": "https://codeforces.com//problemset/problem/1856/E2", "name": "PermuTree (hard version)", "tags": ["bitmasks", "dfs and similar", "dp", "fft", "greedy", "implementation", "math", "trees"], "problem_rating": "2700", "solved_by": "x1350"},
{"url": "https://codeforces.com//problemset/problem/1856/E1", "name": "PermuTree (easy version)", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1800", "solved_by": "x5126"},
{"url": "https://codeforces.com//problemset/problem/1856/D", "name": "More Wrong", "tags": ["divide and conquer", "interactive"], "problem_rating": "2100", "solved_by": "x3178"},
{"url": "https://codeforces.com//problemset/problem/1856/C", "name": "To Become Max", "tags": ["binary search", "brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x11753"},
{"url": "https://codeforces.com//problemset/problem/1856/B", "name": "Good Arrays", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x23751"},
{"url": "https://codeforces.com//problemset/problem/1856/A", "name": "Tales of a Sort", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26167"},
{"url": "https://codeforces.com//problemset/problem/1855/B", "name": "Longest Divisors Interval", "tags": ["brute force", "combinatorics", "greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x25206"},
{"url": "https://codeforces.com//problemset/problem/1855/A", "name": "Dalton the Teacher", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x27619"},
{"url": "https://codeforces.com//problemset/problem/1854/F", "name": "Mark and Spaceship", "tags": ["brute force", "dp"], "problem_rating": "3500", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1854/E", "name": "Game Bundles", "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "3000", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1854/D", "name": "Michael and Hotel", "tags": ["binary search", "interactive", "trees"], "problem_rating": "3000", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/1854/C", "name": "Expected Destruction", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1431"},
{"url": "https://codeforces.com//problemset/problem/1854/B", "name": "Earn or Unlock", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "2200", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/1854/A2", "name": "Dual (Hard Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1900", "solved_by": "x6842"},
{"url": "https://codeforces.com//problemset/problem/1854/A1", "name": "Dual (Easy Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x13751"},
{"url": "https://codeforces.com//problemset/problem/1853/B", "name": "Fibonaccharsis", "tags": ["binary search", "brute force", "math"], "problem_rating": "1200", "solved_by": "x17008"},
{"url": "https://codeforces.com//problemset/problem/1853/A", "name": "Desorting", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x30058"},
{"url": "https://codeforces.com//problemset/problem/1852/F", "name": "Panda Meetups", "tags": ["data structures", "dp", "flows"], "problem_rating": "3500", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1852/E", "name": "Rivalries", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "3400", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1852/D", "name": "Miriany and Matchstick", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x434"},
{"url": "https://codeforces.com//problemset/problem/1852/C", "name": "Ina of the Mountain", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1489"},
{"url": "https://codeforces.com//problemset/problem/1852/B", "name": "Imbalanced Arrays", "tags": ["constructive algorithms", "graphs", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x4304"},
{"url": "https://codeforces.com//problemset/problem/1852/A", "name": "Ntarsis' Set", "tags": ["binary search", "math", "number theory"], "problem_rating": "1800", "solved_by": "x7815"},
{"url": "https://codeforces.com//problemset/problem/1851/G", "name": "Vlad and the Mountains", "tags": ["binary search", "data structures", "dsu", "graphs", "implementation", "sortings", "trees", "two pointers"], "problem_rating": "2000", "solved_by": "x3101"},
{"url": "https://codeforces.com//problemset/problem/1851/F", "name": "Lisa and the Martians", "tags": ["bitmasks", "greedy", "math", "strings", "trees"], "problem_rating": "1800", "solved_by": "x5593"},
{"url": "https://codeforces.com//problemset/problem/1851/E", "name": "Nastya and Potions", "tags": ["dfs and similar", "dp", "graphs", "sortings"], "problem_rating": "1500", "solved_by": "x9903"},
{"url": "https://codeforces.com//problemset/problem/1851/D", "name": "Prefix Permutation Sums", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x14821"},
{"url": "https://codeforces.com//problemset/problem/1851/C", "name": "Tiles Comeback", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x22884"},
{"url": "https://codeforces.com//problemset/problem/1851/B", "name": "Parity Sort", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x28791"},
{"url": "https://codeforces.com//problemset/problem/1851/A", "name": "Escalator Conversations", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29163"},
{"url": "https://codeforces.com//problemset/problem/1850/H", "name": "The Third Letter", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7877"},
{"url": "https://codeforces.com//problemset/problem/1850/G", "name": "The Morning Star", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math", "sortings"], "problem_rating": "1500", "solved_by": "x11832"},
{"url": "https://codeforces.com//problemset/problem/1850/F", "name": "We Were Both Children", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x18197"},
{"url": "https://codeforces.com//problemset/problem/1850/E", "name": "Cardboard for Pictures", "tags": ["binary search", "geometry", "implementation", "math"], "problem_rating": "1100", "solved_by": "x22021"},
{"url": "https://codeforces.com//problemset/problem/1850/D", "name": "Balanced Round", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x34584"},
{"url": "https://codeforces.com//problemset/problem/1850/C", "name": "Word on the Paper", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x42789"},
{"url": "https://codeforces.com//problemset/problem/1850/B", "name": "Ten Words of Wisdom", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x41783"},
{"url": "https://codeforces.com//problemset/problem/1850/A", "name": "To My Critics", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x53618"},
{"url": "https://codeforces.com//problemset/problem/1849/F", "name": "XOR Partition", "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "problem_rating": "2700", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1849/E", "name": "Max to the Right of Min", "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "problem_rating": "2300", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/1849/D", "name": "Array Painting", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x8183"},
{"url": "https://codeforces.com//problemset/problem/1849/C", "name": "Binary String Copying", "tags": ["binary search", "brute force", "data structures", "hashing", "strings"], "problem_rating": "1600", "solved_by": "x10205"},
{"url": "https://codeforces.com//problemset/problem/1849/B", "name": "Monsters", "tags": ["greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x24192"},
{"url": "https://codeforces.com//problemset/problem/1849/A", "name": "Morning Sandwich", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x27508"},
{"url": "https://codeforces.com//problemset/problem/1848/F", "name": "Vika and Wiki", "tags": ["binary search", "bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "problem_rating": "2400", "solved_by": "x1500"},
{"url": "https://codeforces.com//problemset/problem/1848/E", "name": "Vika and Stone Skipping", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "2600", "solved_by": "x763"},
{"url": "https://codeforces.com//problemset/problem/1848/D", "name": "Vika and Bonuses", "tags": ["binary search", "brute force", "math", "ternary search"], "problem_rating": "2200", "solved_by": "x2565"},
{"url": "https://codeforces.com//problemset/problem/1848/C", "name": "Vika and Price Tags", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x6149"},
{"url": "https://codeforces.com//problemset/problem/1848/B", "name": "Vika and the Bridge", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "1200", "solved_by": "x14174"},
{"url": "https://codeforces.com//problemset/problem/1848/A", "name": "Vika and Her Friends", "tags": ["games", "math"], "problem_rating": "900", "solved_by": "x16557"},
{"url": "https://codeforces.com//problemset/problem/1847/F", "name": "The Boss's Identity", "tags": ["binary search", "bitmasks", "data structures", "dfs and similar", "greedy", "math", "sortings"], "problem_rating": "2500", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/1847/E", "name": "Triangle Platinum?", "tags": ["brute force", "combinatorics", "implementation", "interactive", "math", "probabilities"], "problem_rating": "2900", "solved_by": "x321"},
{"url": "https://codeforces.com//problemset/problem/1847/D", "name": "Professor Higashikata", "tags": ["data structures", "dsu", "greedy", "implementation", "strings"], "problem_rating": "1900", "solved_by": "x3678"},
{"url": "https://codeforces.com//problemset/problem/1847/C", "name": "Vampiric Powers, anyone?", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1400", "solved_by": "x12567"},
{"url": "https://codeforces.com//problemset/problem/1847/B", "name": "Hamon Odyssey", "tags": ["bitmasks", "greedy", "two pointers"], "problem_rating": "1000", "solved_by": "x19629"},
{"url": "https://codeforces.com//problemset/problem/1847/A", "name": "The Man who became a God", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x21875"},
{"url": "https://codeforces.com//problemset/problem/1846/G", "name": "Rudolf and CodeVid-23", "tags": ["bitmasks", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1900", "solved_by": "x4234"},
{"url": "https://codeforces.com//problemset/problem/1846/F", "name": "Rudolph and Mimic", "tags": ["constructive algorithms", "implementation", "interactive"], "problem_rating": "1800", "solved_by": "x3000"},
{"url": "https://codeforces.com//problemset/problem/1846/E2", "name": "Rudolf and Snowflakes (hard version)", "tags": ["binary search", "brute force", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6821"},
{"url": "https://codeforces.com//problemset/problem/1846/E1", "name": "Rudolf and Snowflakes (simple version)", "tags": ["brute force", "implementation", "math"], "problem_rating": "1300", "solved_by": "x16144"},
{"url": "https://codeforces.com//problemset/problem/1846/D", "name": "Rudolph and Christmas Tree", "tags": ["constructive algorithms", "geometry", "math"], "problem_rating": "1200", "solved_by": "x18905"},
{"url": "https://codeforces.com//problemset/problem/1846/C", "name": "Rudolf and the Another Competition", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x18503"},
{"url": "https://codeforces.com//problemset/problem/1846/B", "name": "Rudolph and Tic-Tac-Toe", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26555"},
{"url": "https://codeforces.com//problemset/problem/1846/A", "name": "Rudolph and Cut the Rope", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x32083"},
{"url": "https://codeforces.com//problemset/problem/1845/F", "name": "Swimmers in the Pool", "tags": ["dp", "fft", "math", "number theory"], "problem_rating": "2800", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/1845/E", "name": "Boxes and Balls", "tags": ["dp", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1298"},
{"url": "https://codeforces.com//problemset/problem/1845/D", "name": "Rating System", "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x7585"},
{"url": "https://codeforces.com//problemset/problem/1845/C", "name": "Strong Password", "tags": ["binary search", "dp", "greedy", "strings"], "problem_rating": "1400", "solved_by": "x13830"},
{"url": "https://codeforces.com//problemset/problem/1845/B", "name": "Come Together", "tags": ["geometry", "implementation", "math"], "problem_rating": "900", "solved_by": "x21272"},
{"url": "https://codeforces.com//problemset/problem/1845/A", "name": "Forbidden Integer", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x25945"},
{"url": "https://codeforces.com//problemset/problem/1844/H", "name": "Multiple of Three Cycles", "tags": ["combinatorics", "data structures", "dp", "dsu", "math"], "problem_rating": "3400", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/1844/G", "name": "Tree Weights", "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "problem_rating": "3000", "solved_by": "x686"},
{"url": "https://codeforces.com//problemset/problem/1844/F2", "name": "Min Cost Permutation (Hard Version)", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math", "sortings"], "problem_rating": "2800", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/1844/F1", "name": "Min Cost Permutation (Easy Version)", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2600", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/1844/E", "name": "Great Grids", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2400", "solved_by": "x1823"},
{"url": "https://codeforces.com//problemset/problem/1844/D", "name": "Row Major", "tags": ["constructive algorithms", "greedy", "math", "number theory", "strings"], "problem_rating": "1400", "solved_by": "x12037"},
{"url": "https://codeforces.com//problemset/problem/1844/C", "name": "Particles", "tags": ["dp", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x15277"},
{"url": "https://codeforces.com//problemset/problem/1844/B", "name": "Permutations & Primes", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x17832"},
{"url": "https://codeforces.com//problemset/problem/1844/A", "name": "Subtraction Game", "tags": ["constructive algorithms", "games"], "problem_rating": "800", "solved_by": "x24259"},
{"url": "https://codeforces.com//problemset/problem/1843/F2", "name": "Omsk Metro (hard version)", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "problem_rating": "2300", "solved_by": "x1535"},
{"url": "https://codeforces.com//problemset/problem/1843/F1", "name": "Omsk Metro (simple version)", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x5157"},
{"url": "https://codeforces.com//problemset/problem/1843/E", "name": "Tracking Segments", "tags": ["binary search", "brute force", "data structures", "two pointers"], "problem_rating": "1600", "solved_by": "x11670"},
{"url": "https://codeforces.com//problemset/problem/1843/D", "name": "Apple Tree", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "1200", "solved_by": "x17579"},
{"url": "https://codeforces.com//problemset/problem/1843/C", "name": "Sum in Binary Tree", "tags": ["bitmasks", "combinatorics", "math", "trees"], "problem_rating": "800", "solved_by": "x32171"},
{"url": "https://codeforces.com//problemset/problem/1843/B", "name": "Long Long", "tags": ["greedy", "math", "two pointers"], "problem_rating": "800", "solved_by": "x28575"},
{"url": "https://codeforces.com//problemset/problem/1843/A", "name": "Sasha and Array Coloring", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x33687"},
{"url": "https://codeforces.com//problemset/problem/1842/I", "name": "Tenzing and Necklace", "tags": ["divide and conquer", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1842/H", "name": "Tenzing and Random Real Numbers", "tags": ["bitmasks", "dp", "graphs", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1842/G", "name": "Tenzing and Random Operations", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x975"},
{"url": "https://codeforces.com//problemset/problem/1842/F", "name": "Tenzing and Tree", "tags": ["dfs and similar", "greedy", "shortest paths", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/1842/E", "name": "Tenzing and Triangle", "tags": ["data structures", "dp", "geometry", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1571"},
{"url": "https://codeforces.com//problemset/problem/1842/D", "name": "Tenzing and His Animal Friends", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x4013"},
{"url": "https://codeforces.com//problemset/problem/1842/C", "name": "Tenzing and Balls", "tags": ["dp"], "problem_rating": "1500", "solved_by": "x12252"},
{"url": "https://codeforces.com//problemset/problem/1842/B", "name": "Tenzing and Books", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16431"},
{"url": "https://codeforces.com//problemset/problem/1842/A", "name": "Tenzing and Tsondu", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x19654"},
{"url": "https://codeforces.com//problemset/problem/1841/F", "name": "Monocarp and a Strategic Game", "tags": ["geometry", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x480"},
{"url": "https://codeforces.com//problemset/problem/1841/E", "name": "Fill the Matrix", "tags": ["data structures", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1943"},
{"url": "https://codeforces.com//problemset/problem/1841/D", "name": "Pairs of Segments", "tags": ["data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4269"},
{"url": "https://codeforces.com//problemset/problem/1841/C", "name": "Ranom Numbers", "tags": ["brute force", "dp", "greedy", "math", "strings"], "problem_rating": "1800", "solved_by": "x7618"},
{"url": "https://codeforces.com//problemset/problem/1841/B", "name": "Keep it Beautiful", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x21099"},
{"url": "https://codeforces.com//problemset/problem/1841/A", "name": "Game with Board", "tags": ["constructive algorithms", "games"], "problem_rating": "800", "solved_by": "x24494"},
{"url": "https://codeforces.com//problemset/problem/1840/G2", "name": "In Search of Truth (Hard Version)", "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "problem_rating": "2500", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/1840/G1", "name": "In Search of Truth (Easy Version)", "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "problem_rating": "2200", "solved_by": "x2281"},
{"url": "https://codeforces.com//problemset/problem/1840/F", "name": "Railguns", "tags": ["brute force", "dfs and similar", "dp", "graphs"], "problem_rating": "2200", "solved_by": "x1741"},
{"url": "https://codeforces.com//problemset/problem/1840/E", "name": "Character Blocking", "tags": ["data structures", "hashing", "implementation"], "problem_rating": "1600", "solved_by": "x7813"},
{"url": "https://codeforces.com//problemset/problem/1840/D", "name": "Wooden Toy Festival", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13380"},
{"url": "https://codeforces.com//problemset/problem/1840/C", "name": "Ski Resort", "tags": ["combinatorics", "math", "two pointers"], "problem_rating": "1000", "solved_by": "x26179"},
{"url": "https://codeforces.com//problemset/problem/1840/B", "name": "Binary Cafe", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1100", "solved_by": "x22062"},
{"url": "https://codeforces.com//problemset/problem/1840/A", "name": "Cipher Shifer", "tags": ["implementation", "strings", "two pointers"], "problem_rating": "800", "solved_by": "x33464"},
{"url": "https://codeforces.com//problemset/problem/1839/E", "name": "Decreasing Game", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "interactive"], "problem_rating": "2400", "solved_by": "x1193"},
{"url": "https://codeforces.com//problemset/problem/1839/D", "name": "Ball Sorting", "tags": ["data structures", "dp", "sortings"], "problem_rating": "2100", "solved_by": "x2249"},
{"url": "https://codeforces.com//problemset/problem/1839/C", "name": "Insert Zero and Invert Prefix", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x11687"},
{"url": "https://codeforces.com//problemset/problem/1839/B", "name": "Lamps", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x14830"},
{"url": "https://codeforces.com//problemset/problem/1839/A", "name": "The Good Array", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x17287"},
{"url": "https://codeforces.com//problemset/problem/1838/F", "name": "Stuck Conveyor", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "3000", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1838/E", "name": "Count Supersequences", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x1430"},
{"url": "https://codeforces.com//problemset/problem/1838/D", "name": "Bracket Walk", "tags": ["data structures", "greedy", "strings"], "problem_rating": "2100", "solved_by": "x3162"},
{"url": "https://codeforces.com//problemset/problem/1838/C", "name": "No Prime Differences", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1400", "solved_by": "x14008"},
{"url": "https://codeforces.com//problemset/problem/1838/B", "name": "Minimize Permutation Subarrays", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x16114"},
{"url": "https://codeforces.com//problemset/problem/1838/A", "name": "Blackboard List", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21317"},
{"url": "https://codeforces.com//problemset/problem/1837/F", "name": "Editorial for Two", "tags": ["binary search", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x2132"},
{"url": "https://codeforces.com//problemset/problem/1837/E", "name": "Playoff Fixing", "tags": ["combinatorics", "trees"], "problem_rating": "2200", "solved_by": "x2137"},
{"url": "https://codeforces.com//problemset/problem/1837/D", "name": "Bracket Coloring", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x14120"},
{"url": "https://codeforces.com//problemset/problem/1837/C", "name": "Best Binary String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x21591"},
{"url": "https://codeforces.com//problemset/problem/1837/B", "name": "Comparison String", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x28066"},
{"url": "https://codeforces.com//problemset/problem/1837/A", "name": "Grasshopper on a Line", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x30770"},
{"url": "https://codeforces.com//problemset/problem/1836/B", "name": "Astrophysicists", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x12467"},
{"url": "https://codeforces.com//problemset/problem/1836/A", "name": "Destroyer", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x20082"},
{"url": "https://codeforces.com//problemset/problem/1835/F", "name": "Good Graph", "tags": ["bitmasks", "dfs and similar", "graph matchings", "graphs", "implementation"], "problem_rating": "3500", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1835/E", "name": "Old Mobile", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "3500", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/1835/D", "name": "Doctor's Brown Hypothesis", "tags": ["dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2900", "solved_by": "x468"},
{"url": "https://codeforces.com//problemset/problem/1835/C", "name": "Twin Clusters", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1835/B", "name": "Lottery", "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "problem_rating": "2500", "solved_by": "x926"},
{"url": "https://codeforces.com//problemset/problem/1835/A", "name": "k-th equality", "tags": ["brute force", "implementation", "math"], "problem_rating": "1700", "solved_by": "x7636"},
{"url": "https://codeforces.com//problemset/problem/1834/F", "name": "Typewriter", "tags": ["brute force", "math"], "problem_rating": "2500", "solved_by": "x502"},
{"url": "https://codeforces.com//problemset/problem/1834/E", "name": "MEX of LCM", "tags": ["binary search", "data structures", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2138"},
{"url": "https://codeforces.com//problemset/problem/1834/D", "name": "Survey in Class", "tags": ["brute force", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4511"},
{"url": "https://codeforces.com//problemset/problem/1834/C", "name": "Game with Reversing", "tags": ["games", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x13003"},
{"url": "https://codeforces.com//problemset/problem/1834/B", "name": "Maximum Strength", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x14898"},
{"url": "https://codeforces.com//problemset/problem/1834/A", "name": "Unit Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22902"},
{"url": "https://codeforces.com//problemset/problem/1833/G", "name": "Ksyusha and Chinchilla", "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x5179"},
{"url": "https://codeforces.com//problemset/problem/1833/F", "name": "Ira and Flamenco", "tags": ["combinatorics", "constructive algorithms", "data structures", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7067"},
{"url": "https://codeforces.com//problemset/problem/1833/E", "name": "Round Dance", "tags": ["dfs and similar", "dsu", "graphs", "shortest paths"], "problem_rating": "1600", "solved_by": "x11180"},
{"url": "https://codeforces.com//problemset/problem/1833/D", "name": "Flipper", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x13055"},
{"url": "https://codeforces.com//problemset/problem/1833/C", "name": "Vlad Building Beautiful Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25832"},
{"url": "https://codeforces.com//problemset/problem/1833/B", "name": "Restore the Weather", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x25965"},
{"url": "https://codeforces.com//problemset/problem/1833/A", "name": "Musical Puzzle", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x32153"},
{"url": "https://codeforces.com//problemset/problem/1832/F", "name": "Zombies", "tags": ["binary search", "dp"], "problem_rating": "3200", "solved_by": "x260"},
{"url": "https://codeforces.com//problemset/problem/1832/E", "name": "Combinatorics Problem", "tags": ["brute force", "combinatorics", "dp"], "problem_rating": "2200", "solved_by": "x2113"},
{"url": "https://codeforces.com//problemset/problem/1832/D2", "name": "Red-Blue Operations (Hard Version)", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2400", "solved_by": "x1849"},
{"url": "https://codeforces.com//problemset/problem/1832/D1", "name": "Red-Blue Operations (Easy Version)", "tags": ["binary search", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2861"},
{"url": "https://codeforces.com//problemset/problem/1832/C", "name": "Contrast Value", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x19474"},
{"url": "https://codeforces.com//problemset/problem/1832/B", "name": "Maximum Sum", "tags": ["brute force", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x20798"},
{"url": "https://codeforces.com//problemset/problem/1832/A", "name": "New Palindrome", "tags": ["strings"], "problem_rating": "800", "solved_by": "x25241"},
{"url": "https://codeforces.com//problemset/problem/1831/B", "name": "Array merging", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x19645"},
{"url": "https://codeforces.com//problemset/problem/1831/A", "name": "Twin Permutations", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x25501"},
{"url": "https://codeforces.com//problemset/problem/1830/F", "name": "The Third Grace", "tags": ["data structures", "dp"], "problem_rating": "3200", "solved_by": "x241"},
{"url": "https://codeforces.com//problemset/problem/1830/E", "name": "Bully Sort", "tags": ["data structures", "math"], "problem_rating": "3500", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/1830/D", "name": "Mex Tree", "tags": ["brute force", "dp", "trees"], "problem_rating": "2800", "solved_by": "x632"},
{"url": "https://codeforces.com//problemset/problem/1830/C", "name": "Hyperregular Bracket Strings", "tags": ["combinatorics", "greedy", "hashing", "math", "number theory", "sortings"], "problem_rating": "2400", "solved_by": "x1581"},
{"url": "https://codeforces.com//problemset/problem/1830/B", "name": "The BOSS Can Count Pairs", "tags": ["brute force", "math"], "problem_rating": "2000", "solved_by": "x4747"},
{"url": "https://codeforces.com//problemset/problem/1830/A", "name": "Copil Copac Draws Trees", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1400", "solved_by": "x13019"},
{"url": "https://codeforces.com//problemset/problem/1829/H", "name": "Don't Blame Me", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x7450"},
{"url": "https://codeforces.com//problemset/problem/1829/G", "name": "Hits Different", "tags": ["data structures", "dp", "implementation", "math"], "problem_rating": "1600", "solved_by": "x9952"},
{"url": "https://codeforces.com//problemset/problem/1829/F", "name": "Forever Winter", "tags": ["dfs and similar", "graphs", "math"], "problem_rating": "1300", "solved_by": "x16904"},
{"url": "https://codeforces.com//problemset/problem/1829/E", "name": "The Lakes", "tags": ["dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1100", "solved_by": "x19215"},
{"url": "https://codeforces.com//problemset/problem/1829/D", "name": "Gold Rush", "tags": ["brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "1000", "solved_by": "x25345"},
{"url": "https://codeforces.com//problemset/problem/1829/C", "name": "Mr. Perfectly Fine", "tags": ["bitmasks", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x27888"},
{"url": "https://codeforces.com//problemset/problem/1829/B", "name": "Blank Space", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x43253"},
{"url": "https://codeforces.com//problemset/problem/1829/A", "name": "Love Story", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x48469"},
{"url": "https://codeforces.com//problemset/problem/1828/B", "name": "Permutation Swap", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x21858"},
{"url": "https://codeforces.com//problemset/problem/1828/A", "name": "Divisible Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23383"},
{"url": "https://codeforces.com//problemset/problem/1827/F", "name": "Copium Permutation", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "3500", "solved_by": "x114"},
{"url": "https://codeforces.com//problemset/problem/1827/E", "name": "Bus Routes", "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "3400", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1827/D", "name": "Two Centroids", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2800", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1827/C", "name": "Palindrome Partition", "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "strings"], "problem_rating": "2600", "solved_by": "x1167"},
{"url": "https://codeforces.com//problemset/problem/1827/B2", "name": "Range Sorting (Hard Version)", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1817"},
{"url": "https://codeforces.com//problemset/problem/1827/B1", "name": "Range Sorting (Easy Version)", "tags": ["binary search", "dp", "dsu", "greedy", "trees", "two pointers"], "problem_rating": "2000", "solved_by": "x3783"},
{"url": "https://codeforces.com//problemset/problem/1827/A", "name": "Counting Orders", "tags": ["combinatorics", "math", "sortings", "two pointers"], "problem_rating": "1100", "solved_by": "x18266"},
{"url": "https://codeforces.com//problemset/problem/1826/F", "name": "Fading into Fog", "tags": ["geometry", "interactive", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x346"},
{"url": "https://codeforces.com//problemset/problem/1826/E", "name": "Walk the Runway", "tags": ["bitmasks", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1556"},
{"url": "https://codeforces.com//problemset/problem/1826/D", "name": "Running Miles", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x9174"},
{"url": "https://codeforces.com//problemset/problem/1826/C", "name": "Dreaming of Freedom", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13214"},
{"url": "https://codeforces.com//problemset/problem/1826/B", "name": "Lunatic Never Content", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x16713"},
{"url": "https://codeforces.com//problemset/problem/1826/A", "name": "Trust Nobody", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x14854"},
{"url": "https://codeforces.com//problemset/problem/1825/B", "name": "LuoTianyi and the Table", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x14435"},
{"url": "https://codeforces.com//problemset/problem/1825/A", "name": "LuoTianyi and the Palindrome String", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x19485"},
{"url": "https://codeforces.com//problemset/problem/1824/E", "name": "LuoTianyi and Cartridge", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1824/D", "name": "LuoTianyi and the Function", "tags": ["data structures"], "problem_rating": "3000", "solved_by": "x472"},
{"url": "https://codeforces.com//problemset/problem/1824/C", "name": "LuoTianyi and XOR-Tree", "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1343"},
{"url": "https://codeforces.com//problemset/problem/1824/B2", "name": "LuoTianyi and the Floating Islands (Hard Version)", "tags": ["combinatorics", "dfs and similar", "math", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x2545"},
{"url": "https://codeforces.com//problemset/problem/1824/B1", "name": "LuoTianyi and the Floating Islands (Easy Version)", "tags": ["combinatorics", "math", "probabilities", "trees"], "problem_rating": "1800", "solved_by": "x4449"},
{"url": "https://codeforces.com//problemset/problem/1824/A", "name": "LuoTianyi and the Show", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11067"},
{"url": "https://codeforces.com//problemset/problem/1823/F", "name": "Random Walk", "tags": ["dp", "graphs", "math", "probabilities", "trees"], "problem_rating": "2600", "solved_by": "x834"},
{"url": "https://codeforces.com//problemset/problem/1823/E", "name": "Removing Graph", "tags": ["brute force", "dp", "games", "graphs", "math"], "problem_rating": "2500", "solved_by": "x1210"},
{"url": "https://codeforces.com//problemset/problem/1823/D", "name": "Unique Palindromes", "tags": ["constructive algorithms", "math", "strings"], "problem_rating": "1900", "solved_by": "x3750"},
{"url": "https://codeforces.com//problemset/problem/1823/C", "name": "Strongly Composite", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x12015"},
{"url": "https://codeforces.com//problemset/problem/1823/B", "name": "Sort with Step", "tags": ["brute force", "math", "sortings"], "problem_rating": "900", "solved_by": "x15746"},
{"url": "https://codeforces.com//problemset/problem/1823/A", "name": "A-characteristic", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x15981"},
{"url": "https://codeforces.com//problemset/problem/1822/G2", "name": "Magic Triples (Hard Version)", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2365"},
{"url": "https://codeforces.com//problemset/problem/1822/G1", "name": "Magic Triples (Easy Version)", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "1700", "solved_by": "x6838"},
{"url": "https://codeforces.com//problemset/problem/1822/F", "name": "Gardening Friends", "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x5858"},
{"url": "https://codeforces.com//problemset/problem/1822/E", "name": "Making Anti-Palindromes", "tags": ["greedy", "math", "strings"], "problem_rating": "1600", "solved_by": "x10156"},
{"url": "https://codeforces.com//problemset/problem/1822/D", "name": "Super-Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x16338"},
{"url": "https://codeforces.com//problemset/problem/1822/C", "name": "Bun Lover", "tags": ["math"], "problem_rating": "800", "solved_by": "x22656"},
{"url": "https://codeforces.com//problemset/problem/1822/B", "name": "Karina and Array", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x24461"},
{"url": "https://codeforces.com//problemset/problem/1822/A", "name": "TubeTube Feed", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x23985"},
{"url": "https://codeforces.com//problemset/problem/1821/F", "name": "Timber", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2600", "solved_by": "x728"},
{"url": "https://codeforces.com//problemset/problem/1821/E", "name": "Rearrange Brackets", "tags": ["brute force", "dp", "greedy", "sortings", "strings"], "problem_rating": "2100", "solved_by": "x2325"},
{"url": "https://codeforces.com//problemset/problem/1821/D", "name": "Black Cells", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4876"},
{"url": "https://codeforces.com//problemset/problem/1821/C", "name": "Tear It Apart", "tags": ["brute force", "implementation", "math", "strings"], "problem_rating": "1300", "solved_by": "x13984"},
{"url": "https://codeforces.com//problemset/problem/1821/B", "name": "Sort the Subarray", "tags": ["brute force", "greedy"], "problem_rating": "1100", "solved_by": "x17813"},
{"url": "https://codeforces.com//problemset/problem/1821/A", "name": "Matching", "tags": ["combinatorics", "math"], "problem_rating": "800", "solved_by": "x19616"},
{"url": "https://codeforces.com//problemset/problem/1820/B", "name": "JoJo's Incredible Adventures", "tags": ["math", "strings", "two pointers"], "problem_rating": "1100", "solved_by": "x14058"},
{"url": "https://codeforces.com//problemset/problem/1820/A", "name": "Yura's New Name", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x16529"},
{"url": "https://codeforces.com//problemset/problem/1819/F", "name": "Willy-nilly, Crack, Into Release!", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x129"},
{"url": "https://codeforces.com//problemset/problem/1819/E", "name": "Roads in E City", "tags": ["interactive", "math", "probabilities", "trees"], "problem_rating": "3200", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1819/D", "name": "Misha and Apples", "tags": ["brute force", "data structures", "dp", "two pointers"], "problem_rating": "2800", "solved_by": "x611"},
{"url": "https://codeforces.com//problemset/problem/1819/C", "name": "The Fox and the Complete Tree Traversal", "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1434"},
{"url": "https://codeforces.com//problemset/problem/1819/B", "name": "The Butcher", "tags": ["geometry", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x3507"},
{"url": "https://codeforces.com//problemset/problem/1819/A", "name": "Constructive Problem", "tags": ["brute force", "greedy"], "problem_rating": "1300", "solved_by": "x12393"},
{"url": "https://codeforces.com//problemset/problem/1818/B", "name": "Indivisible", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x14542"},
{"url": "https://codeforces.com//problemset/problem/1818/A", "name": "Politics", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x12817"},
{"url": "https://codeforces.com//problemset/problem/1817/F", "name": "Entangled Substrings", "tags": ["string suffix structures", "strings"], "problem_rating": "3500", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/1817/E", "name": "Half-sum", "tags": ["brute force", "divide and conquer", "greedy"], "problem_rating": "3400", "solved_by": "x257"},
{"url": "https://codeforces.com//problemset/problem/1817/D", "name": "Toy Machine", "tags": ["constructive algorithms", "games", "implementation"], "problem_rating": "2700", "solved_by": "x723"},
{"url": "https://codeforces.com//problemset/problem/1817/C", "name": "Similar Polynomials", "tags": ["combinatorics", "math"], "problem_rating": "2400", "solved_by": "x944"},
{"url": "https://codeforces.com//problemset/problem/1817/B", "name": "Fish Graph", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "1900", "solved_by": "x4007"},
{"url": "https://codeforces.com//problemset/problem/1817/A", "name": "Almost Increasing Subsequence", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1500", "solved_by": "x10734"},
{"url": "https://codeforces.com//problemset/problem/1816/B", "name": "Grid Reconstruction", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x15017"},
{"url": "https://codeforces.com//problemset/problem/1816/A", "name": "Ian Visits Mary", "tags": ["constructive algorithms", "geometry", "number theory"], "problem_rating": "800", "solved_by": "x17129"},
{"url": "https://codeforces.com//problemset/problem/1815/F", "name": "OH NO1 (-2-3-4)", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "3500", "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/1815/E", "name": "Bosco and Particle", "tags": ["dp", "math", "number theory", "strings"], "problem_rating": "3100", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1815/D", "name": "XOR Counting", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x1085"},
{"url": "https://codeforces.com//problemset/problem/1815/C", "name": "Between", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x1926"},
{"url": "https://codeforces.com//problemset/problem/1815/B", "name": "Sum Graph", "tags": ["brute force", "constructive algorithms", "graphs", "implementation", "interactive", "shortest paths", "trees"], "problem_rating": "2000", "solved_by": "x2959"},
{"url": "https://codeforces.com//problemset/problem/1815/A", "name": "Ian and Array Sorting", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x13790"},
{"url": "https://codeforces.com//problemset/problem/1814/F", "name": "Communication Towers", "tags": ["brute force", "divide and conquer", "dsu"], "problem_rating": "2700", "solved_by": "x569"},
{"url": "https://codeforces.com//problemset/problem/1814/E", "name": "Chain Chips", "tags": ["data structures", "dp", "matrices"], "problem_rating": "2300", "solved_by": "x1295"},
{"url": "https://codeforces.com//problemset/problem/1814/D", "name": "Balancing Weapons", "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "problem_rating": "2500", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1814/C", "name": "Search in Parallel", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x10540"},
{"url": "https://codeforces.com//problemset/problem/1814/B", "name": "Long Legs", "tags": ["brute force", "math"], "problem_rating": "1700", "solved_by": "x9794"},
{"url": "https://codeforces.com//problemset/problem/1814/A", "name": "Coins", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x27082"},
{"url": "https://codeforces.com//problemset/problem/1812/J", "name": "Unmysterious Language", "tags": ["*special problem", "constructive algorithms", "strings"], "problem_rating": [null], "solved_by": "x5848"},
{"url": "https://codeforces.com//problemset/problem/1812/I", "name": "Mountain Climber", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x259"},
{"url": "https://codeforces.com//problemset/problem/1812/H", "name": "Expected Twist", "tags": ["*special problem", "interactive"], "problem_rating": [null], "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1812/G", "name": "Colour Vision", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1812/F", "name": "Factorization", "tags": ["*special problem", "number theory"], "problem_rating": [null], "solved_by": "x971"},
{"url": "https://codeforces.com//problemset/problem/1812/E", "name": "Not a Geometry Problem", "tags": ["*special problem", "*special problem", "constructive algorithms", "geometry", "math"], "problem_rating": [null], "solved_by": "x3975"},
{"url": "https://codeforces.com//problemset/problem/1812/D", "name": "Trivial Conjecture", "tags": ["*special problem", "constructive algorithms", "math", "number theory"], "problem_rating": [null], "solved_by": "x4365"},
{"url": "https://codeforces.com//problemset/problem/1812/C", "name": "Digits", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x1248"},
{"url": "https://codeforces.com//problemset/problem/1812/B", "name": "Was it Rated?", "tags": ["*special problem", "*special problem", "*special problem", "brute force", "implementation"], "problem_rating": [null], "solved_by": "x5641"},
{"url": "https://codeforces.com//problemset/problem/1812/A", "name": "Are You a Robot?", "tags": ["*special problem", "*special problem", "*special problem", "expression parsing", "strings"], "problem_rating": [null], "solved_by": "x13169"},
{"url": "https://codeforces.com//problemset/problem/1811/G2", "name": "Vlad and the Nice Paths (hard version)", "tags": ["binary search", "combinatorics", "data structures", "dp", "math", "two pointers"], "problem_rating": "2200", "solved_by": "x1695"},
{"url": "https://codeforces.com//problemset/problem/1811/G1", "name": "Vlad and the Nice Paths (easy version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x2002"},
{"url": "https://codeforces.com//problemset/problem/1811/F", "name": "Is It Flower?", "tags": ["dfs and similar", "graphs", "implementation"], "problem_rating": "2100", "solved_by": "x1783"},
{"url": "https://codeforces.com//problemset/problem/1811/E", "name": "Living Sequence", "tags": ["binary search", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11960"},
{"url": "https://codeforces.com//problemset/problem/1811/D", "name": "Umka and a Long Flight", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1600", "solved_by": "x7272"},
{"url": "https://codeforces.com//problemset/problem/1811/C", "name": "Restore the Array", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x19354"},
{"url": "https://codeforces.com//problemset/problem/1811/B", "name": "Conveyor Belts", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x20037"},
{"url": "https://codeforces.com//problemset/problem/1811/A", "name": "Insert Digit", "tags": ["greedy", "math", "strings"], "problem_rating": "800", "solved_by": "x30588"},
{"url": "https://codeforces.com//problemset/problem/1810/H", "name": "Last Number", "tags": ["combinatorics", "math"], "problem_rating": "2900", "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1810/G", "name": "The Maximum Prefix", "tags": ["dp"], "problem_rating": "3200", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1810/F", "name": "M-tree", "tags": ["data structures", "math", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/1810/E", "name": "Monsters", "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "2100", "solved_by": "x3092"},
{"url": "https://codeforces.com//problemset/problem/1810/D", "name": "Climbing the Tree", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x7301"},
{"url": "https://codeforces.com//problemset/problem/1810/C", "name": "Make It Permutation", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x14217"},
{"url": "https://codeforces.com//problemset/problem/1810/B", "name": "Candies", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "800", "solved_by": "x17323"},
{"url": "https://codeforces.com//problemset/problem/1810/A", "name": "Beautiful Sequence", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x20570"},
{"url": "https://codeforces.com//problemset/problem/1809/G", "name": "Prediction", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x430"},
{"url": "https://codeforces.com//problemset/problem/1809/F", "name": "Traveling in Berland", "tags": ["binary search", "data structures", "graphs", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1809/E", "name": "Two Tanks", "tags": ["binary search", "dp", "implementation", "math"], "problem_rating": "2400", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/1809/D", "name": "Binary String Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1800", "solved_by": "x6129"},
{"url": "https://codeforces.com//problemset/problem/1809/C", "name": "Sum on Subarrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x12399"},
{"url": "https://codeforces.com//problemset/problem/1809/B", "name": "Points on Plane", "tags": ["binary search", "greedy", "math"], "problem_rating": "1000", "solved_by": "x19421"},
{"url": "https://codeforces.com//problemset/problem/1809/A", "name": "Garland", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23688"},
{"url": "https://codeforces.com//problemset/problem/1808/E3", "name": "Minibuses on Venus (hard version)", "tags": ["brute force", "combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x430"},
{"url": "https://codeforces.com//problemset/problem/1808/E2", "name": "Minibuses on Venus (medium version)", "tags": ["combinatorics", "divide and conquer", "dp", "matrices"], "problem_rating": "2500", "solved_by": "x669"},
{"url": "https://codeforces.com//problemset/problem/1808/E1", "name": "Minibuses on Venus (easy version)", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2200", "solved_by": "x1296"},
{"url": "https://codeforces.com//problemset/problem/1808/D", "name": "Petya, Petya, Petr, and Palindromes", "tags": ["binary search", "brute force", "data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2257"},
{"url": "https://codeforces.com//problemset/problem/1808/C", "name": "Unlucky Numbers", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x3695"},
{"url": "https://codeforces.com//problemset/problem/1808/B", "name": "Playing in a Casino", "tags": ["math", "sortings"], "problem_rating": "1200", "solved_by": "x15808"},
{"url": "https://codeforces.com//problemset/problem/1808/A", "name": "Lucky Numbers", "tags": ["brute force", "implementation"], "problem_rating": "900", "solved_by": "x17797"},
{"url": "https://codeforces.com//problemset/problem/1807/G2", "name": "Subsequence Addition (Hard Version)", "tags": ["bitmasks", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x18494"},
{"url": "https://codeforces.com//problemset/problem/1807/G1", "name": "Subsequence Addition (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x18374"},
{"url": "https://codeforces.com//problemset/problem/1807/F", "name": "Bouncy Ball", "tags": ["brute force", "dfs and similar", "implementation"], "problem_rating": "1700", "solved_by": "x6075"},
{"url": "https://codeforces.com//problemset/problem/1807/E", "name": "Interview", "tags": ["binary search", "implementation", "interactive"], "problem_rating": "1300", "solved_by": "x12314"},
{"url": "https://codeforces.com//problemset/problem/1807/D", "name": "Odd Queries", "tags": ["data structures", "implementation"], "problem_rating": "900", "solved_by": "x30533"},
{"url": "https://codeforces.com//problemset/problem/1807/C", "name": "Find and Replace", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x29826"},
{"url": "https://codeforces.com//problemset/problem/1807/B", "name": "Grab the Candies", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x40855"},
{"url": "https://codeforces.com//problemset/problem/1807/A", "name": "Plus or Minus", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x58787"},
{"url": "https://codeforces.com//problemset/problem/1806/F2", "name": "GCD Master (hard version)", "tags": ["greedy", "math", "sortings"], "problem_rating": "2900", "solved_by": "x285"},
{"url": "https://codeforces.com//problemset/problem/1806/F1", "name": "GCD Master (easy version)", "tags": ["greedy", "math", "number theory", "sortings"], "problem_rating": "2900", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/1806/E", "name": "Tree Master", "tags": ["brute force", "data structures", "dfs and similar", "trees"], "problem_rating": "2200", "solved_by": "x2747"},
{"url": "https://codeforces.com//problemset/problem/1806/D", "name": "DSU Master", "tags": ["combinatorics", "dp", "dsu", "math"], "problem_rating": "2500", "solved_by": "x869"},
{"url": "https://codeforces.com//problemset/problem/1806/C", "name": "Sequence Master", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x7437"},
{"url": "https://codeforces.com//problemset/problem/1806/B", "name": "Mex Master", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x17403"},
{"url": "https://codeforces.com//problemset/problem/1806/A", "name": "Walking Master", "tags": ["geometry", "greedy", "math"], "problem_rating": "800", "solved_by": "x23449"},
{"url": "https://codeforces.com//problemset/problem/1805/F2", "name": "Survival of the Weakest (hard version)", "tags": ["greedy", "math", "sortings", "two pointers"], "problem_rating": "3100", "solved_by": "x337"},
{"url": "https://codeforces.com//problemset/problem/1805/F1", "name": "Survival of the Weakest (easy version)", "tags": ["binary search", "brute force", "implementation", "math", "sortings"], "problem_rating": "2600", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/1805/E", "name": "There Should Be a Lot of Maximums", "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1562"},
{"url": "https://codeforces.com//problemset/problem/1805/D", "name": "A Wide, Wide Graph", "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x6323"},
{"url": "https://codeforces.com//problemset/problem/1805/C", "name": "Place for a Selfie", "tags": ["binary search", "data structures", "geometry", "math"], "problem_rating": "1400", "solved_by": "x12294"},
{"url": "https://codeforces.com//problemset/problem/1805/B", "name": "The String Has a Target", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x18388"},
{"url": "https://codeforces.com//problemset/problem/1805/A", "name": "We Need the Zero", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x22203"},
{"url": "https://codeforces.com//problemset/problem/1804/H", "name": "Code Lock", "tags": ["bitmasks", "dp"], "problem_rating": "3300", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1804/G", "name": "Flow Control", "tags": ["data structures", "dsu", "implementation"], "problem_rating": "3500", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/1804/F", "name": "Approximate Diameter", "tags": ["binary search", "divide and conquer", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x889"},
{"url": "https://codeforces.com//problemset/problem/1804/E", "name": "Routing", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x1396"},
{"url": "https://codeforces.com//problemset/problem/1804/D", "name": "Accommodation", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4526"},
{"url": "https://codeforces.com//problemset/problem/1804/C", "name": "Pull Your Luck", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11832"},
{"url": "https://codeforces.com//problemset/problem/1804/B", "name": "Vaccination", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x14013"},
{"url": "https://codeforces.com//problemset/problem/1804/A", "name": "Lame King", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x17806"},
{"url": "https://codeforces.com//problemset/problem/1802/B", "name": "Settlement of Guinea Pigs", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x13124"},
{"url": "https://codeforces.com//problemset/problem/1802/A", "name": "Likes", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x15649"},
{"url": "https://codeforces.com//problemset/problem/1801/G", "name": "A task for substrings", "tags": ["data structures", "string suffix structures", "strings"], "problem_rating": "3400", "solved_by": "x357"},
{"url": "https://codeforces.com//problemset/problem/1801/F", "name": "Another n-dimensional chocolate bar", "tags": ["dp", "math", "meet-in-the-middle", "number theory"], "problem_rating": "2700", "solved_by": "x558"},
{"url": "https://codeforces.com//problemset/problem/1801/E", "name": "Gasoline prices", "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "problem_rating": "3000", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1801/D", "name": "The way home", "tags": ["binary search", "data structures", "dp", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "2100", "solved_by": "x2124"},
{"url": "https://codeforces.com//problemset/problem/1801/C", "name": "Music Festival", "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x3339"},
{"url": "https://codeforces.com//problemset/problem/1801/B", "name": "Buying gifts", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6039"},
{"url": "https://codeforces.com//problemset/problem/1801/A", "name": "The Very Beautiful Blanket", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1600", "solved_by": "x8374"},
{"url": "https://codeforces.com//problemset/problem/1800/G", "name": "Symmetree", "tags": ["dfs and similar", "hashing", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x1983"},
{"url": "https://codeforces.com//problemset/problem/1800/F", "name": "Dasha and Nightmares", "tags": ["bitmasks", "hashing", "meet-in-the-middle", "strings"], "problem_rating": "1900", "solved_by": "x3795"},
{"url": "https://codeforces.com//problemset/problem/1800/E2", "name": "Unforgivable Curse (hard version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x12433"},
{"url": "https://codeforces.com//problemset/problem/1800/E1", "name": "Unforgivable Curse (easy version)", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "strings"], "problem_rating": "1400", "solved_by": "x12481"},
{"url": "https://codeforces.com//problemset/problem/1800/D", "name": "Remove Two Letters", "tags": ["data structures", "greedy", "hashing", "strings"], "problem_rating": "1200", "solved_by": "x22533"},
{"url": "https://codeforces.com//problemset/problem/1800/C2", "name": "Powering the Hero (hard version)", "tags": ["data structures", "greedy"], "problem_rating": "1100", "solved_by": "x21933"},
{"url": "https://codeforces.com//problemset/problem/1800/C1", "name": "Powering the Hero (easy version)", "tags": ["data structures", "greedy"], "problem_rating": "1000", "solved_by": "x22934"},
{"url": "https://codeforces.com//problemset/problem/1800/B", "name": "Count the Number of Pairs", "tags": ["greedy", "strings"], "problem_rating": "1000", "solved_by": "x24548"},
{"url": "https://codeforces.com//problemset/problem/1800/A", "name": "Is It a Cat?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x30756"},
{"url": "https://codeforces.com//problemset/problem/1799/H", "name": "Tree Cutting", "tags": ["bitmasks", "dfs and similar", "dp"], "problem_rating": "3200", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1799/G", "name": "Count Voting", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x726"},
{"url": "https://codeforces.com//problemset/problem/1799/F", "name": "Halve or Subtract", "tags": ["binary search", "brute force", "dp", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x785"},
{"url": "https://codeforces.com//problemset/problem/1799/E", "name": "City Union", "tags": ["constructive algorithms", "dfs and similar", "dsu", "geometry", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/1799/D2", "name": "Hot Start Up (hard version)", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x2383"},
{"url": "https://codeforces.com//problemset/problem/1799/D1", "name": "Hot Start Up (easy version)", "tags": ["dp"], "problem_rating": "1900", "solved_by": "x4288"},
{"url": "https://codeforces.com//problemset/problem/1799/C", "name": "Double Lexicographically Minimum", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x5681"},
{"url": "https://codeforces.com//problemset/problem/1799/B", "name": "Equalize by Divide", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x11068"},
{"url": "https://codeforces.com//problemset/problem/1799/A", "name": "Recent Actions", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x11476"},
{"url": "https://codeforces.com//problemset/problem/1798/F", "name": "Gifts from Grandfather Ahmed", "tags": ["dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x481"},
{"url": "https://codeforces.com//problemset/problem/1798/E", "name": "Multitest Generator", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1798/D", "name": "Shocking Arrangement", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9514"},
{"url": "https://codeforces.com//problemset/problem/1798/C", "name": "Candy Store", "tags": ["greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8004"},
{"url": "https://codeforces.com//problemset/problem/1798/B", "name": "Three Sevens", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x16267"},
{"url": "https://codeforces.com//problemset/problem/1798/A", "name": "Showstopper", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x19523"},
{"url": "https://codeforces.com//problemset/problem/1797/F", "name": "Li Hua and Path", "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "problem_rating": "3000", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1797/E", "name": "Li Hua and Array", "tags": ["brute force", "data structures", "dsu", "math", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x1233"},
{"url": "https://codeforces.com//problemset/problem/1797/D", "name": "Li Hua and Tree", "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3846"},
{"url": "https://codeforces.com//problemset/problem/1797/C", "name": "Li Hua and Chess", "tags": ["constructive algorithms", "greedy", "interactive"], "problem_rating": "1600", "solved_by": "x7436"},
{"url": "https://codeforces.com//problemset/problem/1797/B", "name": "Li Hua and Pattern", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x15338"},
{"url": "https://codeforces.com//problemset/problem/1797/A", "name": "Li Hua and Maze", "tags": ["constructive algorithms", "flows", "graphs", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x17193"},
{"url": "https://codeforces.com//problemset/problem/1796/F", "name": "Strange Triples", "tags": ["brute force", "math", "number theory"], "problem_rating": "2900", "solved_by": "x170"},
{"url": "https://codeforces.com//problemset/problem/1796/E", "name": "Colored Subgraphs", "tags": ["dfs and similar", "dp", "games", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x731"},
{"url": "https://codeforces.com//problemset/problem/1796/D", "name": "Maximum Subarray", "tags": ["data structures", "dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x4141"},
{"url": "https://codeforces.com//problemset/problem/1796/C", "name": "Maximum Set", "tags": ["binary search", "math"], "problem_rating": "1600", "solved_by": "x10123"},
{"url": "https://codeforces.com//problemset/problem/1796/B", "name": "Asterisk-Minor Template", "tags": ["implementation", "strings"], "problem_rating": "1000", "solved_by": "x16313"},
{"url": "https://codeforces.com//problemset/problem/1796/A", "name": "Typical Interview Problem", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x18701"},
{"url": "https://codeforces.com//problemset/problem/1795/G", "name": "Removal Sequences", "tags": ["bitmasks", "dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1795/F", "name": "Blocking Chips", "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1085"},
{"url": "https://codeforces.com//problemset/problem/1795/E", "name": "Explosions?", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/1795/D", "name": "Triangle Coloring", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x8844"},
{"url": "https://codeforces.com//problemset/problem/1795/C", "name": "Tea Tasting", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x11954"},
{"url": "https://codeforces.com//problemset/problem/1795/B", "name": "Ideal Point", "tags": ["brute force", "geometry", "greedy"], "problem_rating": "900", "solved_by": "x21715"},
{"url": "https://codeforces.com//problemset/problem/1795/A", "name": "Two Towers", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x23444"},
{"url": "https://codeforces.com//problemset/problem/1794/E", "name": "Labeling the Tree with Distances", "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"], "problem_rating": "2400", "solved_by": "x1047"},
{"url": "https://codeforces.com//problemset/problem/1794/D", "name": "Counting Factorizations", "tags": ["combinatorics", "divide and conquer", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3476"},
{"url": "https://codeforces.com//problemset/problem/1794/C", "name": "Scoring Subsequences", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x13154"},
{"url": "https://codeforces.com//problemset/problem/1794/B", "name": "Not Dividing", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x20970"},
{"url": "https://codeforces.com//problemset/problem/1794/A", "name": "Prefix and Suffix Array", "tags": ["strings"], "problem_rating": "800", "solved_by": "x16933"},
{"url": "https://codeforces.com//problemset/problem/1793/F", "name": "Rebrending", "tags": ["brute force", "data structures", "divide and conquer", "implementation"], "problem_rating": "2600", "solved_by": "x1334"},
{"url": "https://codeforces.com//problemset/problem/1793/E", "name": "Velepin and Marketing", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1793/D", "name": "Moscow Gorillas", "tags": ["binary search", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x5954"},
{"url": "https://codeforces.com//problemset/problem/1793/C", "name": "Dora and Search", "tags": ["constructive algorithms", "data structures", "two pointers"], "problem_rating": "1200", "solved_by": "x19210"},
{"url": "https://codeforces.com//problemset/problem/1793/B", "name": "Fedya and Array", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x15566"},
{"url": "https://codeforces.com//problemset/problem/1793/A", "name": "Yet Another Promotion", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x17874"},
{"url": "https://codeforces.com//problemset/problem/1792/F2", "name": "Graph Coloring (hard version)", "tags": ["brute force", "combinatorics", "divide and conquer", "dp", "fft", "graphs"], "problem_rating": "2900", "solved_by": "x376"},
{"url": "https://codeforces.com//problemset/problem/1792/F1", "name": "Graph Coloring (easy version)", "tags": ["combinatorics", "dp", "graphs"], "problem_rating": "2700", "solved_by": "x690"},
{"url": "https://codeforces.com//problemset/problem/1792/E", "name": "Divisors and Table", "tags": ["brute force", "dfs and similar", "dp", "number theory"], "problem_rating": "2400", "solved_by": "x1341"},
{"url": "https://codeforces.com//problemset/problem/1792/D", "name": "Fixed Prefix Permutations", "tags": ["binary search", "bitmasks", "data structures", "hashing", "math", "sortings"], "problem_rating": "1700", "solved_by": "x6064"},
{"url": "https://codeforces.com//problemset/problem/1792/C", "name": "Min Max Sort", "tags": ["binary search", "brute force", "greedy", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x13729"},
{"url": "https://codeforces.com//problemset/problem/1792/B", "name": "Stand-up Comedian", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x20801"},
{"url": "https://codeforces.com//problemset/problem/1792/A", "name": "GamingForces", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x27699"},
{"url": "https://codeforces.com//problemset/problem/1791/G2", "name": "Teleporters (Hard Version)", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x4643"},
{"url": "https://codeforces.com//problemset/problem/1791/G1", "name": "Teleporters (Easy Version)", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x21622"},
{"url": "https://codeforces.com//problemset/problem/1791/F", "name": "Range Update Point Query", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "1500", "solved_by": "x11980"},
{"url": "https://codeforces.com//problemset/problem/1791/E", "name": "Negatives and Positives", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x26980"},
{"url": "https://codeforces.com//problemset/problem/1791/D", "name": "Distinct Split", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1000", "solved_by": "x28530"},
{"url": "https://codeforces.com//problemset/problem/1791/C", "name": "Prepend and Append", "tags": ["implementation", "two pointers"], "problem_rating": "800", "solved_by": "x42827"},
{"url": "https://codeforces.com//problemset/problem/1791/B", "name": "Following Directions", "tags": ["geometry", "implementation"], "problem_rating": "800", "solved_by": "x43046"},
{"url": "https://codeforces.com//problemset/problem/1791/A", "name": "Codeforces Checking", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x57777"},
{"url": "https://codeforces.com//problemset/problem/1790/G", "name": "Tokens on Graph", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2300", "solved_by": "x1093"},
{"url": "https://codeforces.com//problemset/problem/1790/F", "name": "Timofey and Black-White Tree", "tags": ["brute force", "dfs and similar", "divide and conquer", "graphs", "greedy", "math", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x3229"},
{"url": "https://codeforces.com//problemset/problem/1790/E", "name": "Vlad and a Pair of Numbers", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1400", "solved_by": "x14697"},
{"url": "https://codeforces.com//problemset/problem/1790/D", "name": "Matryoshkas", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x19172"},
{"url": "https://codeforces.com//problemset/problem/1790/C", "name": "Premutation", "tags": ["brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x23444"},
{"url": "https://codeforces.com//problemset/problem/1790/B", "name": "Taisia and Dice", "tags": ["greedy", "greedy", "math"], "problem_rating": "800", "solved_by": "x27040"},
{"url": "https://codeforces.com//problemset/problem/1790/A", "name": "Polycarp and the Day of Pi", "tags": ["implementation", "math", "strings"], "problem_rating": "800", "solved_by": "x36395"},
{"url": "https://codeforces.com//problemset/problem/1789/F", "name": "Serval and Brain Power", "tags": ["bitmasks", "brute force", "dp", "greedy", "implementation", "strings"], "problem_rating": "2700", "solved_by": "x648"},
{"url": "https://codeforces.com//problemset/problem/1789/E", "name": "Serval and Music Game", "tags": ["brute force", "dp", "implementation", "math", "number theory"], "problem_rating": "2500", "solved_by": "x793"},
{"url": "https://codeforces.com//problemset/problem/1789/D", "name": "Serval and Shift-Shift-Shift", "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "problem_rating": "2200", "solved_by": "x1631"},
{"url": "https://codeforces.com//problemset/problem/1789/C", "name": "Serval and Toxel's Arrays", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "1500", "solved_by": "x8332"},
{"url": "https://codeforces.com//problemset/problem/1789/B", "name": "Serval and Inversion Magic", "tags": ["brute force", "implementation", "strings", "two pointers"], "problem_rating": "800", "solved_by": "x16005"},
{"url": "https://codeforces.com//problemset/problem/1789/A", "name": "Serval and Mocha's Array", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x17899"},
{"url": "https://codeforces.com//problemset/problem/1788/F", "name": "XOR, Tree, and Queries", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x813"},
{"url": "https://codeforces.com//problemset/problem/1788/E", "name": "Sum Over Zero", "tags": ["data structures", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x2579"},
{"url": "https://codeforces.com//problemset/problem/1788/D", "name": "Moving Dots", "tags": ["binary search", "brute force", "combinatorics", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3814"},
{"url": "https://codeforces.com//problemset/problem/1788/C", "name": "Matching Numbers", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x16826"},
{"url": "https://codeforces.com//problemset/problem/1788/B", "name": "Sum of Two Numbers", "tags": ["constructive algorithms", "greedy", "implementation", "math", "probabilities"], "problem_rating": "1100", "solved_by": "x19665"},
{"url": "https://codeforces.com//problemset/problem/1788/A", "name": "One and Two", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x28950"},
{"url": "https://codeforces.com//problemset/problem/1787/I", "name": "Treasure Hunt", "tags": ["data structures", "divide and conquer", "two pointers"], "problem_rating": "3400", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1787/H", "name": "Codeforces Scoreboard", "tags": ["binary search", "data structures", "dp", "geometry"], "problem_rating": "3300", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1787/G", "name": "Colorful Tree Again", "tags": ["brute force", "data structures", "trees"], "problem_rating": "3000", "solved_by": "x423"},
{"url": "https://codeforces.com//problemset/problem/1787/F", "name": "Inverse Transformation", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2500", "solved_by": "x665"},
{"url": "https://codeforces.com//problemset/problem/1787/E", "name": "The Harmonization of XOR", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x2261"},
{"url": "https://codeforces.com//problemset/problem/1787/D", "name": "Game on Axis", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "1900", "solved_by": "x3342"},
{"url": "https://codeforces.com//problemset/problem/1787/C", "name": "Remove the Bracket", "tags": ["dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x6906"},
{"url": "https://codeforces.com//problemset/problem/1787/B", "name": "Number Factorization", "tags": ["greedy", "math", "number theory"], "problem_rating": "1100", "solved_by": "x13003"},
{"url": "https://codeforces.com//problemset/problem/1787/A", "name": "Exponential Equation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18960"},
{"url": "https://codeforces.com//problemset/problem/1786/B", "name": "Cake Assembly Line", "tags": ["brute force", "sortings"], "problem_rating": "1300", "solved_by": "x8814"},
{"url": "https://codeforces.com//problemset/problem/1786/A2", "name": "Alternating Deck (hard version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11312"},
{"url": "https://codeforces.com//problemset/problem/1786/A1", "name": "Non-alternating Deck (easy version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13703"},
{"url": "https://codeforces.com//problemset/problem/1784/F", "name": "Minimums or Medians", "tags": [], "problem_rating": "3400", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1784/E", "name": "Infinite Game", "tags": ["brute force", "combinatorics", "dp", "games", "probabilities"], "problem_rating": "3100", "solved_by": "x313"},
{"url": "https://codeforces.com//problemset/problem/1784/D", "name": "Wooden Spoon", "tags": ["combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x978"},
{"url": "https://codeforces.com//problemset/problem/1784/C", "name": "Monsters (hard version)", "tags": ["data structures", "greedy"], "problem_rating": "2200", "solved_by": "x1611"},
{"url": "https://codeforces.com//problemset/problem/1784/B", "name": "Letter Exchange", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x3274"},
{"url": "https://codeforces.com//problemset/problem/1784/A", "name": "Monsters (easy version)", "tags": ["brute force", "greedy"], "problem_rating": "1000", "solved_by": "x14808"},
{"url": "https://codeforces.com//problemset/problem/1783/G", "name": "Weighed Tree Radius", "tags": ["data structures", "divide and conquer", "implementation", "trees"], "problem_rating": "2800", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1783/F", "name": "Double Sort II", "tags": ["dfs and similar", "flows", "graph matchings", "graphs"], "problem_rating": "2500", "solved_by": "x992"},
{"url": "https://codeforces.com//problemset/problem/1783/E", "name": "Game of the Year", "tags": ["brute force", "data structures", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2064"},
{"url": "https://codeforces.com//problemset/problem/1783/D", "name": "Different Arrays", "tags": ["brute force", "dp", "implementation"], "problem_rating": "2000", "solved_by": "x4303"},
{"url": "https://codeforces.com//problemset/problem/1783/C", "name": "Yet Another Tournament", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9079"},
{"url": "https://codeforces.com//problemset/problem/1783/B", "name": "Matrix of Differences", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x17541"},
{"url": "https://codeforces.com//problemset/problem/1783/A", "name": "Make it Beautiful", "tags": ["constructive algorithms", "math", "sortings"], "problem_rating": "800", "solved_by": "x28693"},
{"url": "https://codeforces.com//problemset/problem/1781/H2", "name": "Window Signals (hard version)", "tags": [], "problem_rating": "3500", "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1781/H1", "name": "Window Signals (easy version)", "tags": [], "problem_rating": "3200", "solved_by": "x115"},
{"url": "https://codeforces.com//problemset/problem/1781/G", "name": "Diverse Coloring", "tags": ["constructive algorithms", "trees"], "problem_rating": "3200", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1781/F", "name": "Bracket Insertion", "tags": ["combinatorics", "dp", "math", "trees"], "problem_rating": "2700", "solved_by": "x809"},
{"url": "https://codeforces.com//problemset/problem/1781/E", "name": "Rectangle Shrinking", "tags": ["binary search", "brute force", "data structures", "greedy", "implementation", "two pointers"], "problem_rating": "2300", "solved_by": "x1288"},
{"url": "https://codeforces.com//problemset/problem/1781/D", "name": "Many Perfect Squares", "tags": ["brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5395"},
{"url": "https://codeforces.com//problemset/problem/1781/C", "name": "Equal Frequencies", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1600", "solved_by": "x7371"},
{"url": "https://codeforces.com//problemset/problem/1781/B", "name": "Going to the Cinema", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x13398"},
{"url": "https://codeforces.com//problemset/problem/1781/A", "name": "Parallel Projection", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x14989"},
{"url": "https://codeforces.com//problemset/problem/1780/G", "name": "Delicious Dessert", "tags": ["binary search", "dsu", "hashing", "math", "number theory", "string suffix structures"], "problem_rating": "2400", "solved_by": "x683"},
{"url": "https://codeforces.com//problemset/problem/1780/F", "name": "Three Chairs", "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "number theory", "sortings"], "problem_rating": "2300", "solved_by": "x1414"},
{"url": "https://codeforces.com//problemset/problem/1780/E", "name": "Josuke and Complete Graph", "tags": ["binary search", "brute force", "data structures", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1346"},
{"url": "https://codeforces.com//problemset/problem/1780/D", "name": "Bit Guessing Game", "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "problem_rating": "1800", "solved_by": "x4790"},
{"url": "https://codeforces.com//problemset/problem/1780/B", "name": "GCD Partition", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1100", "solved_by": "x17358"},
{"url": "https://codeforces.com//problemset/problem/1780/A", "name": "Hayato and School", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x21302"},
{"url": "https://codeforces.com//problemset/problem/1779/H", "name": "Olympic Team Building", "tags": ["brute force", "meet-in-the-middle"], "problem_rating": "3500", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1779/G", "name": "The Game of the Century", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1779/F", "name": "Xorcerer's Stones", "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "problem_rating": "2500", "solved_by": "x1239"},
{"url": "https://codeforces.com//problemset/problem/1779/E", "name": "Anya's Simultaneous Exhibition", "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "2400", "solved_by": "x1725"},
{"url": "https://codeforces.com//problemset/problem/1779/D", "name": "Boris and His Amazing Haircut", "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x7715"},
{"url": "https://codeforces.com//problemset/problem/1779/C", "name": "Least Prefix Sum", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x12154"},
{"url": "https://codeforces.com//problemset/problem/1779/B", "name": "MKnez's ConstructiveForces Task", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x23288"},
{"url": "https://codeforces.com//problemset/problem/1779/A", "name": "Hall of Fame", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "800", "solved_by": "x23026"},
{"url": "https://codeforces.com//problemset/problem/1778/F", "name": "Maximizing Root", "tags": ["dfs and similar", "dp", "graphs", "math", "number theory", "trees"], "problem_rating": "2600", "solved_by": "x631"},
{"url": "https://codeforces.com//problemset/problem/1778/E", "name": "The Tree Has Fallen!", "tags": ["bitmasks", "dfs and similar", "math", "trees"], "problem_rating": "2500", "solved_by": "x845"},
{"url": "https://codeforces.com//problemset/problem/1778/D", "name": "Flexible String Revisit", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2100", "solved_by": "x2653"},
{"url": "https://codeforces.com//problemset/problem/1778/C", "name": "Flexible String", "tags": ["bitmasks", "brute force", "strings"], "problem_rating": "1600", "solved_by": "x7965"},
{"url": "https://codeforces.com//problemset/problem/1778/B", "name": "The Forbidden Permutation", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x13100"},
{"url": "https://codeforces.com//problemset/problem/1778/A", "name": "Flip Flop Sum", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23971"},
{"url": "https://codeforces.com//problemset/problem/1777/F", "name": "Comfortably Numb", "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "problem_rating": "2400", "solved_by": "x863"},
{"url": "https://codeforces.com//problemset/problem/1777/E", "name": "Edge Reverse", "tags": ["binary search", "dfs and similar", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1762"},
{"url": "https://codeforces.com//problemset/problem/1777/D", "name": "Score of a Tree", "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "math", "probabilities", "trees"], "problem_rating": "1900", "solved_by": "x3375"},
{"url": "https://codeforces.com//problemset/problem/1777/C", "name": "Quiz Master", "tags": ["binary search", "math", "number theory", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x8246"},
{"url": "https://codeforces.com//problemset/problem/1777/B", "name": "Emordnilap", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "900", "solved_by": "x17221"},
{"url": "https://codeforces.com//problemset/problem/1777/A", "name": "Everybody Likes Good Arrays!", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22990"},
{"url": "https://codeforces.com//problemset/problem/1776/N", "name": "Count Permutations", "tags": ["math"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1776/M", "name": "Parmigiana With Seafood", "tags": ["binary search", "dp", "greedy", "trees"], "problem_rating": "3000", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/1776/L", "name": "Controllers", "tags": ["binary search", "math"], "problem_rating": "1500", "solved_by": "x5611"},
{"url": "https://codeforces.com//problemset/problem/1776/K", "name": "Uniform Chemistry", "tags": ["dp", "math"], "problem_rating": "3200", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/1776/J", "name": "Italian Data Centers", "tags": ["graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x622"},
{"url": "https://codeforces.com//problemset/problem/1776/I", "name": "Spinach Pizza", "tags": ["games", "geometry", "greedy", "interactive"], "problem_rating": "2500", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/1776/H", "name": "Beppa and SwerChat", "tags": ["two pointers"], "problem_rating": "1300", "solved_by": "x6213"},
{"url": "https://codeforces.com//problemset/problem/1776/G", "name": "Another Wine Tasting Event", "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "problem_rating": "2100", "solved_by": "x1983"},
{"url": "https://codeforces.com//problemset/problem/1776/F", "name": "Train Splitting", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1700", "solved_by": "x3340"},
{"url": "https://codeforces.com//problemset/problem/1776/E", "name": "Crossing the Railways", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1776/D", "name": "Teamwork", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2800", "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/1776/C", "name": "Library game", "tags": ["games", "greedy", "interactive", "sortings"], "problem_rating": "2500", "solved_by": "x771"},
{"url": "https://codeforces.com//problemset/problem/1776/B", "name": "Vittorio Plays with LEGO Bricks", "tags": ["dp", "geometry"], "problem_rating": "2200", "solved_by": "x1286"},
{"url": "https://codeforces.com//problemset/problem/1776/A", "name": "Walking Boy", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x6863"},
{"url": "https://codeforces.com//problemset/problem/1775/F", "name": "Laboratory on Pluto", "tags": ["constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2500", "solved_by": "x754"},
{"url": "https://codeforces.com//problemset/problem/1775/E", "name": "The Human Equation", "tags": ["greedy", "implementation"], "problem_rating": "2100", "solved_by": "x3116"},
{"url": "https://codeforces.com//problemset/problem/1775/D", "name": "Friendly Spiders", "tags": ["dfs and similar", "graphs", "math", "number theory", "shortest paths"], "problem_rating": "1800", "solved_by": "x6028"},
{"url": "https://codeforces.com//problemset/problem/1775/C", "name": "Interesting Sequence", "tags": ["bitmasks", "math"], "problem_rating": "1600", "solved_by": "x10108"},
{"url": "https://codeforces.com//problemset/problem/1775/B", "name": "Gardener and the Array", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1300", "solved_by": "x13299"},
{"url": "https://codeforces.com//problemset/problem/1775/A2", "name": "Gardener and the Capybaras (hard version)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x18511"},
{"url": "https://codeforces.com//problemset/problem/1775/A1", "name": "Gardener and the Capybaras (easy version)", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19495"},
{"url": "https://codeforces.com//problemset/problem/1774/H", "name": "Maximum Permutation", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1774/G", "name": "Segment Covering", "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "problem_rating": "3200", "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/1774/F2", "name": "Magician and Pigs (Hard Version)", "tags": ["binary search", "brute force", "data structures", "implementation"], "problem_rating": "2700", "solved_by": "x657"},
{"url": "https://codeforces.com//problemset/problem/1774/F1", "name": "Magician and Pigs (Easy Version)", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x1044"},
{"url": "https://codeforces.com//problemset/problem/1774/E", "name": "Two Chess Pieces", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x3420"},
{"url": "https://codeforces.com//problemset/problem/1774/D", "name": "Same Count One", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x7673"},
{"url": "https://codeforces.com//problemset/problem/1774/C", "name": "Ice and Fire", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x11831"},
{"url": "https://codeforces.com//problemset/problem/1774/B", "name": "Coloring", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x11963"},
{"url": "https://codeforces.com//problemset/problem/1774/A", "name": "Add Plus Minus Sign", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x22244"},
{"url": "https://codeforces.com//problemset/problem/1773/L", "name": "Lisa's Sequences", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1773/K", "name": "King's Puzzle", "tags": ["constructive algorithms"], "problem_rating": "1900", "solved_by": "x1396"},
{"url": "https://codeforces.com//problemset/problem/1773/J", "name": "Jumbled Trees", "tags": ["constructive algorithms", "math"], "problem_rating": "2900", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1773/I", "name": "Interactive Factorial Guessing", "tags": ["brute force", "games", "implementation", "interactive"], "problem_rating": "2500", "solved_by": "x465"},
{"url": "https://codeforces.com//problemset/problem/1773/H", "name": "Hot and Cold", "tags": ["binary search", "interactive"], "problem_rating": "2600", "solved_by": "x352"},
{"url": "https://codeforces.com//problemset/problem/1773/G", "name": "Game of Questions", "tags": ["bitmasks", "combinatorics", "dp", "fft", "math", "probabilities"], "problem_rating": "2800", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/1773/F", "name": "Football", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x4026"},
{"url": "https://codeforces.com//problemset/problem/1773/E", "name": "Easy Assembly", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x4764"},
{"url": "https://codeforces.com//problemset/problem/1773/D", "name": "Dominoes", "tags": ["combinatorics", "flows", "graph matchings", "greedy"], "problem_rating": "2600", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1773/C", "name": "Cactus Meets Torus", "tags": [], "problem_rating": "3500", "solved_by": "x30"},
{"url": "https://codeforces.com//problemset/problem/1773/B", "name": "BinCoin", "tags": ["binary search", "divide and conquer", "hashing", "implementation", "probabilities", "trees"], "problem_rating": "2200", "solved_by": "x745"},
{"url": "https://codeforces.com//problemset/problem/1773/A", "name": "Amazing Trick", "tags": ["constructive algorithms", "graph matchings", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x1505"},
{"url": "https://codeforces.com//problemset/problem/1772/G", "name": "Gaining Rating", "tags": ["binary search", "greedy", "implementation", "math", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x1310"},
{"url": "https://codeforces.com//problemset/problem/1772/F", "name": "Copy of a Copy of a Copy", "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x2308"},
{"url": "https://codeforces.com//problemset/problem/1772/E", "name": "Permutation Game", "tags": ["games"], "problem_rating": "1700", "solved_by": "x6624"},
{"url": "https://codeforces.com//problemset/problem/1772/D", "name": "Absolute Sorting", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x15471"},
{"url": "https://codeforces.com//problemset/problem/1772/C", "name": "Different Differences", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x23219"},
{"url": "https://codeforces.com//problemset/problem/1772/B", "name": "Matrix Rotation", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x28738"},
{"url": "https://codeforces.com//problemset/problem/1772/A", "name": "A+B?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x45835"},
{"url": "https://codeforces.com//problemset/problem/1771/F", "name": "Hossam and Range Minimum Query", "tags": ["binary search", "bitmasks", "data structures", "hashing", "probabilities", "strings", "trees"], "problem_rating": "2500", "solved_by": "x1040"},
{"url": "https://codeforces.com//problemset/problem/1771/E", "name": "Hossam and a Letter", "tags": ["brute force", "dp", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1771/D", "name": "Hossam and (sub-)palindromic tree", "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"], "problem_rating": "2100", "solved_by": "x2671"},
{"url": "https://codeforces.com//problemset/problem/1771/C", "name": "Hossam and Trainees", "tags": ["greedy", "math", "number theory"], "problem_rating": "1600", "solved_by": "x9405"},
{"url": "https://codeforces.com//problemset/problem/1771/B", "name": "Hossam and Friends", "tags": ["binary search", "constructive algorithms", "dp", "two pointers"], "problem_rating": "1400", "solved_by": "x13686"},
{"url": "https://codeforces.com//problemset/problem/1771/A", "name": "Hossam and Combinatorics", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "900", "solved_by": "x22526"},
{"url": "https://codeforces.com//problemset/problem/1770/H", "name": "Koxia, Mahiru and Winter Festival", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1770/G", "name": "Koxia and Bracket", "tags": ["divide and conquer", "fft", "math"], "problem_rating": "3400", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1770/F", "name": "Koxia and Sequence", "tags": ["bitmasks", "combinatorics", "dp", "math", "number theory"], "problem_rating": "3100", "solved_by": "x638"},
{"url": "https://codeforces.com//problemset/problem/1770/E", "name": "Koxia and Tree", "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math", "probabilities", "trees"], "problem_rating": "2400", "solved_by": "x1324"},
{"url": "https://codeforces.com//problemset/problem/1770/D", "name": "Koxia and Game", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "flows", "games", "graph matchings", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3756"},
{"url": "https://codeforces.com//problemset/problem/1770/C", "name": "Koxia and Number Theory", "tags": ["brute force", "chinese remainder theorem", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8425"},
{"url": "https://codeforces.com//problemset/problem/1770/B", "name": "Koxia and Permutation", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x19229"},
{"url": "https://codeforces.com//problemset/problem/1770/A", "name": "Koxia and Whiteboards", "tags": ["brute force", "greedy"], "problem_rating": "1000", "solved_by": "x23202"},
{"url": "https://codeforces.com//problemset/problem/1769/D3", "name": "Игра в Девятку III", "tags": ["*special problem", "brute force"], "problem_rating": "2300", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1769/D2", "name": "Игра в Девятку II", "tags": ["*special problem", "brute force"], "problem_rating": "2200", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1769/D1", "name": "Игра в Девятку I", "tags": ["*special problem", "brute force", "dp"], "problem_rating": "1800", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1769/C2", "name": "Подкрутка II", "tags": ["*special problem", "dp"], "problem_rating": "1300", "solved_by": "x943"},
{"url": "https://codeforces.com//problemset/problem/1769/C1", "name": "Подкрутка I", "tags": ["*special problem", "brute force", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x946"},
{"url": "https://codeforces.com//problemset/problem/1769/B2", "name": "Копирование файлов II", "tags": ["*special problem", "binary search", "brute force", "math"], "problem_rating": "1400", "solved_by": "x865"},
{"url": "https://codeforces.com//problemset/problem/1769/B1", "name": "Копирование файлов I", "tags": ["*special problem", "brute force", "implementation", "math"], "problem_rating": "1000", "solved_by": "x1330"},
{"url": "https://codeforces.com//problemset/problem/1769/A", "name": "Узкая дорога", "tags": ["*special problem", "math"], "problem_rating": "800", "solved_by": "x1926"},
{"url": "https://codeforces.com//problemset/problem/1768/F", "name": "Wonderful Jump", "tags": ["dp", "greedy"], "problem_rating": "2900", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/1768/E", "name": "Partial Sorting", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1817"},
{"url": "https://codeforces.com//problemset/problem/1768/D", "name": "Lucky Permutation", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1800", "solved_by": "x6914"},
{"url": "https://codeforces.com//problemset/problem/1768/C", "name": "Elemental Decompress", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1300", "solved_by": "x13879"},
{"url": "https://codeforces.com//problemset/problem/1768/B", "name": "Quick Sort", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x22626"},
{"url": "https://codeforces.com//problemset/problem/1768/A", "name": "Greatest Convex", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x28483"},
{"url": "https://codeforces.com//problemset/problem/1767/F", "name": "Two Subtrees", "tags": ["data structures", "trees"], "problem_rating": "3100", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/1767/E", "name": "Algebra Flash", "tags": ["bitmasks", "brute force", "dp", "graphs", "math", "meet-in-the-middle", "trees"], "problem_rating": "2500", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/1767/D", "name": "Playoff", "tags": ["combinatorics", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "1500", "solved_by": "x9678"},
{"url": "https://codeforces.com//problemset/problem/1767/C", "name": "Count Binary Strings", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x2586"},
{"url": "https://codeforces.com//problemset/problem/1767/B", "name": "Block Towers", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x20094"},
{"url": "https://codeforces.com//problemset/problem/1767/A", "name": "Cut the Triangle", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20339"},
{"url": "https://codeforces.com//problemset/problem/1766/F", "name": "MCF", "tags": ["flows"], "problem_rating": "2800", "solved_by": "x266"},
{"url": "https://codeforces.com//problemset/problem/1766/E", "name": "Decomposition", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"], "problem_rating": "2300", "solved_by": "x1159"},
{"url": "https://codeforces.com//problemset/problem/1766/D", "name": "Lucky Chains", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x8698"},
{"url": "https://codeforces.com//problemset/problem/1766/C", "name": "Hamiltonian Wall", "tags": ["dp", "implementation"], "problem_rating": "1300", "solved_by": "x13388"},
{"url": "https://codeforces.com//problemset/problem/1766/B", "name": "Notepad#", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x20700"},
{"url": "https://codeforces.com//problemset/problem/1766/A", "name": "Extremely Round", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x25180"},
{"url": "https://codeforces.com//problemset/problem/1765/N", "name": "Number Reduction", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x4625"},
{"url": "https://codeforces.com//problemset/problem/1765/M", "name": "Minimum LCM", "tags": ["math", "number theory"], "problem_rating": "1000", "solved_by": "x13969"},
{"url": "https://codeforces.com//problemset/problem/1765/L", "name": "Project Manager", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x575"},
{"url": "https://codeforces.com//problemset/problem/1765/K", "name": "Torus Path", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x5577"},
{"url": "https://codeforces.com//problemset/problem/1765/J", "name": "Hero to Zero", "tags": ["graph matchings", "math"], "problem_rating": "2900", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/1765/I", "name": "Infinite Chess", "tags": ["implementation", "shortest paths"], "problem_rating": "2800", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/1765/H", "name": "Hospital Queue", "tags": ["binary search", "graphs", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1223"},
{"url": "https://codeforces.com//problemset/problem/1765/G", "name": "Guess the String", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "2600", "solved_by": "x377"},
{"url": "https://codeforces.com//problemset/problem/1765/F", "name": "Chemistry Lab", "tags": ["dp", "geometry", "probabilities"], "problem_rating": "2200", "solved_by": "x590"},
{"url": "https://codeforces.com//problemset/problem/1765/E", "name": "Exchange", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x9835"},
{"url": "https://codeforces.com//problemset/problem/1765/D", "name": "Watch the Videos", "tags": ["binary search", "constructive algorithms", "two pointers"], "problem_rating": "1700", "solved_by": "x4043"},
{"url": "https://codeforces.com//problemset/problem/1765/C", "name": "Card Guessing", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2600", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1765/B", "name": "Broken Keyboard", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x8854"},
{"url": "https://codeforces.com//problemset/problem/1765/A", "name": "Access Levels", "tags": ["bitmasks", "dsu", "flows", "graph matchings"], "problem_rating": "2400", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1764/H", "name": "Doremy's Paint 2", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x176"},
{"url": "https://codeforces.com//problemset/problem/1764/G3", "name": "Doremy's Perfect DS Class (Hard Version)", "tags": ["binary search", "interactive"], "problem_rating": "3300", "solved_by": "x442"},
{"url": "https://codeforces.com//problemset/problem/1764/G2", "name": "Doremy's Perfect DS Class (Medium Version)", "tags": ["binary search", "interactive"], "problem_rating": "3000", "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/1764/G1", "name": "Doremy's Perfect DS Class (Easy Version)", "tags": ["binary search", "interactive"], "problem_rating": "2900", "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1764/F", "name": "Doremy's Experimental Tree", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "sortings", "trees"], "problem_rating": "2500", "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1764/E", "name": "Doremy's Number Line", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2400", "solved_by": "x1204"},
{"url": "https://codeforces.com//problemset/problem/1764/D", "name": "Doremy's Pegging Game", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2000", "solved_by": "x2705"},
{"url": "https://codeforces.com//problemset/problem/1764/C", "name": "Doremy's City Construction", "tags": ["graphs", "greedy"], "problem_rating": "1400", "solved_by": "x9260"},
{"url": "https://codeforces.com//problemset/problem/1764/B", "name": "Doremy's Perfect Math Class", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x15673"},
{"url": "https://codeforces.com//problemset/problem/1764/A", "name": "Doremy's Paint", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x16491"},
{"url": "https://codeforces.com//problemset/problem/1763/F", "name": "Edge Queries", "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x442"},
{"url": "https://codeforces.com//problemset/problem/1763/E", "name": "Node Pairs", "tags": ["dp", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1749"},
{"url": "https://codeforces.com//problemset/problem/1763/D", "name": "Valid Bitonic Permutations", "tags": ["combinatorics", "dp", "implementation", "math", "number theory"], "problem_rating": "2200", "solved_by": "x1994"},
{"url": "https://codeforces.com//problemset/problem/1763/C", "name": "Another Array Problem", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x6420"},
{"url": "https://codeforces.com//problemset/problem/1763/B", "name": "Incinerate", "tags": ["binary search", "brute force", "data structures", "implementation", "math", "sortings"], "problem_rating": "1200", "solved_by": "x14374"},
{"url": "https://codeforces.com//problemset/problem/1763/A", "name": "Absolute Maximization", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x15545"},
{"url": "https://codeforces.com//problemset/problem/1762/G", "name": "Unequal Adjacent Elements", "tags": ["constructive algorithms", "sortings"], "problem_rating": "3100", "solved_by": "x101"},
{"url": "https://codeforces.com//problemset/problem/1762/F", "name": "Good Pairs", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2600", "solved_by": "x580"},
{"url": "https://codeforces.com//problemset/problem/1762/E", "name": "Tree Sum", "tags": ["combinatorics", "math", "trees"], "problem_rating": "2600", "solved_by": "x622"},
{"url": "https://codeforces.com//problemset/problem/1762/D", "name": "GCD Queries", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2100", "solved_by": "x3376"},
{"url": "https://codeforces.com//problemset/problem/1762/C", "name": "Binary Strings are Fun", "tags": ["combinatorics", "math"], "problem_rating": "1400", "solved_by": "x9031"},
{"url": "https://codeforces.com//problemset/problem/1762/B", "name": "Make Array Good", "tags": ["constructive algorithms", "implementation", "number theory", "sortings"], "problem_rating": "1100", "solved_by": "x16697"},
{"url": "https://codeforces.com//problemset/problem/1762/A", "name": "Divide and Conquer", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x18842"},
{"url": "https://codeforces.com//problemset/problem/1761/G", "name": "Centroid Guess", "tags": ["interactive", "probabilities", "trees"], "problem_rating": "3500", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1761/F2", "name": "Anti-median (Hard Version)", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1761/F1", "name": "Anti-median (Easy Version)", "tags": ["dp", "math"], "problem_rating": "3100", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1761/E", "name": "Make It Connected", "tags": ["binary search", "brute force", "constructive algorithms", "dsu", "graphs", "greedy", "matrices", "trees", "two pointers"], "problem_rating": "2400", "solved_by": "x1771"},
{"url": "https://codeforces.com//problemset/problem/1761/D", "name": "Carry Bit", "tags": ["combinatorics", "math"], "problem_rating": "2100", "solved_by": "x2392"},
{"url": "https://codeforces.com//problemset/problem/1761/C", "name": "Set Construction", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x9373"},
{"url": "https://codeforces.com//problemset/problem/1761/B", "name": "Elimination of a Ring", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x13209"},
{"url": "https://codeforces.com//problemset/problem/1761/A", "name": "Two Permutations", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x18385"},
{"url": "https://codeforces.com//problemset/problem/1760/G", "name": "SlavicG's Favorite Problem", "tags": ["bitmasks", "dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x7156"},
{"url": "https://codeforces.com//problemset/problem/1760/F", "name": "Quests", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x11828"},
{"url": "https://codeforces.com//problemset/problem/1760/E", "name": "Binary Inversions", "tags": ["data structures", "greedy", "math"], "problem_rating": "1100", "solved_by": "x19792"},
{"url": "https://codeforces.com//problemset/problem/1760/D", "name": "Challenging Valleys", "tags": ["implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x23101"},
{"url": "https://codeforces.com//problemset/problem/1760/C", "name": "Advantage", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x36127"},
{"url": "https://codeforces.com//problemset/problem/1760/B", "name": "Atilla's Favorite Problem", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x43179"},
{"url": "https://codeforces.com//problemset/problem/1760/A", "name": "Medium Number", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x56490"},
{"url": "https://codeforces.com//problemset/problem/1759/G", "name": "Restore the Permutation", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4367"},
{"url": "https://codeforces.com//problemset/problem/1759/F", "name": "All Possible Digits", "tags": ["binary search", "data structures", "greedy", "math", "number theory"], "problem_rating": "1800", "solved_by": "x3831"},
{"url": "https://codeforces.com//problemset/problem/1759/E", "name": "The Humanoid", "tags": ["brute force", "dp", "sortings"], "problem_rating": "1500", "solved_by": "x10488"},
{"url": "https://codeforces.com//problemset/problem/1759/D", "name": "Make It Round", "tags": ["brute force", "number theory"], "problem_rating": "1400", "solved_by": "x12971"},
{"url": "https://codeforces.com//problemset/problem/1759/C", "name": "Thermostat", "tags": ["greedy", "math", "shortest paths"], "problem_rating": "1100", "solved_by": "x17353"},
{"url": "https://codeforces.com//problemset/problem/1759/B", "name": "Lost Permutation", "tags": ["math"], "problem_rating": "800", "solved_by": "x22005"},
{"url": "https://codeforces.com//problemset/problem/1759/A", "name": "Yes-Yes?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x29472"},
{"url": "https://codeforces.com//problemset/problem/1758/F", "name": "Decent Division", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3000", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1758/E", "name": "Tick, Tock", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x823"},
{"url": "https://codeforces.com//problemset/problem/1758/D", "name": "Range = √Sum", "tags": ["binary search", "brute force", "constructive algorithms", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x7115"},
{"url": "https://codeforces.com//problemset/problem/1758/C", "name": "Almost All Multiples", "tags": ["greedy", "number theory"], "problem_rating": "1400", "solved_by": "x13335"},
{"url": "https://codeforces.com//problemset/problem/1758/B", "name": "XOR = Average", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x20897"},
{"url": "https://codeforces.com//problemset/problem/1758/A", "name": "SSeeeeiinngg DDoouubbllee", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x24937"},
{"url": "https://codeforces.com//problemset/problem/1754/B", "name": "Kevin and Permutation", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x18783"},
{"url": "https://codeforces.com//problemset/problem/1754/A", "name": "Technical Support", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22952"},
{"url": "https://codeforces.com//problemset/problem/1753/F", "name": "Minecraft Series", "tags": ["brute force", "two pointers"], "problem_rating": "3500", "solved_by": "x195"},
{"url": "https://codeforces.com//problemset/problem/1753/E", "name": "N Machines", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "3300", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1753/D", "name": "The Beach", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1708"},
{"url": "https://codeforces.com//problemset/problem/1753/C", "name": "Wish I Knew How to Sort", "tags": ["dp", "math", "probabilities"], "problem_rating": "2000", "solved_by": "x4277"},
{"url": "https://codeforces.com//problemset/problem/1753/B", "name": "Factorial Divisibility", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x12463"},
{"url": "https://codeforces.com//problemset/problem/1753/A2", "name": "Make Nonzero Sum (hard version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x10077"},
{"url": "https://codeforces.com//problemset/problem/1753/A1", "name": "Make Nonzero Sum (easy version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x14645"},
{"url": "https://codeforces.com//problemset/problem/1750/H", "name": "BinaryStringForces", "tags": ["constructive algorithms", "data structures", "dp"], "problem_rating": "3500", "solved_by": "x78"},
{"url": "https://codeforces.com//problemset/problem/1750/G", "name": "Doping", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3300", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1750/F", "name": "Majority", "tags": ["combinatorics", "dp", "math", "strings"], "problem_rating": "2700", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1750/E", "name": "Bracket Cost", "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"], "problem_rating": "2400", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1750/D", "name": "Count GCD", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5739"},
{"url": "https://codeforces.com//problemset/problem/1750/C", "name": "Complementary XOR", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x9423"},
{"url": "https://codeforces.com//problemset/problem/1750/B", "name": "Maximum Substring", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x16134"},
{"url": "https://codeforces.com//problemset/problem/1750/A", "name": "Indirect Sort", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x16954"},
{"url": "https://codeforces.com//problemset/problem/1749/F", "name": "Distance to the Path", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2800", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/1749/E", "name": "Cactus Wall", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1661"},
{"url": "https://codeforces.com//problemset/problem/1749/D", "name": "Counting Arrays", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5455"},
{"url": "https://codeforces.com//problemset/problem/1749/C", "name": "Number Game", "tags": ["binary search", "data structures", "games", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13704"},
{"url": "https://codeforces.com//problemset/problem/1749/B", "name": "Death's Blessing", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x20816"},
{"url": "https://codeforces.com//problemset/problem/1749/A", "name": "Cowardly Rooks", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x22200"},
{"url": "https://codeforces.com//problemset/problem/1748/F", "name": "Circular Xor Reversal", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "3000", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1748/E", "name": "Yet Another Array Counting Problem", "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "problem_rating": "2300", "solved_by": "x1803"},
{"url": "https://codeforces.com//problemset/problem/1748/D", "name": "ConstructOR", "tags": ["bitmasks", "chinese remainder theorem", "combinatorics", "constructive algorithms", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2738"},
{"url": "https://codeforces.com//problemset/problem/1748/C", "name": "Zero-Sum Prefixes", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x10845"},
{"url": "https://codeforces.com//problemset/problem/1748/B", "name": "Diverse Substrings", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x14795"},
{"url": "https://codeforces.com//problemset/problem/1748/A", "name": "The Ultimate Square", "tags": ["math"], "problem_rating": "800", "solved_by": "x23841"},
{"url": "https://codeforces.com//problemset/problem/1747/E", "name": "List Generation", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2900", "solved_by": "x491"},
{"url": "https://codeforces.com//problemset/problem/1747/D", "name": "Yet Another Problem", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures"], "problem_rating": "1900", "solved_by": "x4575"},
{"url": "https://codeforces.com//problemset/problem/1747/C", "name": "Swap Game", "tags": ["games"], "problem_rating": "1200", "solved_by": "x20844"},
{"url": "https://codeforces.com//problemset/problem/1747/B", "name": "BAN BAN", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x22526"},
{"url": "https://codeforces.com//problemset/problem/1747/A", "name": "Two Groups", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x24665"},
{"url": "https://codeforces.com//problemset/problem/1746/G", "name": "Olympiad Training", "tags": ["binary search", "data structures", "dp", "flows", "geometry", "implementation", "sortings"], "problem_rating": "3500", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1746/F", "name": "Kazaee", "tags": ["data structures", "hashing", "probabilities"], "problem_rating": "2800", "solved_by": "x1627"},
{"url": "https://codeforces.com//problemset/problem/1746/E2", "name": "Joking (Hard Version)", "tags": ["dp", "interactive"], "problem_rating": "3200", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/1746/E1", "name": "Joking (Easy Version)", "tags": ["binary search", "constructive algorithms", "interactive", "ternary search"], "problem_rating": "2500", "solved_by": "x1405"},
{"url": "https://codeforces.com//problemset/problem/1746/D", "name": "Paths on the Tree", "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "1900", "solved_by": "x4523"},
{"url": "https://codeforces.com//problemset/problem/1746/C", "name": "Permutation Operations", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x12621"},
{"url": "https://codeforces.com//problemset/problem/1746/B", "name": "Rebellion", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "800", "solved_by": "x17007"},
{"url": "https://codeforces.com//problemset/problem/1746/A", "name": "Maxmina", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19715"},
{"url": "https://codeforces.com//problemset/problem/1744/F", "name": "MEX vs MED", "tags": ["math", "two pointers"], "problem_rating": "2000", "solved_by": "x2994"},
{"url": "https://codeforces.com//problemset/problem/1744/E2", "name": "Divisible Numbers (hard version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5467"},
{"url": "https://codeforces.com//problemset/problem/1744/E1", "name": "Divisible Numbers (easy version)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x10605"},
{"url": "https://codeforces.com//problemset/problem/1744/D", "name": "Divisibility by 2^n", "tags": ["greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x20952"},
{"url": "https://codeforces.com//problemset/problem/1744/C", "name": "Traffic Light", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x25794"},
{"url": "https://codeforces.com//problemset/problem/1744/B", "name": "Even-Odd Increments", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x23230"},
{"url": "https://codeforces.com//problemset/problem/1744/A", "name": "Number Replacement", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x26839"},
{"url": "https://codeforces.com//problemset/problem/1743/G", "name": "Antifibonacci Cut", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"], "problem_rating": "3000", "solved_by": "x250"},
{"url": "https://codeforces.com//problemset/problem/1743/F", "name": "Intersection and Union", "tags": ["data structures", "dp", "matrices", "probabilities"], "problem_rating": "2300", "solved_by": "x1453"},
{"url": "https://codeforces.com//problemset/problem/1743/E", "name": "FTL", "tags": ["binary search", "dp"], "problem_rating": "2400", "solved_by": "x1516"},
{"url": "https://codeforces.com//problemset/problem/1743/D", "name": "Problem with Random Tests", "tags": ["brute force", "dp", "greedy", "probabilities"], "problem_rating": "1700", "solved_by": "x7493"},
{"url": "https://codeforces.com//problemset/problem/1743/C", "name": "Save the Magazines", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1100", "solved_by": "x18920"},
{"url": "https://codeforces.com//problemset/problem/1743/B", "name": "Permutation Value", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x22074"},
{"url": "https://codeforces.com//problemset/problem/1743/A", "name": "Password", "tags": ["brute force", "combinatorics", "implementation", "math"], "problem_rating": "800", "solved_by": "x26488"},
{"url": "https://codeforces.com//problemset/problem/1742/G", "name": "Orray", "tags": ["bitmasks", "brute force", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x10351"},
{"url": "https://codeforces.com//problemset/problem/1742/F", "name": "Smaller", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x11289"},
{"url": "https://codeforces.com//problemset/problem/1742/E", "name": "Scuza", "tags": ["binary search", "greedy", "math"], "problem_rating": "1200", "solved_by": "x23379"},
{"url": "https://codeforces.com//problemset/problem/1742/D", "name": "Coprime", "tags": ["brute force", "greedy", "number theory"], "problem_rating": "1100", "solved_by": "x22762"},
{"url": "https://codeforces.com//problemset/problem/1742/C", "name": "Stripes", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x32060"},
{"url": "https://codeforces.com//problemset/problem/1742/B", "name": "Increasing", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x46142"},
{"url": "https://codeforces.com//problemset/problem/1742/A", "name": "Sum", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x68045"},
{"url": "https://codeforces.com//problemset/problem/1741/G", "name": "Kirill and Company", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1459"},
{"url": "https://codeforces.com//problemset/problem/1741/F", "name": "Multi-Colored Segments", "tags": ["binary search", "data structures", "math", "sortings"], "problem_rating": "2000", "solved_by": "x2309"},
{"url": "https://codeforces.com//problemset/problem/1741/E", "name": "Sending a Sequence Over the Network", "tags": ["dp"], "problem_rating": "1600", "solved_by": "x11463"},
{"url": "https://codeforces.com//problemset/problem/1741/D", "name": "Masha and a Beautiful Tree", "tags": ["dfs and similar", "divide and conquer", "graphs", "sortings", "trees"], "problem_rating": "1300", "solved_by": "x14876"},
{"url": "https://codeforces.com//problemset/problem/1741/C", "name": "Minimize the Thickness", "tags": ["brute force", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x17493"},
{"url": "https://codeforces.com//problemset/problem/1741/B", "name": "Funny Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x25127"},
{"url": "https://codeforces.com//problemset/problem/1741/A", "name": "Compare T-Shirt Sizes", "tags": ["implementation", "implementation", "strings"], "problem_rating": "800", "solved_by": "x30392"},
{"url": "https://codeforces.com//problemset/problem/1740/I", "name": "Arranging Crystal Balls", "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"], "problem_rating": "3500", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/1740/H", "name": "MEX Tree Manipulation", "tags": ["data structures", "trees"], "problem_rating": "3300", "solved_by": "x208"},
{"url": "https://codeforces.com//problemset/problem/1740/G", "name": "Dangerous Laser Power", "tags": ["constructive algorithms", "dsu", "sortings"], "problem_rating": "3100", "solved_by": "x184"},
{"url": "https://codeforces.com//problemset/problem/1740/F", "name": "Conditional Mix", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2600", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/1740/E", "name": "Hanging Hearts", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x4226"},
{"url": "https://codeforces.com//problemset/problem/1740/D", "name": "Knowledge Cards", "tags": ["constructive algorithms", "data structures"], "problem_rating": "1500", "solved_by": "x7931"},
{"url": "https://codeforces.com//problemset/problem/1740/C", "name": "Bricks and Bags", "tags": ["constructive algorithms", "games", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x10836"},
{"url": "https://codeforces.com//problemset/problem/1740/B", "name": "Jumbo Extra Cheese 2", "tags": ["geometry", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x13674"},
{"url": "https://codeforces.com//problemset/problem/1740/A", "name": "Factorise N+M", "tags": ["constructive algorithms", "number theory"], "problem_rating": "800", "solved_by": "x19915"},
{"url": "https://codeforces.com//problemset/problem/1739/F", "name": "Keyboard Design", "tags": ["bitmasks", "data structures", "dp", "string suffix structures", "strings"], "problem_rating": "2600", "solved_by": "x517"},
{"url": "https://codeforces.com//problemset/problem/1739/E", "name": "Cleaning Robot", "tags": ["bitmasks", "dp"], "problem_rating": "2400", "solved_by": "x1201"},
{"url": "https://codeforces.com//problemset/problem/1739/D", "name": "Reset K Edges", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5014"},
{"url": "https://codeforces.com//problemset/problem/1739/C", "name": "Card Game", "tags": ["combinatorics", "constructive algorithms", "dp", "games"], "problem_rating": "1500", "solved_by": "x8908"},
{"url": "https://codeforces.com//problemset/problem/1739/B", "name": "Array Recovery", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x21989"},
{"url": "https://codeforces.com//problemset/problem/1739/A", "name": "Immobile Knight", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22483"},
{"url": "https://codeforces.com//problemset/problem/1738/H", "name": "Palindrome Addicts", "tags": ["data structures", "strings"], "problem_rating": "3300", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1738/G", "name": "Anti-Increasing Addicts", "tags": ["constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2900", "solved_by": "x418"},
{"url": "https://codeforces.com//problemset/problem/1738/F", "name": "Connectivity Addicts", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "interactive", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1202"},
{"url": "https://codeforces.com//problemset/problem/1738/E", "name": "Balance Addicts", "tags": ["combinatorics", "dp", "math", "two pointers"], "problem_rating": "2300", "solved_by": "x1497"},
{"url": "https://codeforces.com//problemset/problem/1738/D", "name": "Permutation Addicts", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x3390"},
{"url": "https://codeforces.com//problemset/problem/1738/C", "name": "Even Number Addicts", "tags": ["dp", "games", "greedy", "math"], "problem_rating": "1500", "solved_by": "x10934"},
{"url": "https://codeforces.com//problemset/problem/1738/B", "name": "Prefix Sum Addicts", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x15253"},
{"url": "https://codeforces.com//problemset/problem/1738/A", "name": "Glory Addicts", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x13454"},
{"url": "https://codeforces.com//problemset/problem/1737/G", "name": "Ela Takes Dancing Class", "tags": ["binary search", "data structures"], "problem_rating": "3500", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/1737/F", "name": "Ela and Prime GCD", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "3300", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1737/E", "name": "Ela Goes Hiking", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x910"},
{"url": "https://codeforces.com//problemset/problem/1737/D", "name": "Ela and the Wiring Wizard", "tags": ["brute force", "dp", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2200", "solved_by": "x1826"},
{"url": "https://codeforces.com//problemset/problem/1737/C", "name": "Ela and Crickets", "tags": ["constructive algorithms", "games", "implementation", "math"], "problem_rating": "1500", "solved_by": "x5664"},
{"url": "https://codeforces.com//problemset/problem/1737/B", "name": "Ela's Fitness and the Luxury Number", "tags": ["binary search", "implementation", "math"], "problem_rating": "1300", "solved_by": "x9299"},
{"url": "https://codeforces.com//problemset/problem/1737/A", "name": "Ela Sorting Books", "tags": ["greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x10040"},
{"url": "https://codeforces.com//problemset/problem/1736/E", "name": "Swap and Take", "tags": ["dp", "greedy"], "problem_rating": "2600", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1736/D", "name": "Equal Binary Subsequences", "tags": ["constructive algorithms", "geometry", "greedy", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x2442"},
{"url": "https://codeforces.com//problemset/problem/1736/C2", "name": "Good Subarrays (Hard Version)", "tags": ["binary search", "data structures", "dp", "two pointers"], "problem_rating": "2400", "solved_by": "x1262"},
{"url": "https://codeforces.com//problemset/problem/1736/C1", "name": "Good Subarrays (Easy Version)", "tags": ["binary search", "data structures", "schedules", "two pointers"], "problem_rating": "1300", "solved_by": "x14784"},
{"url": "https://codeforces.com//problemset/problem/1736/B", "name": "Playing with GCD", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x17634"},
{"url": "https://codeforces.com//problemset/problem/1736/A", "name": "Make A Equal to B", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x22604"},
{"url": "https://codeforces.com//problemset/problem/1735/F", "name": "Pebbles and Beads", "tags": ["data structures", "geometry"], "problem_rating": "2900", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1735/E", "name": "House Planning", "tags": ["constructive algorithms", "data structures", "graph matchings", "greedy"], "problem_rating": "2400", "solved_by": "x1032"},
{"url": "https://codeforces.com//problemset/problem/1735/D", "name": "Meta-set", "tags": ["brute force", "combinatorics", "data structures", "hashing", "math"], "problem_rating": "1700", "solved_by": "x5407"},
{"url": "https://codeforces.com//problemset/problem/1735/C", "name": "Phase Shift", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x9746"},
{"url": "https://codeforces.com//problemset/problem/1735/B", "name": "Tea with Tangerines", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x17972"},
{"url": "https://codeforces.com//problemset/problem/1735/A", "name": "Working Week", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x20064"},
{"url": "https://codeforces.com//problemset/problem/1734/F", "name": "Zeros and Ones", "tags": ["bitmasks", "divide and conquer", "dp", "math"], "problem_rating": "2500", "solved_by": "x780"},
{"url": "https://codeforces.com//problemset/problem/1734/E", "name": "Rectangular Congruence", "tags": ["constructive algorithms", "number theory"], "problem_rating": "2100", "solved_by": "x2835"},
{"url": "https://codeforces.com//problemset/problem/1734/D", "name": "Slime Escape", "tags": ["data structures", "dp", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6172"},
{"url": "https://codeforces.com//problemset/problem/1734/C", "name": "Removing Smallest Multiples", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x17775"},
{"url": "https://codeforces.com//problemset/problem/1734/B", "name": "Bright, Nice, Brilliant", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x15680"},
{"url": "https://codeforces.com//problemset/problem/1734/A", "name": "Select Three Sticks", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x20956"},
{"url": "https://codeforces.com//problemset/problem/1733/E", "name": "Conveyor", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "2700", "solved_by": "x1119"},
{"url": "https://codeforces.com//problemset/problem/1733/D2", "name": "Zero-One (Hard Version)", "tags": ["dp", "greedy"], "problem_rating": "2000", "solved_by": "x4090"},
{"url": "https://codeforces.com//problemset/problem/1733/D1", "name": "Zero-One (Easy Version)", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x13194"},
{"url": "https://codeforces.com//problemset/problem/1733/C", "name": "Parity Shuffle Sorting", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1300", "solved_by": "x15375"},
{"url": "https://codeforces.com//problemset/problem/1733/B", "name": "Rule of League", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x19497"},
{"url": "https://codeforces.com//problemset/problem/1733/A", "name": "Consecutive Sum", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x20791"},
{"url": "https://codeforces.com//problemset/problem/1732/E", "name": "Location", "tags": ["data structures", "dp", "math", "number theory"], "problem_rating": "2800", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1732/D2", "name": "Balance (Hard version)", "tags": ["brute force", "data structures", "number theory"], "problem_rating": "2400", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1732/D1", "name": "Balance (Easy version)", "tags": ["brute force", "data structures", "implementation", "number theory"], "problem_rating": "1500", "solved_by": "x8504"},
{"url": "https://codeforces.com//problemset/problem/1732/C2", "name": "Sheikh (Hard Version)", "tags": ["binary search", "bitmasks", "brute force", "greedy", "implementation", "two pointers"], "problem_rating": "2100", "solved_by": "x2505"},
{"url": "https://codeforces.com//problemset/problem/1732/C1", "name": "Sheikh (Easy version)", "tags": ["binary search", "bitmasks", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x5737"},
{"url": "https://codeforces.com//problemset/problem/1732/B", "name": "Ugu", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x14697"},
{"url": "https://codeforces.com//problemset/problem/1732/A", "name": "Bestie", "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "1000", "solved_by": "x14713"},
{"url": "https://codeforces.com//problemset/problem/1731/F", "name": "Function Sum", "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "problem_rating": "2500", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1731/E", "name": "Graph Cost", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2739"},
{"url": "https://codeforces.com//problemset/problem/1731/D", "name": "Valiant's New Map", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "problem_rating": "1700", "solved_by": "x6960"},
{"url": "https://codeforces.com//problemset/problem/1731/C", "name": "Even Subarrays", "tags": ["bitmasks", "brute force", "hashing", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9272"},
{"url": "https://codeforces.com//problemset/problem/1731/B", "name": "Kill Demodogs", "tags": ["greedy", "math"], "problem_rating": "1100", "solved_by": "x17590"},
{"url": "https://codeforces.com//problemset/problem/1731/A", "name": "Joey Takes Money", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x22337"},
{"url": "https://codeforces.com//problemset/problem/1730/F", "name": "Almost Sorted", "tags": ["bitmasks", "data structures", "dp"], "problem_rating": "2700", "solved_by": "x512"},
{"url": "https://codeforces.com//problemset/problem/1730/E", "name": "Maximums and Minimums", "tags": ["combinatorics", "data structures", "divide and conquer", "number theory"], "problem_rating": "2700", "solved_by": "x628"},
{"url": "https://codeforces.com//problemset/problem/1730/D", "name": "Prefixes and Suffixes", "tags": ["constructive algorithms", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x2627"},
{"url": "https://codeforces.com//problemset/problem/1730/C", "name": "Minimum Notation", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x16286"},
{"url": "https://codeforces.com//problemset/problem/1730/B", "name": "Meeting on the Line", "tags": ["binary search", "geometry", "greedy", "implementation", "math", "ternary search"], "problem_rating": "1600", "solved_by": "x12315"},
{"url": "https://codeforces.com//problemset/problem/1730/A", "name": "Planets", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x22756"},
{"url": "https://codeforces.com//problemset/problem/1729/G", "name": "Cut Substrings", "tags": ["combinatorics", "dp", "hashing", "strings", "two pointers"], "problem_rating": "2100", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/1729/F", "name": "Kirei and the Linear Function", "tags": ["hashing", "math"], "problem_rating": "1900", "solved_by": "x4085"},
{"url": "https://codeforces.com//problemset/problem/1729/E", "name": "Guess the Cycle Size", "tags": ["interactive", "probabilities"], "problem_rating": "1800", "solved_by": "x6884"},
{"url": "https://codeforces.com//problemset/problem/1729/D", "name": "Friends and the Restaurant", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x19859"},
{"url": "https://codeforces.com//problemset/problem/1729/C", "name": "Jumping on Tiles", "tags": ["constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x19708"},
{"url": "https://codeforces.com//problemset/problem/1729/B", "name": "Decode String", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x29787"},
{"url": "https://codeforces.com//problemset/problem/1729/A", "name": "Two Elevators", "tags": ["math"], "problem_rating": "800", "solved_by": "x39708"},
{"url": "https://codeforces.com//problemset/problem/1728/G", "name": "Illumination", "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "dp", "math", "two pointers"], "problem_rating": "2700", "solved_by": "x440"},
{"url": "https://codeforces.com//problemset/problem/1728/F", "name": "Fishermen", "tags": ["flows", "graph matchings", "greedy"], "problem_rating": "3100", "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1728/E", "name": "Red-Black Pepper", "tags": ["brute force", "data structures", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1691"},
{"url": "https://codeforces.com//problemset/problem/1728/D", "name": "Letter Picking", "tags": ["constructive algorithms", "dp", "games", "two pointers"], "problem_rating": "1800", "solved_by": "x7057"},
{"url": "https://codeforces.com//problemset/problem/1728/C", "name": "Digital Logarithm", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x15621"},
{"url": "https://codeforces.com//problemset/problem/1728/B", "name": "Best Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x20028"},
{"url": "https://codeforces.com//problemset/problem/1728/A", "name": "Colored Balls: Revisited", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x24491"},
{"url": "https://codeforces.com//problemset/problem/1726/H", "name": "Mainak and the Bleeding Polygon", "tags": ["binary search", "geometry", "implementation", "math"], "problem_rating": "3500", "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/1726/G", "name": "A Certain Magical Party", "tags": ["combinatorics", "data structures", "greedy", "sortings"], "problem_rating": "3300", "solved_by": "x288"},
{"url": "https://codeforces.com//problemset/problem/1726/F", "name": "Late For Work (submissions are not allowed)", "tags": ["data structures", "greedy", "schedules", "shortest paths"], "problem_rating": "2900", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1726/E", "name": "Almost Perfect", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2400", "solved_by": "x1381"},
{"url": "https://codeforces.com//problemset/problem/1726/D", "name": "Edge Split", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "probabilities", "trees"], "problem_rating": "2000", "solved_by": "x3618"},
{"url": "https://codeforces.com//problemset/problem/1726/C", "name": "Jatayu's Balanced Bracket Sequence", "tags": ["data structures", "dsu", "graphs", "greedy"], "problem_rating": "1300", "solved_by": "x12194"},
{"url": "https://codeforces.com//problemset/problem/1726/B", "name": "Mainak and Interesting Sequence", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x14920"},
{"url": "https://codeforces.com//problemset/problem/1726/A", "name": "Mainak and Array", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x20826"},
{"url": "https://codeforces.com//problemset/problem/1725/M", "name": "Moving Both Hands", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x3020"},
{"url": "https://codeforces.com//problemset/problem/1725/L", "name": "Lemper Cooking Competition", "tags": ["data structures"], "problem_rating": "2400", "solved_by": "x893"},
{"url": "https://codeforces.com//problemset/problem/1725/K", "name": "Kingdom of Criticism", "tags": ["data structures", "dsu"], "problem_rating": "2500", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/1725/J", "name": "Journey", "tags": ["dp", "trees"], "problem_rating": "2500", "solved_by": "x370"},
{"url": "https://codeforces.com//problemset/problem/1725/I", "name": "Imitating the Key Tree", "tags": ["combinatorics", "dsu", "trees"], "problem_rating": "2800", "solved_by": "x193"},
{"url": "https://codeforces.com//problemset/problem/1725/H", "name": "Hot Black Hot White", "tags": ["constructive algorithms", "math"], "problem_rating": "1800", "solved_by": "x2548"},
{"url": "https://codeforces.com//problemset/problem/1725/G", "name": "Garage", "tags": ["binary search", "geometry", "math"], "problem_rating": "1500", "solved_by": "x5742"},
{"url": "https://codeforces.com//problemset/problem/1725/F", "name": "Field Photography", "tags": ["bitmasks", "data structures", "sortings"], "problem_rating": "2100", "solved_by": "x956"},
{"url": "https://codeforces.com//problemset/problem/1725/E", "name": "Electrical Efficiency", "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"], "problem_rating": "2500", "solved_by": "x453"},
{"url": "https://codeforces.com//problemset/problem/1725/D", "name": "Deducing Sortability", "tags": ["binary search", "bitmasks", "math"], "problem_rating": "2900", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1725/C", "name": "Circular Mirror", "tags": ["binary search", "combinatorics", "geometry", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x1583"},
{"url": "https://codeforces.com//problemset/problem/1725/B", "name": "Basketball Together", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x12729"},
{"url": "https://codeforces.com//problemset/problem/1725/A", "name": "Accumulation of Dominoes", "tags": ["math"], "problem_rating": "800", "solved_by": "x9164"},
{"url": "https://codeforces.com//problemset/problem/1722/G", "name": "Even-Odd XOR", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x10878"},
{"url": "https://codeforces.com//problemset/problem/1722/F", "name": "L-shapes", "tags": ["dfs and similar", "implementation"], "problem_rating": "1700", "solved_by": "x6729"},
{"url": "https://codeforces.com//problemset/problem/1722/E", "name": "Counting Rectangles", "tags": ["brute force", "data structures", "dp", "implementation"], "problem_rating": "1600", "solved_by": "x10467"},
{"url": "https://codeforces.com//problemset/problem/1722/D", "name": "Line", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x22765"},
{"url": "https://codeforces.com//problemset/problem/1722/C", "name": "Word Game", "tags": ["data structures", "implementation"], "problem_rating": "800", "solved_by": "x30239"},
{"url": "https://codeforces.com//problemset/problem/1722/B", "name": "Colourblindness", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x44563"},
{"url": "https://codeforces.com//problemset/problem/1722/A", "name": "Spell Check", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x48775"},
{"url": "https://codeforces.com//problemset/problem/1721/F", "name": "Matching Reduction", "tags": ["brute force", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs", "interactive"], "problem_rating": "2800", "solved_by": "x383"},
{"url": "https://codeforces.com//problemset/problem/1721/E", "name": "Prefix Function Queries", "tags": ["dfs and similar", "dp", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "2200", "solved_by": "x1913"},
{"url": "https://codeforces.com//problemset/problem/1721/D", "name": "Maximum AND", "tags": ["bitmasks", "dfs and similar", "divide and conquer", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x6493"},
{"url": "https://codeforces.com//problemset/problem/1721/C", "name": "Min-Max Array Transformation", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "1400", "solved_by": "x13153"},
{"url": "https://codeforces.com//problemset/problem/1721/B", "name": "Deadly Laser", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x21806"},
{"url": "https://codeforces.com//problemset/problem/1721/A", "name": "Image", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x26816"},
{"url": "https://codeforces.com//problemset/problem/1720/E", "name": "Misha and Paintings", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x753"},
{"url": "https://codeforces.com//problemset/problem/1720/D2", "name": "Xor-Subsequence (hard version)", "tags": ["bitmasks", "data structures", "dp", "strings", "trees"], "problem_rating": "2400", "solved_by": "x1783"},
{"url": "https://codeforces.com//problemset/problem/1720/D1", "name": "Xor-Subsequence (easy version)", "tags": ["bitmasks", "brute force", "dp", "strings", "trees", "two pointers"], "problem_rating": "1800", "solved_by": "x5852"},
{"url": "https://codeforces.com//problemset/problem/1720/C", "name": "Corners", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16544"},
{"url": "https://codeforces.com//problemset/problem/1720/B", "name": "Interesting Sum", "tags": ["brute force", "data structures", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x20936"},
{"url": "https://codeforces.com//problemset/problem/1720/A", "name": "Burenka Plays with Fractions", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x22069"},
{"url": "https://codeforces.com//problemset/problem/1719/C", "name": "Fighting Tournament", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x13039"},
{"url": "https://codeforces.com//problemset/problem/1719/B", "name": "Mathematical Circus", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18400"},
{"url": "https://codeforces.com//problemset/problem/1719/A", "name": "Chip Game", "tags": ["games", "math"], "problem_rating": "800", "solved_by": "x25188"},
{"url": "https://codeforces.com//problemset/problem/1718/F", "name": "Burenka, an Array and Queries", "tags": ["data structures", "math", "number theory"], "problem_rating": "3300", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1718/E", "name": "Impressionism", "tags": ["constructive algorithms", "graphs", "implementation", "math"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1718/D", "name": "Permutation for Burenka", "tags": ["data structures", "graph matchings", "greedy", "math", "trees"], "problem_rating": "3300", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1718/C", "name": "Tonya and Burenka-179", "tags": ["data structures", "greedy", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1718/B", "name": "Fibonacci Strings", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2936"},
{"url": "https://codeforces.com//problemset/problem/1718/A2", "name": "Burenka and Traditions (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x5114"},
{"url": "https://codeforces.com//problemset/problem/1718/A1", "name": "Burenka and Traditions (easy version)", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x5626"},
{"url": "https://codeforces.com//problemset/problem/1717/F", "name": "Madoka and The First Session", "tags": ["constructive algorithms", "flows", "graph matchings", "graphs", "implementation"], "problem_rating": "2500", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1717/E", "name": "Madoka and The Best University", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x2614"},
{"url": "https://codeforces.com//problemset/problem/1717/D", "name": "Madoka and The Corruption Scheme", "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4332"},
{"url": "https://codeforces.com//problemset/problem/1717/C", "name": "Madoka and Formal Statement", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x14476"},
{"url": "https://codeforces.com//problemset/problem/1717/B", "name": "Madoka and Underground Competitions", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x14607"},
{"url": "https://codeforces.com//problemset/problem/1717/A", "name": "Madoka and Strange Thoughts", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x19307"},
{"url": "https://codeforces.com//problemset/problem/1716/F", "name": "Bags with Balls", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/1716/E", "name": "Swap and Maximum Block", "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x1046"},
{"url": "https://codeforces.com//problemset/problem/1716/D", "name": "Chip Move", "tags": ["brute force", "dp", "math"], "problem_rating": "2000", "solved_by": "x5107"},
{"url": "https://codeforces.com//problemset/problem/1716/C", "name": "Robot in a Hallway", "tags": ["data structures", "dp", "greedy", "implementation", "ternary search"], "problem_rating": "2000", "solved_by": "x4099"},
{"url": "https://codeforces.com//problemset/problem/1716/B", "name": "Permutation Chain", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21316"},
{"url": "https://codeforces.com//problemset/problem/1716/A", "name": "2-3 Moves", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x32348"},
{"url": "https://codeforces.com//problemset/problem/1715/F", "name": "Crop Squares", "tags": ["constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2700", "solved_by": "x511"},
{"url": "https://codeforces.com//problemset/problem/1715/E", "name": "Long Way Home", "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x1653"},
{"url": "https://codeforces.com//problemset/problem/1715/D", "name": "2+ doors", "tags": ["2-sat", "bitmasks", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x5035"},
{"url": "https://codeforces.com//problemset/problem/1715/C", "name": "Monoblock", "tags": ["combinatorics", "data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x8495"},
{"url": "https://codeforces.com//problemset/problem/1715/B", "name": "Beautiful Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x20956"},
{"url": "https://codeforces.com//problemset/problem/1715/A", "name": "Crossmarket", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x23353"},
{"url": "https://codeforces.com//problemset/problem/1714/G", "name": "Path Prefixes", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "problem_rating": "1700", "solved_by": "x7366"},
{"url": "https://codeforces.com//problemset/problem/1714/F", "name": "Build a Tree and That Is It", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "1900", "solved_by": "x3150"},
{"url": "https://codeforces.com//problemset/problem/1714/E", "name": "Add Modulo 10", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x15962"},
{"url": "https://codeforces.com//problemset/problem/1714/D", "name": "Color with Occurrences", "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x8913"},
{"url": "https://codeforces.com//problemset/problem/1714/C", "name": "Minimum  Varied Number", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x30654"},
{"url": "https://codeforces.com//problemset/problem/1714/B", "name": "Remove Prefix", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x29858"},
{"url": "https://codeforces.com//problemset/problem/1714/A", "name": "Everyone Loves to Sleep", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x29157"},
{"url": "https://codeforces.com//problemset/problem/1713/F", "name": "Lost Array", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "problem_rating": "2900", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1713/E", "name": "Cross Swapping", "tags": ["2-sat", "data structures", "dsu", "greedy", "matrices"], "problem_rating": "2400", "solved_by": "x1547"},
{"url": "https://codeforces.com//problemset/problem/1713/D", "name": "Tournament Countdown", "tags": ["constructive algorithms", "greedy", "interactive", "number theory", "probabilities"], "problem_rating": "1800", "solved_by": "x5564"},
{"url": "https://codeforces.com//problemset/problem/1713/C", "name": "Build Permutation", "tags": ["constructive algorithms", "dp", "math"], "problem_rating": "1200", "solved_by": "x17072"},
{"url": "https://codeforces.com//problemset/problem/1713/B", "name": "Optimal Reduction", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x20978"},
{"url": "https://codeforces.com//problemset/problem/1713/A", "name": "Traveling Salesman Problem", "tags": ["geometry", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x21788"},
{"url": "https://codeforces.com//problemset/problem/1712/F", "name": "Triameter", "tags": ["binary search", "data structures", "dfs and similar", "trees"], "problem_rating": "3200", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1712/E2", "name": "LCM Sum (hard version)", "tags": ["brute force", "data structures", "math", "number theory", "two pointers"], "problem_rating": "2500", "solved_by": "x1237"},
{"url": "https://codeforces.com//problemset/problem/1712/E1", "name": "LCM Sum (easy version)", "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x2101"},
{"url": "https://codeforces.com//problemset/problem/1712/D", "name": "Empty Graph", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "shortest paths"], "problem_rating": "2000", "solved_by": "x4382"},
{"url": "https://codeforces.com//problemset/problem/1712/C", "name": "Sort Zero", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x19501"},
{"url": "https://codeforces.com//problemset/problem/1712/B", "name": "Woeful Permutation", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "800", "solved_by": "x21416"},
{"url": "https://codeforces.com//problemset/problem/1712/A", "name": "Wonderful Permutation", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x23887"},
{"url": "https://codeforces.com//problemset/problem/1711/B", "name": "Party", "tags": ["brute force", "graphs"], "problem_rating": "1300", "solved_by": "x13247"},
{"url": "https://codeforces.com//problemset/problem/1711/A", "name": "Perfect Permutation", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x24972"},
{"url": "https://codeforces.com//problemset/problem/1710/E", "name": "Two Arrays", "tags": ["binary search", "games", "graph matchings"], "problem_rating": "2400", "solved_by": "x489"},
{"url": "https://codeforces.com//problemset/problem/1710/D", "name": "Recover the Tree", "tags": ["constructive algorithms", "trees"], "problem_rating": "3400", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1710/C", "name": "XOR Triangle", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "2500", "solved_by": "x1311"},
{"url": "https://codeforces.com//problemset/problem/1710/B", "name": "Rain", "tags": ["binary search", "brute force", "data structures", "geometry", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2407"},
{"url": "https://codeforces.com//problemset/problem/1710/A", "name": "Color the Picture", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x10754"},
{"url": "https://codeforces.com//problemset/problem/1709/F", "name": "Multiset of Strings", "tags": ["bitmasks", "brute force", "dp", "fft", "flows", "graphs", "math", "meet-in-the-middle", "trees"], "problem_rating": "2500", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1709/E", "name": "XOR Tree", "tags": ["bitmasks", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x2561"},
{"url": "https://codeforces.com//problemset/problem/1709/D", "name": "Rorororobot", "tags": ["binary search", "data structures", "greedy", "math"], "problem_rating": "1700", "solved_by": "x8250"},
{"url": "https://codeforces.com//problemset/problem/1709/C", "name": "Recover an RBS", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1800", "solved_by": "x8681"},
{"url": "https://codeforces.com//problemset/problem/1709/B", "name": "Also Try Minecraft", "tags": ["data structures", "dp", "implementation"], "problem_rating": "900", "solved_by": "x22343"},
{"url": "https://codeforces.com//problemset/problem/1709/A", "name": "Three Doors", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x29333"},
{"url": "https://codeforces.com//problemset/problem/1708/B", "name": "Difference of GCDs", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x20133"},
{"url": "https://codeforces.com//problemset/problem/1708/A", "name": "Difference Operations", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x21598"},
{"url": "https://codeforces.com//problemset/problem/1707/F", "name": "Bugaboo", "tags": ["bitmasks", "constructive algorithms", "dp", "number theory"], "problem_rating": "3500", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1707/E", "name": "Replace", "tags": ["binary search", "data structures"], "problem_rating": "3500", "solved_by": "x578"},
{"url": "https://codeforces.com//problemset/problem/1707/D", "name": "Partial Virtual Trees", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "3000", "solved_by": "x598"},
{"url": "https://codeforces.com//problemset/problem/1707/C", "name": "DFS Trees", "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1458"},
{"url": "https://codeforces.com//problemset/problem/1707/B", "name": "Difference Array", "tags": ["brute force", "data structures", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x5636"},
{"url": "https://codeforces.com//problemset/problem/1707/A", "name": "Doremy's IQ", "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x13241"},
{"url": "https://codeforces.com//problemset/problem/1706/E", "name": "Qpwoeirut and Vertices", "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2500"},
{"url": "https://codeforces.com//problemset/problem/1706/D2", "name": "Chopping Carrots (Hard Version)", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2400", "solved_by": "x1675"},
{"url": "https://codeforces.com//problemset/problem/1706/D1", "name": "Chopping Carrots (Easy Version)", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x6805"},
{"url": "https://codeforces.com//problemset/problem/1706/C", "name": "Qpwoeirut And The City", "tags": ["dp", "flows", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x14638"},
{"url": "https://codeforces.com//problemset/problem/1706/B", "name": "Making Towers", "tags": ["dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x16350"},
{"url": "https://codeforces.com//problemset/problem/1706/A", "name": "Another String Minimization Problem", "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "problem_rating": "800", "solved_by": "x22717"},
{"url": "https://codeforces.com//problemset/problem/1705/F", "name": "Mark and the Online Exam", "tags": ["bitmasks", "constructive algorithms", "interactive", "probabilities"], "problem_rating": "2900", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1705/E", "name": "Mark and Professor Koro", "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "data structures", "greedy"], "problem_rating": "2300", "solved_by": "x2031"},
{"url": "https://codeforces.com//problemset/problem/1705/D", "name": "Mark and Lightbulbs", "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1800", "solved_by": "x6220"},
{"url": "https://codeforces.com//problemset/problem/1705/C", "name": "Mark and His Unfinished Essay", "tags": ["brute force", "implementation"], "problem_rating": "1400", "solved_by": "x13172"},
{"url": "https://codeforces.com//problemset/problem/1705/B", "name": "Mark the Dust Sweeper", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x22579"},
{"url": "https://codeforces.com//problemset/problem/1705/A", "name": "Mark the Photographer", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x24984"},
{"url": "https://codeforces.com//problemset/problem/1704/H2", "name": "Game of AI (hard version)", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1704/H1", "name": "Game of AI (easy version)", "tags": ["combinatorics", "constructive algorithms", "dp", "fft", "math"], "problem_rating": "3200", "solved_by": "x177"},
{"url": "https://codeforces.com//problemset/problem/1704/G", "name": "Mio and Lucky Array", "tags": ["constructive algorithms", "fft", "math", "strings"], "problem_rating": "3500", "solved_by": "x103"},
{"url": "https://codeforces.com//problemset/problem/1704/F", "name": "Colouring Game", "tags": ["constructive algorithms", "dp", "games"], "problem_rating": "2600", "solved_by": "x949"},
{"url": "https://codeforces.com//problemset/problem/1704/E", "name": "Count Seconds", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "math"], "problem_rating": "2200", "solved_by": "x2259"},
{"url": "https://codeforces.com//problemset/problem/1704/D", "name": "Magical Array", "tags": ["constructive algorithms", "hashing", "implementation", "math"], "problem_rating": "1900", "solved_by": "x4953"},
{"url": "https://codeforces.com//problemset/problem/1704/C", "name": "Virus", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x15146"},
{"url": "https://codeforces.com//problemset/problem/1704/B", "name": "Luke is a Foodie", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x17190"},
{"url": "https://codeforces.com//problemset/problem/1704/A", "name": "Two 0-1 Sequences", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x15898"},
{"url": "https://codeforces.com//problemset/problem/1703/G", "name": "Good Key, Bad Key", "tags": ["bitmasks", "brute force", "dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x10367"},
{"url": "https://codeforces.com//problemset/problem/1703/F", "name": "Yet Another Problem About Pairs Satisfying an Inequality", "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x19124"},
{"url": "https://codeforces.com//problemset/problem/1703/E", "name": "Mirror Grid", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x17642"},
{"url": "https://codeforces.com//problemset/problem/1703/D", "name": "Double Strings", "tags": ["brute force", "data structures", "strings"], "problem_rating": "1100", "solved_by": "x24997"},
{"url": "https://codeforces.com//problemset/problem/1703/C", "name": "Cypher", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x34875"},
{"url": "https://codeforces.com//problemset/problem/1703/B", "name": "ICPC Balloons", "tags": ["data structures", "implementation"], "problem_rating": "800", "solved_by": "x47319"},
{"url": "https://codeforces.com//problemset/problem/1703/A", "name": "YES or YES?", "tags": ["brute force", "implementation", "strings"], "problem_rating": "800", "solved_by": "x65916"},
{"url": "https://codeforces.com//problemset/problem/1702/G2", "name": "Passable Paths (hard version)", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2000", "solved_by": "x4486"},
{"url": "https://codeforces.com//problemset/problem/1702/G1", "name": "Passable Paths (easy version)", "tags": ["dfs and similar", "trees"], "problem_rating": "1900", "solved_by": "x5284"},
{"url": "https://codeforces.com//problemset/problem/1702/F", "name": "Equate Multisets", "tags": ["constructive algorithms", "data structures", "greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8193"},
{"url": "https://codeforces.com//problemset/problem/1702/E", "name": "Split Into Two Sets", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1600", "solved_by": "x12855"},
{"url": "https://codeforces.com//problemset/problem/1702/D", "name": "Not a Cheap String", "tags": ["greedy"], "problem_rating": "1000", "solved_by": "x23369"},
{"url": "https://codeforces.com//problemset/problem/1702/C", "name": "Train and Queries", "tags": ["data structures", "greedy"], "problem_rating": "1100", "solved_by": "x21903"},
{"url": "https://codeforces.com//problemset/problem/1702/B", "name": "Polycarp Writes a String from Memory", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27310"},
{"url": "https://codeforces.com//problemset/problem/1702/A", "name": "Round Down the Price", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x34164"},
{"url": "https://codeforces.com//problemset/problem/1701/F", "name": "Points", "tags": ["combinatorics", "data structures", "implementation", "math", "matrices"], "problem_rating": "2500", "solved_by": "x909"},
{"url": "https://codeforces.com//problemset/problem/1701/E", "name": "Text Editor", "tags": ["brute force", "dp", "greedy", "strings"], "problem_rating": "2500", "solved_by": "x1092"},
{"url": "https://codeforces.com//problemset/problem/1701/D", "name": "Permutation Restoration", "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5590"},
{"url": "https://codeforces.com//problemset/problem/1701/C", "name": "Schedule Management", "tags": ["binary search", "greedy", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x16371"},
{"url": "https://codeforces.com//problemset/problem/1701/B", "name": "Permutation", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x20088"},
{"url": "https://codeforces.com//problemset/problem/1701/A", "name": "Grass Field", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x26030"},
{"url": "https://codeforces.com//problemset/problem/1700/F", "name": "Puzzle", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2600", "solved_by": "x872"},
{"url": "https://codeforces.com//problemset/problem/1700/E", "name": "Serega the Pirate", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2600", "solved_by": "x840"},
{"url": "https://codeforces.com//problemset/problem/1700/D", "name": "River Locks", "tags": ["binary search", "dp", "greedy", "math"], "problem_rating": "1900", "solved_by": "x5956"},
{"url": "https://codeforces.com//problemset/problem/1700/C", "name": "Helping the Nature", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x10723"},
{"url": "https://codeforces.com//problemset/problem/1700/B", "name": "Palindromic Numbers", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "1100", "solved_by": "x18536"},
{"url": "https://codeforces.com//problemset/problem/1700/A", "name": "Optimal Path", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x22721"},
{"url": "https://codeforces.com//problemset/problem/1699/E", "name": "Three Days Grace", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2600", "solved_by": "x1117"},
{"url": "https://codeforces.com//problemset/problem/1699/D", "name": "Almost Triple Deletions", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x3073"},
{"url": "https://codeforces.com//problemset/problem/1699/C", "name": "The Third Problem", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x9595"},
{"url": "https://codeforces.com//problemset/problem/1699/B", "name": "Almost Ternary Matrix", "tags": ["bitmasks", "constructive algorithms", "matrices"], "problem_rating": "900", "solved_by": "x19441"},
{"url": "https://codeforces.com//problemset/problem/1699/A", "name": "The Third Three Number Problem", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23814"},
{"url": "https://codeforces.com//problemset/problem/1698/G", "name": "Long Binary String", "tags": ["bitmasks", "math", "matrices", "meet-in-the-middle", "number theory"], "problem_rating": "2900", "solved_by": "x308"},
{"url": "https://codeforces.com//problemset/problem/1698/F", "name": "Equal Reversal", "tags": ["constructive algorithms", "graphs", "implementation", "math"], "problem_rating": "2800", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/1698/E", "name": "PermutationForces II", "tags": ["brute force", "combinatorics", "greedy", "sortings", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/1698/D", "name": "Fixed Point Guessing", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "1600", "solved_by": "x8972"},
{"url": "https://codeforces.com//problemset/problem/1698/C", "name": "3SUM Closure", "tags": ["brute force", "data structures"], "problem_rating": "1300", "solved_by": "x18267"},
{"url": "https://codeforces.com//problemset/problem/1698/B", "name": "Rising Sand", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x20823"},
{"url": "https://codeforces.com//problemset/problem/1698/A", "name": "XOR Mixup", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x28536"},
{"url": "https://codeforces.com//problemset/problem/1697/F", "name": "Too Many Constraints", "tags": ["2-sat", "constructive algorithms", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x547"},
{"url": "https://codeforces.com//problemset/problem/1697/E", "name": "Coloring", "tags": ["brute force", "combinatorics", "constructive algorithms", "dp", "geometry", "graphs", "greedy", "implementation", "math"], "problem_rating": "2400", "solved_by": "x1160"},
{"url": "https://codeforces.com//problemset/problem/1697/D", "name": "Guess The String", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "1900", "solved_by": "x4353"},
{"url": "https://codeforces.com//problemset/problem/1697/C", "name": "awoo's Favorite Problem", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1400", "solved_by": "x14150"},
{"url": "https://codeforces.com//problemset/problem/1697/B", "name": "Promo", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x26063"},
{"url": "https://codeforces.com//problemset/problem/1697/A", "name": "Parkway Walk", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x25572"},
{"url": "https://codeforces.com//problemset/problem/1696/H", "name": "Maximum Product?", "tags": ["brute force", "combinatorics", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "3500", "solved_by": "x158"},
{"url": "https://codeforces.com//problemset/problem/1696/G", "name": "Fishingprince Plays With Array Again", "tags": ["brute force", "data structures", "geometry", "math"], "problem_rating": "3300", "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1696/F", "name": "Tree Recovery", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/1696/E", "name": "Placing Jinas", "tags": ["combinatorics", "math"], "problem_rating": "2000", "solved_by": "x3960"},
{"url": "https://codeforces.com//problemset/problem/1696/D", "name": "Permutation Graph", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "problem_rating": "1900", "solved_by": "x5347"},
{"url": "https://codeforces.com//problemset/problem/1696/C", "name": "Fishingprince Plays With Array", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x11469"},
{"url": "https://codeforces.com//problemset/problem/1696/B", "name": "NIT Destroys the Universe", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x20341"},
{"url": "https://codeforces.com//problemset/problem/1696/A", "name": "NIT orz!", "tags": ["bitmasks", "greedy"], "problem_rating": "800", "solved_by": "x18597"},
{"url": "https://codeforces.com//problemset/problem/1695/E", "name": "Ambiguous Dominoes", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2700", "solved_by": "x439"},
{"url": "https://codeforces.com//problemset/problem/1695/D2", "name": "Tree Queries (Hard Version)", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1950"},
{"url": "https://codeforces.com//problemset/problem/1695/D1", "name": "Tree Queries (Easy Version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2129"},
{"url": "https://codeforces.com//problemset/problem/1695/C", "name": "Zero Path", "tags": ["brute force", "data structures", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x10690"},
{"url": "https://codeforces.com//problemset/problem/1695/B", "name": "Circle Game", "tags": ["games", "greedy"], "problem_rating": "1000", "solved_by": "x18260"},
{"url": "https://codeforces.com//problemset/problem/1695/A", "name": "Subrectangle Guess", "tags": ["games"], "problem_rating": "800", "solved_by": "x16234"},
{"url": "https://codeforces.com//problemset/problem/1694/B", "name": "Paranoid String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x18841"},
{"url": "https://codeforces.com//problemset/problem/1694/A", "name": "Creep", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x22333"},
{"url": "https://codeforces.com//problemset/problem/1693/F", "name": "I Might Be Wrong", "tags": ["binary search", "greedy", "two pointers"], "problem_rating": "3400", "solved_by": "x389"},
{"url": "https://codeforces.com//problemset/problem/1693/E", "name": "Outermost Maximums", "tags": ["data structures", "greedy"], "problem_rating": "3400", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1693/D", "name": "Decinc Dividing", "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x798"},
{"url": "https://codeforces.com//problemset/problem/1693/C", "name": "Keshi in Search of AmShZ", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "2300", "solved_by": "x2505"},
{"url": "https://codeforces.com//problemset/problem/1693/B", "name": "Fake Plastic Trees", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1700", "solved_by": "x8276"},
{"url": "https://codeforces.com//problemset/problem/1693/A", "name": "Directional Increase", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x15917"},
{"url": "https://codeforces.com//problemset/problem/1692/H", "name": "Gambling", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "1700", "solved_by": "x7271"},
{"url": "https://codeforces.com//problemset/problem/1692/G", "name": "2^Sort", "tags": ["data structures", "dp", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x16857"},
{"url": "https://codeforces.com//problemset/problem/1692/F", "name": "3SUM", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x22083"},
{"url": "https://codeforces.com//problemset/problem/1692/E", "name": "Binary Deque", "tags": ["binary search", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x20987"},
{"url": "https://codeforces.com//problemset/problem/1692/D", "name": "The Clock", "tags": ["brute force", "implementation"], "problem_rating": "1100", "solved_by": "x19087"},
{"url": "https://codeforces.com//problemset/problem/1692/C", "name": "Where's the Bishop?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x33228"},
{"url": "https://codeforces.com//problemset/problem/1692/B", "name": "All Distinct", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x33490"},
{"url": "https://codeforces.com//problemset/problem/1692/A", "name": "Marathon", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x62439"},
{"url": "https://codeforces.com//problemset/problem/1691/F", "name": "K-Set Tree", "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2500", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/1691/E", "name": "Number of Groups", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1778"},
{"url": "https://codeforces.com//problemset/problem/1691/D", "name": "Max GEQ Sum", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "problem_rating": "1800", "solved_by": "x5669"},
{"url": "https://codeforces.com//problemset/problem/1691/C", "name": "Sum of Substrings", "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1400", "solved_by": "x15353"},
{"url": "https://codeforces.com//problemset/problem/1691/B", "name": "Shoe Shuffling", "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x22148"},
{"url": "https://codeforces.com//problemset/problem/1691/A", "name": "Beat The Odds", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x30203"},
{"url": "https://codeforces.com//problemset/problem/1690/G", "name": "Count the Trains", "tags": ["binary search", "data structures", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3323"},
{"url": "https://codeforces.com//problemset/problem/1690/F", "name": "Shifting String", "tags": ["graphs", "math", "number theory", "strings"], "problem_rating": "1700", "solved_by": "x6979"},
{"url": "https://codeforces.com//problemset/problem/1690/E", "name": "Price Maximization", "tags": ["binary search", "greedy", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x14879"},
{"url": "https://codeforces.com//problemset/problem/1690/D", "name": "Black and White Stripe", "tags": ["implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x28158"},
{"url": "https://codeforces.com//problemset/problem/1690/C", "name": "Restoring the Duration of Tasks", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x25764"},
{"url": "https://codeforces.com//problemset/problem/1690/B", "name": "Array Decrements", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x25026"},
{"url": "https://codeforces.com//problemset/problem/1690/A", "name": "Print a Pedestal (Codeforces logo?)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x32991"},
{"url": "https://codeforces.com//problemset/problem/1689/E", "name": "ANDfinity", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1181"},
{"url": "https://codeforces.com//problemset/problem/1689/D", "name": "Lena and Matrix", "tags": ["data structures", "dp", "geometry", "shortest paths"], "problem_rating": "1900", "solved_by": "x4108"},
{"url": "https://codeforces.com//problemset/problem/1689/C", "name": "Infected Tree", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "1600", "solved_by": "x10942"},
{"url": "https://codeforces.com//problemset/problem/1689/B", "name": "Mystic Permutation", "tags": ["data structures", "greedy"], "problem_rating": "900", "solved_by": "x17319"},
{"url": "https://codeforces.com//problemset/problem/1689/A", "name": "Lex String", "tags": ["brute force", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x16492"},
{"url": "https://codeforces.com//problemset/problem/1688/C", "name": "Manipulating History", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x8040"},
{"url": "https://codeforces.com//problemset/problem/1688/B", "name": "Patchouli's Magical Talisman", "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x18064"},
{"url": "https://codeforces.com//problemset/problem/1688/A", "name": "Cirno's Perfect Bitmasks Classroom", "tags": ["bitmasks", "brute force"], "problem_rating": "800", "solved_by": "x21270"},
{"url": "https://codeforces.com//problemset/problem/1687/F", "name": "Koishi's Unconscious Permutation", "tags": ["fft", "math"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1687/E", "name": "Become Big For Me", "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "3500", "solved_by": "x222"},
{"url": "https://codeforces.com//problemset/problem/1687/D", "name": "Cute number", "tags": ["binary search", "brute force", "data structures", "dsu", "implementation", "math"], "problem_rating": "2900", "solved_by": "x567"},
{"url": "https://codeforces.com//problemset/problem/1687/C", "name": "Sanae and Giant Robot", "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1355"},
{"url": "https://codeforces.com//problemset/problem/1687/B", "name": "Railway System", "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "1700", "solved_by": "x3548"},
{"url": "https://codeforces.com//problemset/problem/1687/A", "name": "The Enchanted Forest", "tags": ["brute force", "greedy"], "problem_rating": "1600", "solved_by": "x10193"},
{"url": "https://codeforces.com//problemset/problem/1686/B", "name": "Odd Subarrays", "tags": ["dp", "greedy"], "problem_rating": "800", "solved_by": "x18099"},
{"url": "https://codeforces.com//problemset/problem/1686/A", "name": "Everything Everywhere All But One", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x20316"},
{"url": "https://codeforces.com//problemset/problem/1685/E", "name": "The Ultimate LIS Problem", "tags": ["data structures", "greedy"], "problem_rating": "3500", "solved_by": "x144"},
{"url": "https://codeforces.com//problemset/problem/1685/D2", "name": "Permutation Weight (Hard Version)", "tags": ["constructive algorithms", "greedy"], "problem_rating": "3500", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1685/D1", "name": "Permutation Weight (Easy Version)", "tags": ["constructive algorithms", "dfs and similar", "dsu"], "problem_rating": "2800", "solved_by": "x436"},
{"url": "https://codeforces.com//problemset/problem/1685/C", "name": "Bring Balance", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x955"},
{"url": "https://codeforces.com//problemset/problem/1685/B", "name": "Linguistics", "tags": ["greedy", "implementation", "sortings", "strings"], "problem_rating": "2000", "solved_by": "x3218"},
{"url": "https://codeforces.com//problemset/problem/1685/A", "name": "Circular Local MiniMax", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x16772"},
{"url": "https://codeforces.com//problemset/problem/1684/H", "name": "Hard Cut", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "math"], "problem_rating": "3400", "solved_by": "x236"},
{"url": "https://codeforces.com//problemset/problem/1684/G", "name": "Euclid Guess", "tags": ["constructive algorithms", "flows", "graph matchings", "math", "number theory"], "problem_rating": "2800", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1684/F", "name": "Diverse Segments", "tags": ["data structures", "two pointers"], "problem_rating": "2600", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1684/E", "name": "MEX vs DIFF", "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3100"},
{"url": "https://codeforces.com//problemset/problem/1684/D", "name": "Traps", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9492"},
{"url": "https://codeforces.com//problemset/problem/1684/C", "name": "Column Swapping", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x12177"},
{"url": "https://codeforces.com//problemset/problem/1684/B", "name": "Z mod X = C", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x20836"},
{"url": "https://codeforces.com//problemset/problem/1684/A", "name": "Digit Minimization", "tags": ["constructive algorithms", "games", "math", "strings"], "problem_rating": "800", "solved_by": "x23690"},
{"url": "https://codeforces.com//problemset/problem/1682/F", "name": "MCMF?", "tags": ["data structures", "flows", "graphs", "greedy", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x303"},
{"url": "https://codeforces.com//problemset/problem/1682/E", "name": "Unordered Swaps", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2700", "solved_by": "x576"},
{"url": "https://codeforces.com//problemset/problem/1682/D", "name": "Circular Spanning Tree", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x3240"},
{"url": "https://codeforces.com//problemset/problem/1682/C", "name": "LIS or Reverse LIS?", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1400", "solved_by": "x14458"},
{"url": "https://codeforces.com//problemset/problem/1682/B", "name": "AND Sorting", "tags": ["bitmasks", "constructive algorithms", "sortings"], "problem_rating": "1100", "solved_by": "x17932"},
{"url": "https://codeforces.com//problemset/problem/1682/A", "name": "Palindromic Indices", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x19164"},
{"url": "https://codeforces.com//problemset/problem/1681/F", "name": "Unique Occurrences", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "problem_rating": "2300", "solved_by": "x1682"},
{"url": "https://codeforces.com//problemset/problem/1681/E", "name": "Labyrinth Adventures", "tags": ["data structures", "dp", "matrices", "shortest paths"], "problem_rating": "2600", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/1681/D", "name": "Required Length", "tags": ["brute force", "dfs and similar", "dp", "hashing", "shortest paths"], "problem_rating": "1700", "solved_by": "x9466"},
{"url": "https://codeforces.com//problemset/problem/1681/C", "name": "Double Sort", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x17179"},
{"url": "https://codeforces.com//problemset/problem/1681/B", "name": "Card Trick", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x19967"},
{"url": "https://codeforces.com//problemset/problem/1681/A", "name": "Game with Cards", "tags": ["games", "greedy"], "problem_rating": "800", "solved_by": "x20864"},
{"url": "https://codeforces.com//problemset/problem/1680/F", "name": "Lenient Vertex Cover", "tags": ["dfs and similar", "divide and conquer", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1680/E", "name": "Moving Chips", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x3692"},
{"url": "https://codeforces.com//problemset/problem/1680/D", "name": "Dog Walking", "tags": ["brute force", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1139"},
{"url": "https://codeforces.com//problemset/problem/1680/C", "name": "Binary String", "tags": ["binary search", "greedy", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x9741"},
{"url": "https://codeforces.com//problemset/problem/1680/B", "name": "Robots", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18168"},
{"url": "https://codeforces.com//problemset/problem/1680/A", "name": "Minimums and Maximums", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x21409"},
{"url": "https://codeforces.com//problemset/problem/1679/F", "name": "Formalism for Formalism", "tags": ["bitmasks", "dp", "math"], "problem_rating": "2600", "solved_by": "x516"},
{"url": "https://codeforces.com//problemset/problem/1679/E", "name": "Typical Party in Dorm", "tags": ["bitmasks", "combinatorics", "dp", "strings"], "problem_rating": "2400", "solved_by": "x1127"},
{"url": "https://codeforces.com//problemset/problem/1679/D", "name": "Toss a Coin to Your Graph...", "tags": ["binary search", "dfs and similar", "dp", "graphs"], "problem_rating": "1900", "solved_by": "x4691"},
{"url": "https://codeforces.com//problemset/problem/1679/C", "name": "Rooks Defenders", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x10105"},
{"url": "https://codeforces.com//problemset/problem/1679/B", "name": "Stone Age Problem", "tags": ["data structures", "implementation"], "problem_rating": "1200", "solved_by": "x17752"},
{"url": "https://codeforces.com//problemset/problem/1679/A", "name": "AvtoBus", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x23008"},
{"url": "https://codeforces.com//problemset/problem/1678/B2", "name": "Tokitsukaze and Good 01-String (hard version)", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x6501"},
{"url": "https://codeforces.com//problemset/problem/1678/B1", "name": "Tokitsukaze and Good 01-String (easy version)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15817"},
{"url": "https://codeforces.com//problemset/problem/1678/A", "name": "Tokitsukaze and All Zero Sequence", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18040"},
{"url": "https://codeforces.com//problemset/problem/1677/F", "name": "Tokitsukaze and Gems", "tags": ["dp", "math"], "problem_rating": "3500", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1677/E", "name": "Tokitsukaze and Beautiful Subsegments", "tags": ["data structures"], "problem_rating": "2900", "solved_by": "x524"},
{"url": "https://codeforces.com//problemset/problem/1677/D", "name": "Tokitsukaze and Permutations", "tags": ["dp", "math"], "problem_rating": "2500", "solved_by": "x1229"},
{"url": "https://codeforces.com//problemset/problem/1677/C", "name": "Tokitsukaze and Two Colorful Tapes", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x3499"},
{"url": "https://codeforces.com//problemset/problem/1677/B", "name": "Tokitsukaze and Meeting", "tags": ["data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x4101"},
{"url": "https://codeforces.com//problemset/problem/1677/A", "name": "Tokitsukaze and Strange Inequality", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x8296"},
{"url": "https://codeforces.com//problemset/problem/1676/H2", "name": "Maximum Crossings (Hard Version)", "tags": ["data structures", "divide and conquer", "sortings"], "problem_rating": "1500", "solved_by": "x10438"},
{"url": "https://codeforces.com//problemset/problem/1676/H1", "name": "Maximum Crossings (Easy Version)", "tags": ["brute force"], "problem_rating": "1400", "solved_by": "x13690"},
{"url": "https://codeforces.com//problemset/problem/1676/G", "name": "White-Black Balanced Subtrees", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1300", "solved_by": "x14941"},
{"url": "https://codeforces.com//problemset/problem/1676/F", "name": "Longest Strike", "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x16312"},
{"url": "https://codeforces.com//problemset/problem/1676/E", "name": "Eating Queries", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x25506"},
{"url": "https://codeforces.com//problemset/problem/1676/D", "name": "X-Sum", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x24650"},
{"url": "https://codeforces.com//problemset/problem/1676/C", "name": "Most Similar Words", "tags": ["brute force", "greedy", "implementation", "implementation", "math", "strings"], "problem_rating": "800", "solved_by": "x29485"},
{"url": "https://codeforces.com//problemset/problem/1676/B", "name": "Equal Candies", "tags": ["greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x46728"},
{"url": "https://codeforces.com//problemset/problem/1676/A", "name": "Lucky?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x61030"},
{"url": "https://codeforces.com//problemset/problem/1675/G", "name": "Sorting Pancakes", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x1636"},
{"url": "https://codeforces.com//problemset/problem/1675/F", "name": "Vlad and Unfinished Business", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x5176"},
{"url": "https://codeforces.com//problemset/problem/1675/E", "name": "Replace With the Previous, Minimize", "tags": ["dsu", "greedy", "strings"], "problem_rating": "1500", "solved_by": "x10422"},
{"url": "https://codeforces.com//problemset/problem/1675/D", "name": "Vertical Paths", "tags": ["graphs", "implementation", "trees"], "problem_rating": "1300", "solved_by": "x12818"},
{"url": "https://codeforces.com//problemset/problem/1675/C", "name": "Detective Task", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x18032"},
{"url": "https://codeforces.com//problemset/problem/1675/B", "name": "Make It Increasing", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x25915"},
{"url": "https://codeforces.com//problemset/problem/1675/A", "name": "Food for Animals", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x32411"},
{"url": "https://codeforces.com//problemset/problem/1674/G", "name": "Remove Directed Edges", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "2000", "solved_by": "x2431"},
{"url": "https://codeforces.com//problemset/problem/1674/F", "name": "Desktop Rearrangement", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4959"},
{"url": "https://codeforces.com//problemset/problem/1674/E", "name": "Breaking the Wall", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x6273"},
{"url": "https://codeforces.com//problemset/problem/1674/D", "name": "A-B-C Sort", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x16055"},
{"url": "https://codeforces.com//problemset/problem/1674/C", "name": "Infinite Replacement", "tags": ["combinatorics", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x23258"},
{"url": "https://codeforces.com//problemset/problem/1674/B", "name": "Dictionary", "tags": ["combinatorics", "math"], "problem_rating": "800", "solved_by": "x25982"},
{"url": "https://codeforces.com//problemset/problem/1674/A", "name": "Number Transformation", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x26003"},
{"url": "https://codeforces.com//problemset/problem/1673/F", "name": "Anti-Theft Road Planning", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "interactive", "math"], "problem_rating": "2400", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1673/E", "name": "Power or XOR?", "tags": ["bitmasks", "combinatorics", "math", "number theory"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1673/D", "name": "Lost Arithmetic Progression", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3256"},
{"url": "https://codeforces.com//problemset/problem/1673/C", "name": "Palindrome Basis", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12322"},
{"url": "https://codeforces.com//problemset/problem/1673/B", "name": "A Perfectly Balanced String?", "tags": ["brute force", "greedy", "strings"], "problem_rating": "1100", "solved_by": "x14773"},
{"url": "https://codeforces.com//problemset/problem/1673/A", "name": "Subtle Substring Subtraction", "tags": ["games", "greedy", "strings"], "problem_rating": "800", "solved_by": "x18354"},
{"url": "https://codeforces.com//problemset/problem/1672/I", "name": "PermutationForces", "tags": ["data structures", "greedy"], "problem_rating": "3000", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1672/H", "name": "Zigu Zagu", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "2700", "solved_by": "x937"},
{"url": "https://codeforces.com//problemset/problem/1672/G", "name": "Cross Xor", "tags": ["constructive algorithms", "graphs", "math", "matrices"], "problem_rating": "3200", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1672/F2", "name": "Checker for Array Shuffling", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2800", "solved_by": "x786"},
{"url": "https://codeforces.com//problemset/problem/1672/F1", "name": "Array Shuffling", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x3033"},
{"url": "https://codeforces.com//problemset/problem/1672/E", "name": "notepad.exe", "tags": ["binary search", "constructive algorithms", "greedy", "interactive"], "problem_rating": "2200", "solved_by": "x2118"},
{"url": "https://codeforces.com//problemset/problem/1672/D", "name": "Cyclic Rotation", "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x6145"},
{"url": "https://codeforces.com//problemset/problem/1672/C", "name": "Unequal Array", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x13098"},
{"url": "https://codeforces.com//problemset/problem/1672/B", "name": "I love AAAB", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x15717"},
{"url": "https://codeforces.com//problemset/problem/1672/A", "name": "Log Chopping", "tags": ["games", "implementation", "math"], "problem_rating": "800", "solved_by": "x15979"},
{"url": "https://codeforces.com//problemset/problem/1671/F", "name": "Permutation Counting", "tags": ["brute force", "combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x321"},
{"url": "https://codeforces.com//problemset/problem/1671/E", "name": "Preorder", "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2688"},
{"url": "https://codeforces.com//problemset/problem/1671/D", "name": "Insert a Progression", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x7514"},
{"url": "https://codeforces.com//problemset/problem/1671/C", "name": "Dolce Vita", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16557"},
{"url": "https://codeforces.com//problemset/problem/1671/B", "name": "Consecutive Points Segment", "tags": ["brute force", "math", "sortings"], "problem_rating": "1000", "solved_by": "x18336"},
{"url": "https://codeforces.com//problemset/problem/1671/A", "name": "String Building", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20332"},
{"url": "https://codeforces.com//problemset/problem/1670/F", "name": "Jee, You See?", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x942"},
{"url": "https://codeforces.com//problemset/problem/1670/E", "name": "Hemose on the Tree", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2200", "solved_by": "x1711"},
{"url": "https://codeforces.com//problemset/problem/1670/D", "name": "Very Suspicious", "tags": ["binary search", "brute force", "geometry", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x5030"},
{"url": "https://codeforces.com//problemset/problem/1670/C", "name": "Where is the Pizza?", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "implementation", "math"], "problem_rating": "1400", "solved_by": "x9773"},
{"url": "https://codeforces.com//problemset/problem/1670/B", "name": "Dorms War", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x12551"},
{"url": "https://codeforces.com//problemset/problem/1670/A", "name": "Prof. Slim", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x15337"},
{"url": "https://codeforces.com//problemset/problem/1669/H", "name": "Maximal AND", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1300", "solved_by": "x17554"},
{"url": "https://codeforces.com//problemset/problem/1669/G", "name": "Fall Down", "tags": ["dfs and similar", "implementation"], "problem_rating": "1200", "solved_by": "x17818"},
{"url": "https://codeforces.com//problemset/problem/1669/F", "name": "Eating Candies", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x24505"},
{"url": "https://codeforces.com//problemset/problem/1669/E", "name": "2-Letter Strings", "tags": ["data structures", "math", "strings"], "problem_rating": "1200", "solved_by": "x17412"},
{"url": "https://codeforces.com//problemset/problem/1669/D", "name": "Colorful Stamp", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x21672"},
{"url": "https://codeforces.com//problemset/problem/1669/C", "name": "Odd/Even Increments", "tags": ["greedy", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x33797"},
{"url": "https://codeforces.com//problemset/problem/1669/B", "name": "Triple", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x41609"},
{"url": "https://codeforces.com//problemset/problem/1669/A", "name": "Division?", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x60047"},
{"url": "https://codeforces.com//problemset/problem/1668/B", "name": "Social Distance", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16461"},
{"url": "https://codeforces.com//problemset/problem/1668/A", "name": "Direction Change", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x16235"},
{"url": "https://codeforces.com//problemset/problem/1667/F", "name": "Yin Yang", "tags": ["implementation"], "problem_rating": "3500", "solved_by": "x93"},
{"url": "https://codeforces.com//problemset/problem/1667/E", "name": "Centroid Probabilities", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "3000", "solved_by": "x635"},
{"url": "https://codeforces.com//problemset/problem/1667/D", "name": "Edge Elimination", "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "problem_rating": "2900", "solved_by": "x650"},
{"url": "https://codeforces.com//problemset/problem/1667/C", "name": "Half Queen Cover", "tags": ["constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1546"},
{"url": "https://codeforces.com//problemset/problem/1667/B", "name": "Optimal Partition", "tags": ["data structures", "dp"], "problem_rating": "2100", "solved_by": "x3594"},
{"url": "https://codeforces.com//problemset/problem/1667/A", "name": "Make it Increasing", "tags": ["brute force", "greedy", "math"], "problem_rating": "1300", "solved_by": "x14559"},
{"url": "https://codeforces.com//problemset/problem/1666/L", "name": "Labyrinth", "tags": ["dfs and similar", "graphs"], "problem_rating": "1800", "solved_by": "x3030"},
{"url": "https://codeforces.com//problemset/problem/1666/K", "name": "Kingdom Partition", "tags": ["flows"], "problem_rating": "3200", "solved_by": "x235"},
{"url": "https://codeforces.com//problemset/problem/1666/J", "name": "Job Lookup", "tags": ["constructive algorithms", "dp", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x1305"},
{"url": "https://codeforces.com//problemset/problem/1666/I", "name": "Interactive Treasure Hunt", "tags": ["brute force", "constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1416"},
{"url": "https://codeforces.com//problemset/problem/1666/H", "name": "Heroes of Might", "tags": ["math"], "problem_rating": "3500", "solved_by": "x65"},
{"url": "https://codeforces.com//problemset/problem/1666/G", "name": "Global Warming", "tags": ["geometry", "math"], "problem_rating": "3100", "solved_by": "x136"},
{"url": "https://codeforces.com//problemset/problem/1666/F", "name": "Fancy Stack", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x1130"},
{"url": "https://codeforces.com//problemset/problem/1666/E", "name": "Even Split", "tags": ["binary search", "constructive algorithms", "greedy", "math"], "problem_rating": "2500", "solved_by": "x693"},
{"url": "https://codeforces.com//problemset/problem/1666/D", "name": "Deletive Editing", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x7581"},
{"url": "https://codeforces.com//problemset/problem/1666/C", "name": "Connect the Points", "tags": ["brute force", "constructive algorithms", "geometry"], "problem_rating": "1800", "solved_by": "x3125"},
{"url": "https://codeforces.com//problemset/problem/1666/B", "name": "Budget Distribution", "tags": [], "problem_rating": "3300", "solved_by": "x54"},
{"url": "https://codeforces.com//problemset/problem/1666/A", "name": "Admissible Map", "tags": [], "problem_rating": "3300", "solved_by": "x107"},
{"url": "https://codeforces.com//problemset/problem/1665/E", "name": "MinimizOR", "tags": ["bitmasks", "brute force", "data structures", "divide and conquer", "greedy", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x1480"},
{"url": "https://codeforces.com//problemset/problem/1665/D", "name": "GCD Guess", "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "games", "interactive", "math", "number theory"], "problem_rating": "2000", "solved_by": "x3824"},
{"url": "https://codeforces.com//problemset/problem/1665/C", "name": "Tree Infection", "tags": ["binary search", "greedy", "sortings", "trees"], "problem_rating": "1600", "solved_by": "x8197"},
{"url": "https://codeforces.com//problemset/problem/1665/B", "name": "Array Cloning Technique", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "900", "solved_by": "x19522"},
{"url": "https://codeforces.com//problemset/problem/1665/A", "name": "GCD vs LCM", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x23257"},
{"url": "https://codeforces.com//problemset/problem/1663/H", "name": "Cross-Language Program", "tags": ["*special problem", "constructive algorithms"], "problem_rating": [null], "solved_by": "x1274"},
{"url": "https://codeforces.com//problemset/problem/1663/G", "name": "Six Characters", "tags": ["*special problem", "constructive algorithms", "strings"], "problem_rating": [null], "solved_by": "x208"},
{"url": "https://codeforces.com//problemset/problem/1663/F", "name": "In Every Generation...", "tags": ["*special problem", "strings"], "problem_rating": [null], "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1663/E", "name": "Are You Safe?", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x548"},
{"url": "https://codeforces.com//problemset/problem/1663/D", "name": "Is it rated - 3", "tags": ["*special problem", "combinatorics", "dp", "math"], "problem_rating": [null], "solved_by": "x1397"},
{"url": "https://codeforces.com//problemset/problem/1663/C", "name": "Pōja Verdon", "tags": ["*special problem", "implementation", "math"], "problem_rating": [null], "solved_by": "x5644"},
{"url": "https://codeforces.com//problemset/problem/1663/B", "name": "Mike's Sequence", "tags": ["*special problem", "divide and conquer", "implementation", "math"], "problem_rating": [null], "solved_by": "x3373"},
{"url": "https://codeforces.com//problemset/problem/1663/A", "name": "Who Tested?", "tags": ["*special problem", "expression parsing", "trees"], "problem_rating": [null], "solved_by": "x10441"},
{"url": "https://codeforces.com//problemset/problem/1662/O", "name": "Circular Maze", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": [null], "solved_by": "x1296"},
{"url": "https://codeforces.com//problemset/problem/1662/N", "name": "Drone Photo", "tags": ["combinatorics", "math", "sortings"], "problem_rating": [null], "solved_by": "x712"},
{"url": "https://codeforces.com//problemset/problem/1662/M", "name": "Bottle Arrangements", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x3347"},
{"url": "https://codeforces.com//problemset/problem/1662/L", "name": "Il Derby della Madonnina", "tags": ["data structures", "dp", "math"], "problem_rating": [null], "solved_by": "x1015"},
{"url": "https://codeforces.com//problemset/problem/1662/K", "name": "Pandemic Restrictions", "tags": ["geometry", "ternary search"], "problem_rating": [null], "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1662/J", "name": "Training Camp", "tags": ["flows", "graphs"], "problem_rating": [null], "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1662/I", "name": "Ice Cream Shop", "tags": ["brute force", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x2017"},
{"url": "https://codeforces.com//problemset/problem/1662/H", "name": "Boundary", "tags": ["brute force", "math"], "problem_rating": [null], "solved_by": "x2860"},
{"url": "https://codeforces.com//problemset/problem/1662/G", "name": "Gastronomic Event", "tags": ["dp", "greedy", "trees"], "problem_rating": [null], "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/1662/F", "name": "Antennas", "tags": ["data structures", "dfs and similar", "graphs", "graphs", "implementation", "implementation", "shortest paths", "shortest paths"], "problem_rating": [null], "solved_by": "x993"},
{"url": "https://codeforces.com//problemset/problem/1662/E", "name": "Round Table", "tags": ["math"], "problem_rating": [null], "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1662/D", "name": "Evolution of Weasels", "tags": ["greedy", "implementation", "strings"], "problem_rating": [null], "solved_by": "x1723"},
{"url": "https://codeforces.com//problemset/problem/1662/C", "name": "European Trip", "tags": ["dp", "graphs", "math", "matrices"], "problem_rating": [null], "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/1662/B", "name": "Toys", "tags": ["greedy", "strings"], "problem_rating": [null], "solved_by": "x133"},
{"url": "https://codeforces.com//problemset/problem/1662/A", "name": "Organizing SWERC", "tags": ["brute force", "implementation"], "problem_rating": [null], "solved_by": "x4221"},
{"url": "https://codeforces.com//problemset/problem/1661/F", "name": "Teleporters", "tags": ["binary search", "greedy"], "problem_rating": "2600", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1661/E", "name": "Narrow Components", "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"], "problem_rating": "2500", "solved_by": "x934"},
{"url": "https://codeforces.com//problemset/problem/1661/D", "name": "Progressions Covering", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x4631"},
{"url": "https://codeforces.com//problemset/problem/1661/C", "name": "Water the Trees", "tags": ["binary search", "greedy", "math"], "problem_rating": "1700", "solved_by": "x9180"},
{"url": "https://codeforces.com//problemset/problem/1661/B", "name": "Getting Zero", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1300", "solved_by": "x17387"},
{"url": "https://codeforces.com//problemset/problem/1661/A", "name": "Array Balancing", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x18280"},
{"url": "https://codeforces.com//problemset/problem/1660/F2", "name": "Promising String (hard version)", "tags": ["data structures", "implementation", "math", "strings"], "problem_rating": "2100", "solved_by": "x2662"},
{"url": "https://codeforces.com//problemset/problem/1660/F1", "name": "Promising String (easy version)", "tags": ["brute force", "implementation", "math", "strings"], "problem_rating": "1700", "solved_by": "x7138"},
{"url": "https://codeforces.com//problemset/problem/1660/E", "name": "Matrix and Shifts", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x7144"},
{"url": "https://codeforces.com//problemset/problem/1660/D", "name": "Maximum Product Strikes Back", "tags": ["brute force", "implementation", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x8453"},
{"url": "https://codeforces.com//problemset/problem/1660/C", "name": "Get an Even String", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x19206"},
{"url": "https://codeforces.com//problemset/problem/1660/B", "name": "Vlad and Candies", "tags": ["math"], "problem_rating": "800", "solved_by": "x27845"},
{"url": "https://codeforces.com//problemset/problem/1660/A", "name": "Vasya and Coins", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x35568"},
{"url": "https://codeforces.com//problemset/problem/1659/F", "name": "Tree and Permutation Game", "tags": ["dfs and similar", "games", "graphs", "trees"], "problem_rating": "3000", "solved_by": "x189"},
{"url": "https://codeforces.com//problemset/problem/1659/E", "name": "AND-MEX Walk", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2200", "solved_by": "x1500"},
{"url": "https://codeforces.com//problemset/problem/1659/D", "name": "Reverse Sort Sum", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1900", "solved_by": "x3946"},
{"url": "https://codeforces.com//problemset/problem/1659/C", "name": "Line Empire", "tags": ["binary search", "brute force", "dp", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x10136"},
{"url": "https://codeforces.com//problemset/problem/1659/B", "name": "Bit Flipping", "tags": ["bitmasks", "constructive algorithms", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x10802"},
{"url": "https://codeforces.com//problemset/problem/1659/A", "name": "Red Versus Blue", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x17785"},
{"url": "https://codeforces.com//problemset/problem/1658/F", "name": "Juju and Binary String", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2700", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1658/E", "name": "Gojou and Matrix Game", "tags": ["data structures", "dp", "games", "hashing", "implementation", "math", "number theory", "sortings"], "problem_rating": "2500", "solved_by": "x1032"},
{"url": "https://codeforces.com//problemset/problem/1658/D2", "name": "388535 (Hard Version)", "tags": ["bitmasks", "brute force", "data structures", "math"], "problem_rating": "2300", "solved_by": "x2478"},
{"url": "https://codeforces.com//problemset/problem/1658/D1", "name": "388535 (Easy Version)", "tags": ["bitmasks", "math"], "problem_rating": "1600", "solved_by": "x8937"},
{"url": "https://codeforces.com//problemset/problem/1658/C", "name": "Shinju and the Lost Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x9202"},
{"url": "https://codeforces.com//problemset/problem/1658/B", "name": "Marin and Anti-coprime Permutation", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "800", "solved_by": "x18498"},
{"url": "https://codeforces.com//problemset/problem/1658/A", "name": "Marin and Photoshoot", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "800", "solved_by": "x20230"},
{"url": "https://codeforces.com//problemset/problem/1657/F", "name": "Words on Tree", "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x569"},
{"url": "https://codeforces.com//problemset/problem/1657/E", "name": "Star MST", "tags": ["combinatorics", "dp", "graph matchings", "math"], "problem_rating": "2200", "solved_by": "x2032"},
{"url": "https://codeforces.com//problemset/problem/1657/D", "name": "For Gamers. By Gamers.", "tags": ["binary search", "brute force", "greedy", "math", "sortings"], "problem_rating": "2000", "solved_by": "x4777"},
{"url": "https://codeforces.com//problemset/problem/1657/C", "name": "Bracket Sequence Deletion", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x16673"},
{"url": "https://codeforces.com//problemset/problem/1657/B", "name": "XY Sequence", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22709"},
{"url": "https://codeforces.com//problemset/problem/1657/A", "name": "Integer Moves", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x23865"},
{"url": "https://codeforces.com//problemset/problem/1656/I", "name": "Neighbour Ordering", "tags": ["constructive algorithms", "graphs"], "problem_rating": "3500", "solved_by": "x99"},
{"url": "https://codeforces.com//problemset/problem/1656/H", "name": "Equal LCM Subsets", "tags": ["data structures", "math", "number theory"], "problem_rating": "3200", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/1656/G", "name": "Cycle Palindrome", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "3200", "solved_by": "x367"},
{"url": "https://codeforces.com//problemset/problem/1656/F", "name": "Parametric MST", "tags": ["binary search", "constructive algorithms", "graphs", "greedy", "math", "sortings"], "problem_rating": "2600", "solved_by": "x1017"},
{"url": "https://codeforces.com//problemset/problem/1656/E", "name": "Equal Tree Sums", "tags": ["constructive algorithms", "dfs and similar", "math", "trees"], "problem_rating": "2200", "solved_by": "x3368"},
{"url": "https://codeforces.com//problemset/problem/1656/D", "name": "K-good", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1900", "solved_by": "x6746"},
{"url": "https://codeforces.com//problemset/problem/1656/C", "name": "Make Equal With Mod", "tags": ["constructive algorithms", "math", "number theory", "sortings"], "problem_rating": "1200", "solved_by": "x18854"},
{"url": "https://codeforces.com//problemset/problem/1656/B", "name": "Subtract Operation", "tags": ["data structures", "greedy", "math", "two pointers"], "problem_rating": "1100", "solved_by": "x18274"},
{"url": "https://codeforces.com//problemset/problem/1656/A", "name": "Good Pairs", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x19500"},
{"url": "https://codeforces.com//problemset/problem/1654/H", "name": "Three Minimums", "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1654/G", "name": "Snowy Mountain", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "2900", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/1654/F", "name": "Minimal String Xoration", "tags": ["bitmasks", "data structures", "divide and conquer", "greedy", "hashing", "sortings", "strings"], "problem_rating": "2800", "solved_by": "x1090"},
{"url": "https://codeforces.com//problemset/problem/1654/E", "name": "Arithmetic Operations", "tags": ["brute force", "data structures", "graphs", "math"], "problem_rating": "2300", "solved_by": "x2024"},
{"url": "https://codeforces.com//problemset/problem/1654/D", "name": "Potion Brewing Class", "tags": ["dfs and similar", "math", "number theory", "trees"], "problem_rating": "2100", "solved_by": "x2810"},
{"url": "https://codeforces.com//problemset/problem/1654/C", "name": "Alice and the Cake", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x13339"},
{"url": "https://codeforces.com//problemset/problem/1654/B", "name": "Prefix Removals", "tags": ["strings"], "problem_rating": "800", "solved_by": "x15546"},
{"url": "https://codeforces.com//problemset/problem/1654/A", "name": "Maximum Cake Tastiness", "tags": ["brute force", "greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x18511"},
{"url": "https://codeforces.com//problemset/problem/1651/F", "name": "Tower Defense", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "3000", "solved_by": "x371"},
{"url": "https://codeforces.com//problemset/problem/1651/E", "name": "Sum of Matchings", "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "graph matchings", "greedy", "math"], "problem_rating": "2600", "solved_by": "x510"},
{"url": "https://codeforces.com//problemset/problem/1651/D", "name": "Nearest Excluded Points", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x4981"},
{"url": "https://codeforces.com//problemset/problem/1651/C", "name": "Fault-tolerant Network", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x10603"},
{"url": "https://codeforces.com//problemset/problem/1651/B", "name": "Prove Him Wrong", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19458"},
{"url": "https://codeforces.com//problemset/problem/1651/A", "name": "Playoff", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25525"},
{"url": "https://codeforces.com//problemset/problem/1650/G", "name": "Counting Shortcuts", "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x2370"},
{"url": "https://codeforces.com//problemset/problem/1650/F", "name": "Vitaly and Advanced Useless Algorithms", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x1413"},
{"url": "https://codeforces.com//problemset/problem/1650/E", "name": "Rescheduling the Exam", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4075"},
{"url": "https://codeforces.com//problemset/problem/1650/D", "name": "Twist the Permutation", "tags": ["brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "1300", "solved_by": "x12854"},
{"url": "https://codeforces.com//problemset/problem/1650/C", "name": "Weight of the System of Nested Segments", "tags": ["greedy", "hashing", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x16577"},
{"url": "https://codeforces.com//problemset/problem/1650/B", "name": "DIV + MOD", "tags": ["math"], "problem_rating": "900", "solved_by": "x27293"},
{"url": "https://codeforces.com//problemset/problem/1650/A", "name": "Deletions of Two Adjacent Letters", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x34340"},
{"url": "https://codeforces.com//problemset/problem/1649/B", "name": "Game of Ball Passing", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x12899"},
{"url": "https://codeforces.com//problemset/problem/1649/A", "name": "Game", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15458"},
{"url": "https://codeforces.com//problemset/problem/1648/F", "name": "Two Avenues", "tags": ["data structures", "dfs and similar", "graphs"], "problem_rating": "3500", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1648/E", "name": "Air Reform", "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "problem_rating": "3200", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1648/D", "name": "Serious Business", "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"], "problem_rating": "2800", "solved_by": "x824"},
{"url": "https://codeforces.com//problemset/problem/1648/C", "name": "Tyler and Strings", "tags": ["combinatorics", "data structures", "implementation"], "problem_rating": "1900", "solved_by": "x2911"},
{"url": "https://codeforces.com//problemset/problem/1648/B", "name": "Integral Array", "tags": ["brute force", "constructive algorithms", "data structures", "math"], "problem_rating": "1800", "solved_by": "x6319"},
{"url": "https://codeforces.com//problemset/problem/1648/A", "name": "Weird Sum", "tags": ["combinatorics", "data structures", "geometry", "math", "matrices", "sortings"], "problem_rating": "1400", "solved_by": "x12278"},
{"url": "https://codeforces.com//problemset/problem/1647/F", "name": "Madoka and Laziness", "tags": ["dp", "greedy"], "problem_rating": "3100", "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/1647/E", "name": "Madoka and the Sixth-graders", "tags": ["data structures", "dfs and similar", "greedy"], "problem_rating": "2500", "solved_by": "x972"},
{"url": "https://codeforces.com//problemset/problem/1647/D", "name": "Madoka and the Best School in Russia", "tags": ["constructive algorithms", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x5215"},
{"url": "https://codeforces.com//problemset/problem/1647/C", "name": "Madoka and Childish Pranks", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x12495"},
{"url": "https://codeforces.com//problemset/problem/1647/B", "name": "Madoka and the Elegant Gift", "tags": ["brute force", "constructive algorithms", "graphs", "implementation"], "problem_rating": "1200", "solved_by": "x15234"},
{"url": "https://codeforces.com//problemset/problem/1647/A", "name": "Madoka and Math Dad", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x22646"},
{"url": "https://codeforces.com//problemset/problem/1646/F", "name": "Playing Around the Table", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "2900", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/1646/E", "name": "Power Board", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2338"},
{"url": "https://codeforces.com//problemset/problem/1646/D", "name": "Weight the Tree", "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x3648"},
{"url": "https://codeforces.com//problemset/problem/1646/C", "name": "Factorials and Powers of Two", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "math"], "problem_rating": "1500", "solved_by": "x13705"},
{"url": "https://codeforces.com//problemset/problem/1646/B", "name": "Quality vs Quantity", "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "800", "solved_by": "x21027"},
{"url": "https://codeforces.com//problemset/problem/1646/A", "name": "Square Counting", "tags": ["math"], "problem_rating": "800", "solved_by": "x24127"},
{"url": "https://codeforces.com//problemset/problem/1644/F", "name": "Basis", "tags": ["combinatorics", "fft", "math", "number theory"], "problem_rating": "2900", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1644/E", "name": "Expand the Path", "tags": ["brute force", "combinatorics", "data structures", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3059"},
{"url": "https://codeforces.com//problemset/problem/1644/D", "name": "Cross Coloring", "tags": ["data structures", "implementation", "math"], "problem_rating": "1700", "solved_by": "x7107"},
{"url": "https://codeforces.com//problemset/problem/1644/C", "name": "Increase Subarray Sums", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13585"},
{"url": "https://codeforces.com//problemset/problem/1644/B", "name": "Anti-Fibonacci Permutation", "tags": ["brute force", "constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x20583"},
{"url": "https://codeforces.com//problemset/problem/1644/A", "name": "Doors and Keys", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x27153"},
{"url": "https://codeforces.com//problemset/problem/1642/B", "name": "Power Walking", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x16772"},
{"url": "https://codeforces.com//problemset/problem/1642/A", "name": "Hard Way", "tags": ["geometry"], "problem_rating": "800", "solved_by": "x16102"},
{"url": "https://codeforces.com//problemset/problem/1641/F", "name": "Covering Circle", "tags": ["geometry"], "problem_rating": "3500", "solved_by": "x97"},
{"url": "https://codeforces.com//problemset/problem/1641/E", "name": "Special Positions", "tags": ["combinatorics", "divide and conquer", "fft", "math"], "problem_rating": "3300", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1641/D", "name": "Two Arrays", "tags": ["bitmasks", "brute force", "combinatorics", "greedy", "hashing", "math", "two pointers"], "problem_rating": "2700", "solved_by": "x1071"},
{"url": "https://codeforces.com//problemset/problem/1641/C", "name": "Anonymity Is Important", "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2375"},
{"url": "https://codeforces.com//problemset/problem/1641/B", "name": "Repetitions Decoding", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x3765"},
{"url": "https://codeforces.com//problemset/problem/1641/A", "name": "Great Sequence", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x17731"},
{"url": "https://codeforces.com//problemset/problem/1639/K", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/J", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/I", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/H", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/G", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/F", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/E", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/D", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/C", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/B", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1639/A", "name": "Treasure Hunt", "tags": ["graphs", "interactive"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1638/F", "name": "Two Posters", "tags": ["brute force", "data structures", "greedy", "two pointers"], "problem_rating": "3200", "solved_by": "x217"},
{"url": "https://codeforces.com//problemset/problem/1638/E", "name": "Colorful Operations", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2400", "solved_by": "x1846"},
{"url": "https://codeforces.com//problemset/problem/1638/D", "name": "Big Brush", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4131"},
{"url": "https://codeforces.com//problemset/problem/1638/C", "name": "Inversion Graph", "tags": ["data structures", "dsu", "graphs", "math"], "problem_rating": "1300", "solved_by": "x14558"},
{"url": "https://codeforces.com//problemset/problem/1638/B", "name": "Odd Swap Sort", "tags": ["data structures", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20665"},
{"url": "https://codeforces.com//problemset/problem/1638/A", "name": "Reverse", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x21362"},
{"url": "https://codeforces.com//problemset/problem/1637/H", "name": "Minimize Inversions Number", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "3500", "solved_by": "x310"},
{"url": "https://codeforces.com//problemset/problem/1637/G", "name": "Birthday", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "3000", "solved_by": "x498"},
{"url": "https://codeforces.com//problemset/problem/1637/F", "name": "Towers", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1728"},
{"url": "https://codeforces.com//problemset/problem/1637/E", "name": "Best Pair", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "2100", "solved_by": "x3231"},
{"url": "https://codeforces.com//problemset/problem/1637/D", "name": "Yet Another Minimization Problem", "tags": ["dp", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7572"},
{"url": "https://codeforces.com//problemset/problem/1637/C", "name": "Andrew and Stones", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x17529"},
{"url": "https://codeforces.com//problemset/problem/1637/B", "name": "MEX and Array", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x14725"},
{"url": "https://codeforces.com//problemset/problem/1637/A", "name": "Sorting Parts", "tags": ["brute force", "sortings"], "problem_rating": "800", "solved_by": "x22194"},
{"url": "https://codeforces.com//problemset/problem/1635/F", "name": "Closest Pair", "tags": ["data structures", "greedy"], "problem_rating": "2800", "solved_by": "x994"},
{"url": "https://codeforces.com//problemset/problem/1635/E", "name": "Cars", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2194"},
{"url": "https://codeforces.com//problemset/problem/1635/D", "name": "Infinite Set", "tags": ["bitmasks", "dp", "math", "matrices", "number theory", "strings"], "problem_rating": "1800", "solved_by": "x6141"},
{"url": "https://codeforces.com//problemset/problem/1635/C", "name": "Differential Sorting", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x17003"},
{"url": "https://codeforces.com//problemset/problem/1635/B", "name": "Avoid Local Maximums", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x17880"},
{"url": "https://codeforces.com//problemset/problem/1635/A", "name": "Min Or Sum", "tags": ["bitmasks", "greedy"], "problem_rating": "800", "solved_by": "x22634"},
{"url": "https://codeforces.com//problemset/problem/1634/F", "name": "Fibonacci Additions", "tags": ["brute force", "data structures", "hashing", "implementation", "math"], "problem_rating": "2700", "solved_by": "x1576"},
{"url": "https://codeforces.com//problemset/problem/1634/E", "name": "Fair Share", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1634/D", "name": "Finding Zero", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x4296"},
{"url": "https://codeforces.com//problemset/problem/1634/C", "name": "OKEA", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18062"},
{"url": "https://codeforces.com//problemset/problem/1634/B", "name": "Fortune Telling", "tags": ["bitmasks", "math"], "problem_rating": "1400", "solved_by": "x16127"},
{"url": "https://codeforces.com//problemset/problem/1634/A", "name": "Reverse and Concatenate", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x23768"},
{"url": "https://codeforces.com//problemset/problem/1633/F", "name": "Perfect Matching", "tags": ["data structures", "divide and conquer", "interactive", "trees"], "problem_rating": "2800", "solved_by": "x314"},
{"url": "https://codeforces.com//problemset/problem/1633/E", "name": "Spanning Tree Queries", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1484"},
{"url": "https://codeforces.com//problemset/problem/1633/D", "name": "Make Them Equal", "tags": ["dp", "greedy"], "problem_rating": "1600", "solved_by": "x13562"},
{"url": "https://codeforces.com//problemset/problem/1633/C", "name": "Kill the Monster", "tags": ["brute force", "math"], "problem_rating": "1100", "solved_by": "x19829"},
{"url": "https://codeforces.com//problemset/problem/1633/B", "name": "Minority", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27553"},
{"url": "https://codeforces.com//problemset/problem/1633/A", "name": "Div. 7", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x32541"},
{"url": "https://codeforces.com//problemset/problem/1632/E2", "name": "Distance Tree (hard version)", "tags": ["binary search", "dfs and similar", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/1632/E1", "name": "Distance Tree (easy version)", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1133"},
{"url": "https://codeforces.com//problemset/problem/1632/D", "name": "New Year Concert", "tags": ["binary search", "data structures", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2000", "solved_by": "x4564"},
{"url": "https://codeforces.com//problemset/problem/1632/C", "name": "Strange Test", "tags": ["binary search", "bitmasks", "brute force", "dp", "math"], "problem_rating": "1600", "solved_by": "x12529"},
{"url": "https://codeforces.com//problemset/problem/1632/B", "name": "Roof Construction", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1000", "solved_by": "x21636"},
{"url": "https://codeforces.com//problemset/problem/1632/A", "name": "ABC", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x29211"},
{"url": "https://codeforces.com//problemset/problem/1631/B", "name": "Fun with Even Subarrays", "tags": ["dp", "greedy"], "problem_rating": "1100", "solved_by": "x19840"},
{"url": "https://codeforces.com//problemset/problem/1631/A", "name": "Min Max Swap", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x28886"},
{"url": "https://codeforces.com//problemset/problem/1630/F", "name": "Making It Bipartite", "tags": ["flows", "graph matchings", "graphs", "number theory"], "problem_rating": "3400", "solved_by": "x534"},
{"url": "https://codeforces.com//problemset/problem/1630/E", "name": "Expected Components", "tags": ["combinatorics", "math", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1630/D", "name": "Flipping Range", "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "problem_rating": "2400", "solved_by": "x1560"},
{"url": "https://codeforces.com//problemset/problem/1630/C", "name": "Paint the Middle", "tags": ["dp", "greedy", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x2897"},
{"url": "https://codeforces.com//problemset/problem/1630/B", "name": "Range and Partition", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x5640"},
{"url": "https://codeforces.com//problemset/problem/1630/A", "name": "And Matching", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1500", "solved_by": "x14331"},
{"url": "https://codeforces.com//problemset/problem/1629/B", "name": "GCD Arrays", "tags": ["greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x23201"},
{"url": "https://codeforces.com//problemset/problem/1629/A", "name": "Download More RAM", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x28800"},
{"url": "https://codeforces.com//problemset/problem/1628/F", "name": "Spaceship Crisis Management", "tags": ["binary search", "data structures", "geometry", "sortings"], "problem_rating": "3500", "solved_by": "x86"},
{"url": "https://codeforces.com//problemset/problem/1628/E", "name": "Groceries in Meteor Town", "tags": ["binary search", "data structures", "dsu", "trees"], "problem_rating": "3100", "solved_by": "x853"},
{"url": "https://codeforces.com//problemset/problem/1628/D2", "name": "Game on Sum (Hard Version)", "tags": ["combinatorics", "dp", "games", "math"], "problem_rating": "2400", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1628/D1", "name": "Game on Sum (Easy Version)", "tags": ["combinatorics", "dp", "games", "math"], "problem_rating": "2100", "solved_by": "x3075"},
{"url": "https://codeforces.com//problemset/problem/1628/C", "name": "Grid Xor", "tags": ["constructive algorithms", "greedy", "implementation", "interactive", "math"], "problem_rating": "2300", "solved_by": "x3126"},
{"url": "https://codeforces.com//problemset/problem/1628/B", "name": "Peculiar Movie Preferences", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x11385"},
{"url": "https://codeforces.com//problemset/problem/1628/A", "name": "Meximum Array", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1400", "solved_by": "x15415"},
{"url": "https://codeforces.com//problemset/problem/1627/F", "name": "Not Splitting", "tags": ["geometry", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2700", "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1627/E", "name": "Not Escaping", "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"], "problem_rating": "2200", "solved_by": "x2296"},
{"url": "https://codeforces.com//problemset/problem/1627/D", "name": "Not Adding", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1900", "solved_by": "x8055"},
{"url": "https://codeforces.com//problemset/problem/1627/C", "name": "Not Assigning", "tags": ["constructive algorithms", "dfs and similar", "number theory", "trees"], "problem_rating": "1400", "solved_by": "x14281"},
{"url": "https://codeforces.com//problemset/problem/1627/B", "name": "Not Sitting", "tags": ["games", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x16446"},
{"url": "https://codeforces.com//problemset/problem/1627/A", "name": "Not Shading", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x23909"},
{"url": "https://codeforces.com//problemset/problem/1626/F", "name": "A Random Code Problem", "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "problem_rating": "2800", "solved_by": "x722"},
{"url": "https://codeforces.com//problemset/problem/1626/E", "name": "Black and White Tree", "tags": ["dfs and similar", "greedy", "trees"], "problem_rating": "2400", "solved_by": "x1542"},
{"url": "https://codeforces.com//problemset/problem/1626/D", "name": "Martial Arts Tournament", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "2100", "solved_by": "x3848"},
{"url": "https://codeforces.com//problemset/problem/1626/C", "name": "Monsters And Spells", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "problem_rating": "1700", "solved_by": "x10770"},
{"url": "https://codeforces.com//problemset/problem/1626/B", "name": "Minor Reduction", "tags": ["greedy", "strings"], "problem_rating": "1100", "solved_by": "x22590"},
{"url": "https://codeforces.com//problemset/problem/1626/A", "name": "Equidistant Letters", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x28581"},
{"url": "https://codeforces.com//problemset/problem/1625/E2", "name": "Cats on the Upgrade (hard version)", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/1625/E1", "name": "Cats on the Upgrade (easy version)", "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x1018"},
{"url": "https://codeforces.com//problemset/problem/1625/D", "name": "Binary Spiders", "tags": ["bitmasks", "data structures", "implementation", "math", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x2012"},
{"url": "https://codeforces.com//problemset/problem/1625/C", "name": "Road Optimization", "tags": ["dp"], "problem_rating": "1700", "solved_by": "x10388"},
{"url": "https://codeforces.com//problemset/problem/1625/B", "name": "Elementary Particles", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x15989"},
{"url": "https://codeforces.com//problemset/problem/1625/A", "name": "Ancient Civilization", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "800", "solved_by": "x17092"},
{"url": "https://codeforces.com//problemset/problem/1624/G", "name": "MinOr Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x5765"},
{"url": "https://codeforces.com//problemset/problem/1624/F", "name": "Interacdive Problem", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2000", "solved_by": "x3238"},
{"url": "https://codeforces.com//problemset/problem/1624/E", "name": "Masha-forgetful", "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"], "problem_rating": "2000", "solved_by": "x4027"},
{"url": "https://codeforces.com//problemset/problem/1624/D", "name": "Palindromes Coloring", "tags": ["binary search", "greedy", "sortings", "strings"], "problem_rating": "1400", "solved_by": "x16630"},
{"url": "https://codeforces.com//problemset/problem/1624/C", "name": "Division by Two and Permutation", "tags": ["constructive algorithms", "flows", "graph matchings", "greedy", "math"], "problem_rating": "1100", "solved_by": "x24526"},
{"url": "https://codeforces.com//problemset/problem/1624/B", "name": "Make AP", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x35501"},
{"url": "https://codeforces.com//problemset/problem/1624/A", "name": "Plus One on the Subset", "tags": ["math"], "problem_rating": "800", "solved_by": "x50894"},
{"url": "https://codeforces.com//problemset/problem/1623/E", "name": "Middle Duplication", "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "problem_rating": "2500", "solved_by": "x1086"},
{"url": "https://codeforces.com//problemset/problem/1623/D", "name": "Robot Cleaner Revisit", "tags": ["implementation", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1358"},
{"url": "https://codeforces.com//problemset/problem/1623/C", "name": "Balanced Stone Heaps", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x11638"},
{"url": "https://codeforces.com//problemset/problem/1623/B", "name": "Game on Ranges", "tags": ["brute force", "dfs and similar", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x14000"},
{"url": "https://codeforces.com//problemset/problem/1623/A", "name": "Robot Cleaner", "tags": ["brute force", "implementation", "math"], "problem_rating": "800", "solved_by": "x19972"},
{"url": "https://codeforces.com//problemset/problem/1622/F", "name": "Quadratic Set", "tags": ["constructive algorithms", "hashing", "math", "number theory"], "problem_rating": "2900", "solved_by": "x608"},
{"url": "https://codeforces.com//problemset/problem/1622/E", "name": "Math Test", "tags": ["bitmasks", "brute force", "greedy"], "problem_rating": "2200", "solved_by": "x1868"},
{"url": "https://codeforces.com//problemset/problem/1622/D", "name": "Shuffle", "tags": ["combinatorics", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3950"},
{"url": "https://codeforces.com//problemset/problem/1622/C", "name": "Set or Decrease", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x12700"},
{"url": "https://codeforces.com//problemset/problem/1622/B", "name": "Berland Music", "tags": ["data structures", "greedy", "math", "sortings"], "problem_rating": "1000", "solved_by": "x20758"},
{"url": "https://codeforces.com//problemset/problem/1622/A", "name": "Construct a Rectangle", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x29779"},
{"url": "https://codeforces.com//problemset/problem/1621/I", "name": "Two Sequences", "tags": ["data structures", "hashing", "string suffix structures"], "problem_rating": "3500", "solved_by": "x111"},
{"url": "https://codeforces.com//problemset/problem/1621/H", "name": "Trains and Airplanes", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "3500", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/1621/G", "name": "Weighted Increasing Subsequences", "tags": ["data structures", "dp", "math"], "problem_rating": "3200", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1621/F", "name": "Strange Instructions", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2700", "solved_by": "x545"},
{"url": "https://codeforces.com//problemset/problem/1621/E", "name": "New School", "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2300", "solved_by": "x1740"},
{"url": "https://codeforces.com//problemset/problem/1621/D", "name": "The Winter Hike", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2100", "solved_by": "x4005"},
{"url": "https://codeforces.com//problemset/problem/1621/C", "name": "Hidden Permutations", "tags": ["dfs and similar", "interactive", "math"], "problem_rating": "1700", "solved_by": "x6820"},
{"url": "https://codeforces.com//problemset/problem/1621/B", "name": "Integers Shop", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x13259"},
{"url": "https://codeforces.com//problemset/problem/1621/A", "name": "Stable Arrangement of Rooks", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x23672"},
{"url": "https://codeforces.com//problemset/problem/1620/G", "name": "Subsequences Galore", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2400", "solved_by": "x874"},
{"url": "https://codeforces.com//problemset/problem/1620/F", "name": "Bipartite Array", "tags": ["dp", "greedy"], "problem_rating": "2800", "solved_by": "x595"},
{"url": "https://codeforces.com//problemset/problem/1620/E", "name": "Replace the Numbers", "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "problem_rating": "1900", "solved_by": "x8031"},
{"url": "https://codeforces.com//problemset/problem/1620/D", "name": "Exact Change", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x4110"},
{"url": "https://codeforces.com//problemset/problem/1620/C", "name": "BA-String", "tags": ["brute force", "dp", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x6472"},
{"url": "https://codeforces.com//problemset/problem/1620/B", "name": "Triangles on a Rectangle", "tags": ["geometry", "greedy", "math"], "problem_rating": "1000", "solved_by": "x20366"},
{"url": "https://codeforces.com//problemset/problem/1620/A", "name": "Equal or Not Equal", "tags": ["constructive algorithms", "dsu", "implementation"], "problem_rating": "800", "solved_by": "x21408"},
{"url": "https://codeforces.com//problemset/problem/1619/H", "name": "Permutation and Queries", "tags": ["brute force", "data structures", "divide and conquer", "two pointers"], "problem_rating": "2400", "solved_by": "x1110"},
{"url": "https://codeforces.com//problemset/problem/1619/G", "name": "Unusual Minesweeper", "tags": ["binary search", "dfs and similar", "dsu", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x2355"},
{"url": "https://codeforces.com//problemset/problem/1619/F", "name": "Let's Play the Hat?", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x2067"},
{"url": "https://codeforces.com//problemset/problem/1619/E", "name": "MEX and Increments", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x8994"},
{"url": "https://codeforces.com//problemset/problem/1619/D", "name": "New Year's Problem", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7410"},
{"url": "https://codeforces.com//problemset/problem/1619/C", "name": "Wrong Addition", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x20614"},
{"url": "https://codeforces.com//problemset/problem/1619/B", "name": "Squares and Cubes", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x30499"},
{"url": "https://codeforces.com//problemset/problem/1619/A", "name": "Square String?", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x50033"},
{"url": "https://codeforces.com//problemset/problem/1618/G", "name": "Trader Problem", "tags": ["data structures", "dsu", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x1522"},
{"url": "https://codeforces.com//problemset/problem/1618/F", "name": "Reverse", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "implementation", "math", "strings"], "problem_rating": "2000", "solved_by": "x4143"},
{"url": "https://codeforces.com//problemset/problem/1618/E", "name": "Singers' Tour", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x7070"},
{"url": "https://codeforces.com//problemset/problem/1618/D", "name": "Array and Operations", "tags": ["dp", "greedy", "math"], "problem_rating": "1300", "solved_by": "x18635"},
{"url": "https://codeforces.com//problemset/problem/1618/C", "name": "Paint the Array", "tags": ["math"], "problem_rating": "1100", "solved_by": "x22316"},
{"url": "https://codeforces.com//problemset/problem/1618/B", "name": "Missing Bigram", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22466"},
{"url": "https://codeforces.com//problemset/problem/1618/A", "name": "Polycarp and Sums of Subsequences", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x32006"},
{"url": "https://codeforces.com//problemset/problem/1617/E", "name": "Christmas Chocolates", "tags": ["dfs and similar", "dp", "games", "graphs", "implementation", "math", "number theory", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x851"},
{"url": "https://codeforces.com//problemset/problem/1617/D2", "name": "Too Many Impostors (hard version)", "tags": ["constructive algorithms", "implementation", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1748"},
{"url": "https://codeforces.com//problemset/problem/1617/D1", "name": "Too Many Impostors (easy version)", "tags": ["constructive algorithms", "implementation", "interactive"], "problem_rating": "1800", "solved_by": "x4605"},
{"url": "https://codeforces.com//problemset/problem/1617/C", "name": "Paprika and Permutation", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x14806"},
{"url": "https://codeforces.com//problemset/problem/1617/B", "name": "GCD Problem", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "900", "solved_by": "x22892"},
{"url": "https://codeforces.com//problemset/problem/1617/A", "name": "Forbidden Subsequence", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "800", "solved_by": "x16191"},
{"url": "https://codeforces.com//problemset/problem/1616/H", "name": "Keep XOR Low", "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"], "problem_rating": "3000", "solved_by": "x830"},
{"url": "https://codeforces.com//problemset/problem/1616/G", "name": "Just Add an Edge", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "3500", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/1616/F", "name": "Tricolor Triangles", "tags": ["brute force", "graphs", "math", "matrices"], "problem_rating": "2900", "solved_by": "x587"},
{"url": "https://codeforces.com//problemset/problem/1616/E", "name": "Lexicographically Small Enough", "tags": ["brute force", "data structures", "greedy", "strings"], "problem_rating": "2200", "solved_by": "x2459"},
{"url": "https://codeforces.com//problemset/problem/1616/D", "name": "Keep the Average High", "tags": ["dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x4810"},
{"url": "https://codeforces.com//problemset/problem/1616/C", "name": "Representative Edges", "tags": ["brute force", "geometry", "implementation", "math"], "problem_rating": "1500", "solved_by": "x12116"},
{"url": "https://codeforces.com//problemset/problem/1616/B", "name": "Mirror in the String", "tags": ["greedy", "strings"], "problem_rating": "1100", "solved_by": "x19472"},
{"url": "https://codeforces.com//problemset/problem/1616/A", "name": "Integer Diversity", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22564"},
{"url": "https://codeforces.com//problemset/problem/1615/H", "name": "Reindeer Games", "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x322"},
{"url": "https://codeforces.com//problemset/problem/1615/G", "name": "Maximum Adjacent Pairs", "tags": ["constructive algorithms", "graph matchings"], "problem_rating": "3300", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1615/F", "name": "LEGOndary Grandmaster", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2800", "solved_by": "x849"},
{"url": "https://codeforces.com//problemset/problem/1615/E", "name": "Purple Crayon", "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "math", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1423"},
{"url": "https://codeforces.com//problemset/problem/1615/D", "name": "X(or)-mas Tree", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1861"},
{"url": "https://codeforces.com//problemset/problem/1615/C", "name": "Menorah", "tags": ["brute force", "graphs", "greedy", "math"], "problem_rating": "1600", "solved_by": "x8265"},
{"url": "https://codeforces.com//problemset/problem/1615/B", "name": "And It's Non-Zero", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1300", "solved_by": "x15572"},
{"url": "https://codeforces.com//problemset/problem/1615/A", "name": "Closing The Gap", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20635"},
{"url": "https://codeforces.com//problemset/problem/1614/E", "name": "Divan and a Cottage", "tags": ["binary search", "data structures"], "problem_rating": "2600", "solved_by": "x815"},
{"url": "https://codeforces.com//problemset/problem/1614/D2", "name": "Divan and Kostomuksha (hard version)", "tags": ["dp", "number theory"], "problem_rating": "2300", "solved_by": "x2259"},
{"url": "https://codeforces.com//problemset/problem/1614/D1", "name": "Divan and Kostomuksha (easy version)", "tags": ["dp", "number theory"], "problem_rating": "2100", "solved_by": "x3777"},
{"url": "https://codeforces.com//problemset/problem/1614/C", "name": "Divan and bitwise operations", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "problem_rating": "1500", "solved_by": "x10099"},
{"url": "https://codeforces.com//problemset/problem/1614/B", "name": "Divan and a New Project", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x18524"},
{"url": "https://codeforces.com//problemset/problem/1614/A", "name": "Divan and a Store", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x23157"},
{"url": "https://codeforces.com//problemset/problem/1613/F", "name": "Tree Coloring", "tags": ["combinatorics", "divide and conquer", "fft"], "problem_rating": "2600", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1613/E", "name": "Crazy Robot", "tags": ["dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x5080"},
{"url": "https://codeforces.com//problemset/problem/1613/D", "name": "MEX Sequences", "tags": ["dp", "math"], "problem_rating": "1900", "solved_by": "x4517"},
{"url": "https://codeforces.com//problemset/problem/1613/C", "name": "Poisoned Dagger", "tags": ["binary search"], "problem_rating": "1200", "solved_by": "x23508"},
{"url": "https://codeforces.com//problemset/problem/1613/B", "name": "Absent Remainder", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x21429"},
{"url": "https://codeforces.com//problemset/problem/1613/A", "name": "Long Comparison", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x24240"},
{"url": "https://codeforces.com//problemset/problem/1612/G", "name": "Max Sum Array", "tags": ["combinatorics", "constructive algorithms", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x825"},
{"url": "https://codeforces.com//problemset/problem/1612/F", "name": "Armor and Weapons", "tags": ["brute force", "dp", "greedy", "shortest paths"], "problem_rating": "2800", "solved_by": "x586"},
{"url": "https://codeforces.com//problemset/problem/1612/E", "name": "Messages", "tags": ["brute force", "dp", "greedy", "probabilities", "sortings"], "problem_rating": "2000", "solved_by": "x2440"},
{"url": "https://codeforces.com//problemset/problem/1612/D", "name": "X-Magic Pair", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x8988"},
{"url": "https://codeforces.com//problemset/problem/1612/C", "name": "Chat Ban", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x16550"},
{"url": "https://codeforces.com//problemset/problem/1612/B", "name": "Special Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x17034"},
{"url": "https://codeforces.com//problemset/problem/1612/A", "name": "Distance", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x17581"},
{"url": "https://codeforces.com//problemset/problem/1611/G", "name": "Robot and Candies", "tags": ["data structures", "graph matchings", "greedy"], "problem_rating": "2500", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1611/F", "name": "ATM and Students", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "1800", "solved_by": "x6325"},
{"url": "https://codeforces.com//problemset/problem/1611/E2", "name": "Escape The Maze (hard version)", "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "problem_rating": "1900", "solved_by": "x3734"},
{"url": "https://codeforces.com//problemset/problem/1611/E1", "name": "Escape The Maze (easy version)", "tags": ["dfs and similar", "greedy", "shortest paths", "trees", "two pointers"], "problem_rating": "1700", "solved_by": "x7125"},
{"url": "https://codeforces.com//problemset/problem/1611/D", "name": "Weights Assignment For Tree Edges", "tags": ["constructive algorithms", "trees"], "problem_rating": "1500", "solved_by": "x9701"},
{"url": "https://codeforces.com//problemset/problem/1611/C", "name": "Polycarp Recovers the Permutation", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18173"},
{"url": "https://codeforces.com//problemset/problem/1611/B", "name": "Team Composition: Programmers and Mathematicians", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x29099"},
{"url": "https://codeforces.com//problemset/problem/1611/A", "name": "Make Even", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x31105"},
{"url": "https://codeforces.com//problemset/problem/1610/I", "name": "Mashtali vs AtCoder", "tags": ["games", "trees"], "problem_rating": "3100", "solved_by": "x278"},
{"url": "https://codeforces.com//problemset/problem/1610/H", "name": "Squid Game", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "3100", "solved_by": "x475"},
{"url": "https://codeforces.com//problemset/problem/1610/G", "name": "AmShZ Wins a Bet", "tags": ["data structures", "greedy", "hashing"], "problem_rating": "3300", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1610/F", "name": "Mashtali: a Space Oddysey", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "3000", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1610/E", "name": "AmShZ and G.O.A.T.", "tags": ["binary search", "brute force", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1647"},
{"url": "https://codeforces.com//problemset/problem/1610/D", "name": "Not Quite Lee", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2000", "solved_by": "x2656"},
{"url": "https://codeforces.com//problemset/problem/1610/C", "name": "Keshi Is Throwing a Party", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x11126"},
{"url": "https://codeforces.com//problemset/problem/1610/B", "name": "Kalindrome Array", "tags": ["greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x15367"},
{"url": "https://codeforces.com//problemset/problem/1610/A", "name": "Anti Light's Cell Guessing", "tags": ["math"], "problem_rating": "900", "solved_by": "x15966"},
{"url": "https://codeforces.com//problemset/problem/1609/H", "name": "Pushing Robots", "tags": [], "problem_rating": "3500", "solved_by": "x90"},
{"url": "https://codeforces.com//problemset/problem/1609/G", "name": "A Stroll Around the Matrix", "tags": ["data structures", "greedy", "math"], "problem_rating": "3000", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1609/F", "name": "Interesting Sections", "tags": ["data structures", "divide and conquer", "meet-in-the-middle", "two pointers"], "problem_rating": "2800", "solved_by": "x742"},
{"url": "https://codeforces.com//problemset/problem/1609/E", "name": "William The Oblivious", "tags": ["bitmasks", "data structures", "dp", "matrices"], "problem_rating": "2400", "solved_by": "x1974"},
{"url": "https://codeforces.com//problemset/problem/1609/D", "name": "Social Network", "tags": ["dsu", "graphs", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x7170"},
{"url": "https://codeforces.com//problemset/problem/1609/C", "name": "Complex Market Analysis", "tags": ["binary search", "dp", "implementation", "number theory", "schedules", "two pointers"], "problem_rating": "1400", "solved_by": "x9625"},
{"url": "https://codeforces.com//problemset/problem/1609/B", "name": "William the Vigilant", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x11622"},
{"url": "https://codeforces.com//problemset/problem/1609/A", "name": "Divide and Multiply", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "900", "solved_by": "x16911"},
{"url": "https://codeforces.com//problemset/problem/1608/G", "name": "Alphabetic Tree", "tags": ["binary search", "data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "3500", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1608/F", "name": "MEX counting", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "3200", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/1608/E", "name": "The Cells on the Paper", "tags": ["binary search", "implementation", "sortings"], "problem_rating": "2800", "solved_by": "x431"},
{"url": "https://codeforces.com//problemset/problem/1608/D", "name": "Dominoes", "tags": ["combinatorics", "fft", "graphs", "math", "number theory"], "problem_rating": "2400", "solved_by": "x1366"},
{"url": "https://codeforces.com//problemset/problem/1608/C", "name": "Game Master", "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x6545"},
{"url": "https://codeforces.com//problemset/problem/1608/B", "name": "Build the Permutation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x11575"},
{"url": "https://codeforces.com//problemset/problem/1608/A", "name": "Find Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x18916"},
{"url": "https://codeforces.com//problemset/problem/1607/H", "name": "Banquet Preparations 2", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x1219"},
{"url": "https://codeforces.com//problemset/problem/1607/G", "name": "Banquet Preparations 1", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x1540"},
{"url": "https://codeforces.com//problemset/problem/1607/F", "name": "Robot on the Board 2", "tags": ["brute force", "dfs and similar", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x1908"},
{"url": "https://codeforces.com//problemset/problem/1607/E", "name": "Robot on the Board 1", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x9200"},
{"url": "https://codeforces.com//problemset/problem/1607/D", "name": "Blue-Red Permutation", "tags": ["greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x16624"},
{"url": "https://codeforces.com//problemset/problem/1607/C", "name": "Minimum Extraction", "tags": ["brute force", "sortings"], "problem_rating": "1000", "solved_by": "x24678"},
{"url": "https://codeforces.com//problemset/problem/1607/B", "name": "Odd Grasshopper", "tags": ["math"], "problem_rating": "900", "solved_by": "x25473"},
{"url": "https://codeforces.com//problemset/problem/1607/A", "name": "Linear Keyboard", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x36681"},
{"url": "https://codeforces.com//problemset/problem/1606/F", "name": "Tree Queries", "tags": ["brute force", "dp", "trees"], "problem_rating": "2800", "solved_by": "x525"},
{"url": "https://codeforces.com//problemset/problem/1606/E", "name": "Arena", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x3437"},
{"url": "https://codeforces.com//problemset/problem/1606/D", "name": "Red-Blue Matrix", "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1416"},
{"url": "https://codeforces.com//problemset/problem/1606/C", "name": "Banknotes", "tags": ["greedy", "number theory"], "problem_rating": "1400", "solved_by": "x13973"},
{"url": "https://codeforces.com//problemset/problem/1606/B", "name": "Update Files", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x18514"},
{"url": "https://codeforces.com//problemset/problem/1606/A", "name": "AB Balance", "tags": ["strings"], "problem_rating": "900", "solved_by": "x23761"},
{"url": "https://codeforces.com//problemset/problem/1605/F", "name": "PalindORme", "tags": ["combinatorics", "dp"], "problem_rating": "2900", "solved_by": "x296"},
{"url": "https://codeforces.com//problemset/problem/1605/E", "name": "Array Equalizer", "tags": ["binary search", "greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1016"},
{"url": "https://codeforces.com//problemset/problem/1605/D", "name": "Treelabeling", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x2869"},
{"url": "https://codeforces.com//problemset/problem/1605/C", "name": "Dominant Character", "tags": ["brute force", "greedy", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x16646"},
{"url": "https://codeforces.com//problemset/problem/1605/B", "name": "Reverse Sort", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x17887"},
{"url": "https://codeforces.com//problemset/problem/1605/A", "name": "A.M. Deviation", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x20492"},
{"url": "https://codeforces.com//problemset/problem/1604/B", "name": "XOR Specia-LIS-t", "tags": [], "problem_rating": "1100", "solved_by": "x15559"},
{"url": "https://codeforces.com//problemset/problem/1604/A", "name": "Era", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x21305"},
{"url": "https://codeforces.com//problemset/problem/1603/F", "name": "October 18, 2017", "tags": ["combinatorics", "dp", "implementation", "math"], "problem_rating": "2700", "solved_by": "x271"},
{"url": "https://codeforces.com//problemset/problem/1603/E", "name": "A Perfect Problem", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3200", "solved_by": "x412"},
{"url": "https://codeforces.com//problemset/problem/1603/D", "name": "Artistic Partition", "tags": ["divide and conquer", "dp", "number theory"], "problem_rating": "3000", "solved_by": "x649"},
{"url": "https://codeforces.com//problemset/problem/1603/C", "name": "Extreme Extension", "tags": ["dp", "greedy", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2007"},
{"url": "https://codeforces.com//problemset/problem/1603/B", "name": "Moderate Modular Mode", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1600", "solved_by": "x13297"},
{"url": "https://codeforces.com//problemset/problem/1603/A", "name": "Di-visible Confusion", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x16404"},
{"url": "https://codeforces.com//problemset/problem/1602/B", "name": "Divine Array", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x13969"},
{"url": "https://codeforces.com//problemset/problem/1602/A", "name": "Two Subsequences", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18885"},
{"url": "https://codeforces.com//problemset/problem/1601/F", "name": "Two Sorts", "tags": ["binary search", "dfs and similar", "math", "meet-in-the-middle"], "problem_rating": "3400", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1601/E", "name": "Phys Ed Online", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2900", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1601/D", "name": "Difficult Mountain", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x1419"},
{"url": "https://codeforces.com//problemset/problem/1601/C", "name": "Optimal Insertion", "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1968"},
{"url": "https://codeforces.com//problemset/problem/1601/B", "name": "Frog Traveler", "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"], "problem_rating": "1900", "solved_by": "x4879"},
{"url": "https://codeforces.com//problemset/problem/1601/A", "name": "Array Elimination", "tags": ["bitmasks", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x13994"},
{"url": "https://codeforces.com//problemset/problem/1600/J", "name": "Robot Factory", "tags": ["bitmasks", "dfs and similar"], "problem_rating": "1400", "solved_by": "x3838"},
{"url": "https://codeforces.com//problemset/problem/1600/F", "name": "Party Organization", "tags": ["brute force", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x468"},
{"url": "https://codeforces.com//problemset/problem/1600/E", "name": "Array Game", "tags": ["games", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x1992"},
{"url": "https://codeforces.com//problemset/problem/1599/J", "name": "Bob's Beautiful Array", "tags": ["bitmasks", "brute force", "greedy"], "problem_rating": "2600", "solved_by": "x287"},
{"url": "https://codeforces.com//problemset/problem/1599/I", "name": "Desert", "tags": ["data structures", "graphs"], "problem_rating": "2700", "solved_by": "x114"},
{"url": "https://codeforces.com//problemset/problem/1599/H", "name": "Hidden Fortress", "tags": ["interactive", "math"], "problem_rating": "2100", "solved_by": "x1033"},
{"url": "https://codeforces.com//problemset/problem/1599/G", "name": "Shortest path", "tags": ["brute force", "geometry", "math", "shortest paths"], "problem_rating": "2700", "solved_by": "x364"},
{"url": "https://codeforces.com//problemset/problem/1599/F", "name": "Mars", "tags": ["hashing"], "problem_rating": "2700", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/1599/E", "name": "Two Arrays", "tags": ["data structures", "matrices"], "problem_rating": "3200", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1599/D", "name": "Bubble Popping", "tags": [], "problem_rating": "3200", "solved_by": "x30"},
{"url": "https://codeforces.com//problemset/problem/1599/C", "name": "Bubble Strike", "tags": ["combinatorics", "math", "probabilities", "ternary search"], "problem_rating": "2000", "solved_by": "x1626"},
{"url": "https://codeforces.com//problemset/problem/1599/B", "name": "Restaurant Game", "tags": [], "problem_rating": "3100", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1599/A", "name": "Weights", "tags": ["constructive algorithms", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x639"},
{"url": "https://codeforces.com//problemset/problem/1598/G", "name": "The Sum of Good Numbers", "tags": ["hashing", "math", "string suffix structures", "strings"], "problem_rating": "3200", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1598/F", "name": "RBS", "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp"], "problem_rating": "2400", "solved_by": "x1398"},
{"url": "https://codeforces.com//problemset/problem/1598/E", "name": "Staircases", "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2270"},
{"url": "https://codeforces.com//problemset/problem/1598/D", "name": "Training Session", "tags": ["combinatorics", "data structures", "geometry", "implementation", "math"], "problem_rating": "1700", "solved_by": "x8510"},
{"url": "https://codeforces.com//problemset/problem/1598/C", "name": "Delete Two Elements", "tags": ["data structures", "dp", "implementation", "math", "two pointers"], "problem_rating": "1200", "solved_by": "x20428"},
{"url": "https://codeforces.com//problemset/problem/1598/B", "name": "Groups", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x15879"},
{"url": "https://codeforces.com//problemset/problem/1598/A", "name": "Computer Game", "tags": ["brute force", "dfs and similar", "dp", "implementation"], "problem_rating": "800", "solved_by": "x23044"},
{"url": "https://codeforces.com//problemset/problem/1594/F", "name": "Ideal Farm", "tags": ["constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1282"},
{"url": "https://codeforces.com//problemset/problem/1594/E2", "name": "Rubik's Cube Coloring (hard version)", "tags": ["brute force", "dp", "implementation", "math", "trees"], "problem_rating": "2300", "solved_by": "x1463"},
{"url": "https://codeforces.com//problemset/problem/1594/E1", "name": "Rubik's Cube Coloring (easy version)", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x10986"},
{"url": "https://codeforces.com//problemset/problem/1594/D", "name": "The Number of Imposters", "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x7295"},
{"url": "https://codeforces.com//problemset/problem/1594/C", "name": "Make Them Equal", "tags": ["brute force", "greedy", "math", "strings"], "problem_rating": "1200", "solved_by": "x18703"},
{"url": "https://codeforces.com//problemset/problem/1594/B", "name": "Special Numbers", "tags": ["bitmasks", "math"], "problem_rating": "1100", "solved_by": "x19578"},
{"url": "https://codeforces.com//problemset/problem/1594/A", "name": "Consecutive Sum Riddle", "tags": ["math"], "problem_rating": "800", "solved_by": "x24168"},
{"url": "https://codeforces.com//problemset/problem/1593/G", "name": "Changing Brackets", "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x1662"},
{"url": "https://codeforces.com//problemset/problem/1593/F", "name": "Red-Black Number", "tags": ["dfs and similar", "dp", "implementation", "math", "meet-in-the-middle"], "problem_rating": "2100", "solved_by": "x2398"},
{"url": "https://codeforces.com//problemset/problem/1593/E", "name": "Gardener and Tree", "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x12056"},
{"url": "https://codeforces.com//problemset/problem/1593/D2", "name": "Half of Same", "tags": ["brute force", "math", "number theory"], "problem_rating": "1900", "solved_by": "x4888"},
{"url": "https://codeforces.com//problemset/problem/1593/D1", "name": "All are Same", "tags": ["math", "number theory"], "problem_rating": "1100", "solved_by": "x19865"},
{"url": "https://codeforces.com//problemset/problem/1593/C", "name": "Save More Mice", "tags": ["binary search", "greedy", "greedy"], "problem_rating": "1000", "solved_by": "x24459"},
{"url": "https://codeforces.com//problemset/problem/1593/B", "name": "Make it Divisible by 25", "tags": ["dfs and similar", "dp", "greedy", "math", "math"], "problem_rating": "900", "solved_by": "x26146"},
{"url": "https://codeforces.com//problemset/problem/1593/A", "name": "Elections", "tags": ["math"], "problem_rating": "800", "solved_by": "x36185"},
{"url": "https://codeforces.com//problemset/problem/1592/F2", "name": "Alice and Recoloring 2", "tags": ["constructive algorithms", "flows", "graph matchings", "greedy"], "problem_rating": "2800", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1592/F1", "name": "Alice and Recoloring 1", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2600", "solved_by": "x804"},
{"url": "https://codeforces.com//problemset/problem/1592/E", "name": "Bored Bakry", "tags": ["bitmasks", "greedy", "math", "two pointers"], "problem_rating": "2400", "solved_by": "x1569"},
{"url": "https://codeforces.com//problemset/problem/1592/D", "name": "Hemose in ICPC ?", "tags": ["binary search", "dfs and similar", "implementation", "interactive", "math", "number theory", "trees"], "problem_rating": "2300", "solved_by": "x2196"},
{"url": "https://codeforces.com//problemset/problem/1592/C", "name": "Bakry and Partitioning", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x7793"},
{"url": "https://codeforces.com//problemset/problem/1592/B", "name": "Hemose Shopping", "tags": ["constructive algorithms", "dsu", "math", "sortings"], "problem_rating": "1200", "solved_by": "x15754"},
{"url": "https://codeforces.com//problemset/problem/1592/A", "name": "Gamer Hemose", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "800", "solved_by": "x21886"},
{"url": "https://codeforces.com//problemset/problem/1588/F", "name": "Jumping Through the Array", "tags": ["binary search", "data structures", "graphs", "two pointers"], "problem_rating": "3500", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1586/I", "name": "Omkar and Mosaic", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "3500", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1585/G", "name": "Poachers", "tags": ["dp", "games", "graphs", "trees"], "problem_rating": "2500", "solved_by": "x175"},
{"url": "https://codeforces.com//problemset/problem/1585/F", "name": "Non-equal Neighbours", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2400", "solved_by": "x1185"},
{"url": "https://codeforces.com//problemset/problem/1585/E", "name": "Frequency Queries", "tags": ["data structures", "dfs and similar", "trees"], "problem_rating": "2400", "solved_by": "x1036"},
{"url": "https://codeforces.com//problemset/problem/1585/D", "name": "Yet Another Sorting Problem", "tags": ["data structures", "math"], "problem_rating": "1900", "solved_by": "x3779"},
{"url": "https://codeforces.com//problemset/problem/1585/C", "name": "Minimize Distance", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x11855"},
{"url": "https://codeforces.com//problemset/problem/1585/B", "name": "Array Eversion", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x14940"},
{"url": "https://codeforces.com//problemset/problem/1585/A", "name": "Life of a Flower", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x17642"},
{"url": "https://codeforces.com//problemset/problem/1584/G", "name": "Eligible Segments", "tags": ["geometry"], "problem_rating": "3200", "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1584/F", "name": "Strange LCS", "tags": ["bitmasks", "dp", "graphs", "greedy", "strings"], "problem_rating": "2600", "solved_by": "x904"},
{"url": "https://codeforces.com//problemset/problem/1584/E", "name": "Game with Stones", "tags": ["binary search", "data structures", "games", "greedy"], "problem_rating": "2300", "solved_by": "x1246"},
{"url": "https://codeforces.com//problemset/problem/1584/D", "name": "Guess the Permutation", "tags": ["binary search", "combinatorics", "interactive", "math"], "problem_rating": "2000", "solved_by": "x3609"},
{"url": "https://codeforces.com//problemset/problem/1584/C", "name": "Two Arrays", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16176"},
{"url": "https://codeforces.com//problemset/problem/1584/B", "name": "Coloring Rectangles", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x13232"},
{"url": "https://codeforces.com//problemset/problem/1584/A", "name": "Mathematical Addition", "tags": ["math"], "problem_rating": "800", "solved_by": "x14795"},
{"url": "https://codeforces.com//problemset/problem/1583/H", "name": "Omkar and Tours", "tags": ["data structures", "divide and conquer", "sortings", "trees"], "problem_rating": "3300", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1583/G", "name": "Omkar and Time Travel", "tags": ["data structures", "math"], "problem_rating": "3000", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1583/F", "name": "Defender of Childhood Dreams", "tags": ["bitmasks", "constructive algorithms", "divide and conquer"], "problem_rating": "2500", "solved_by": "x1249"},
{"url": "https://codeforces.com//problemset/problem/1583/E", "name": "Moment of Bloom", "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2179"},
{"url": "https://codeforces.com//problemset/problem/1583/D", "name": "Omkar and the Meaning of Life", "tags": ["constructive algorithms", "greedy", "interactive"], "problem_rating": "1800", "solved_by": "x5317"},
{"url": "https://codeforces.com//problemset/problem/1583/C", "name": "Omkar and Determination", "tags": ["data structures", "dp"], "problem_rating": "1700", "solved_by": "x6864"},
{"url": "https://codeforces.com//problemset/problem/1583/B", "name": "Omkar and Heavenly Tree", "tags": ["constructive algorithms", "trees"], "problem_rating": "1200", "solved_by": "x12091"},
{"url": "https://codeforces.com//problemset/problem/1583/A", "name": "Windblume Ode", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x13664"},
{"url": "https://codeforces.com//problemset/problem/1582/G", "name": "Kuzya and Homework", "tags": ["data structures", "number theory"], "problem_rating": "2600", "solved_by": "x574"},
{"url": "https://codeforces.com//problemset/problem/1582/F2", "name": "Korney Korneevich and XOR (hard version)", "tags": ["binary search", "brute force", "dp", "greedy", "two pointers"], "problem_rating": "2400", "solved_by": "x1758"},
{"url": "https://codeforces.com//problemset/problem/1582/F1", "name": "Korney Korneevich and XOR (easy version)", "tags": ["bitmasks", "dp", "greedy"], "problem_rating": "1800", "solved_by": "x5431"},
{"url": "https://codeforces.com//problemset/problem/1582/E", "name": "Pchelyonok and Segments", "tags": ["binary search", "data structures", "dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x3664"},
{"url": "https://codeforces.com//problemset/problem/1582/D", "name": "Vupsen, Pupsen and 0", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x10331"},
{"url": "https://codeforces.com//problemset/problem/1582/C", "name": "Grandma Capa Knits a Scarf", "tags": ["brute force", "data structures", "greedy", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x15059"},
{"url": "https://codeforces.com//problemset/problem/1582/B", "name": "Luntik and Subsequences", "tags": ["combinatorics", "math"], "problem_rating": "900", "solved_by": "x19635"},
{"url": "https://codeforces.com//problemset/problem/1582/A", "name": "Luntik and Concerts", "tags": ["math"], "problem_rating": "800", "solved_by": "x18394"},
{"url": "https://codeforces.com//problemset/problem/1581/B", "name": "Diameter of Graph", "tags": ["constructive algorithms", "graphs", "greedy", "math"], "problem_rating": "1200", "solved_by": "x11181"},
{"url": "https://codeforces.com//problemset/problem/1581/A", "name": "CQXYM Count Permutations", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "800", "solved_by": "x13346"},
{"url": "https://codeforces.com//problemset/problem/1580/F", "name": "Problems for Codeforces", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3300", "solved_by": "x131"},
{"url": "https://codeforces.com//problemset/problem/1580/E", "name": "Railway Construction", "tags": ["brute force", "constructive algorithms", "data structures", "graphs", "shortest paths"], "problem_rating": "3400", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1580/D", "name": "Subsequence", "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "problem_rating": "2900", "solved_by": "x833"},
{"url": "https://codeforces.com//problemset/problem/1580/C", "name": "Train Maintenance", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2200", "solved_by": "x1721"},
{"url": "https://codeforces.com//problemset/problem/1580/B", "name": "Mathematics Curriculum", "tags": ["brute force", "combinatorics", "dp", "trees"], "problem_rating": "2600", "solved_by": "x1004"},
{"url": "https://codeforces.com//problemset/problem/1580/A", "name": "Portal", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x3607"},
{"url": "https://codeforces.com//problemset/problem/1579/G", "name": "Minimal Coverage", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x2313"},
{"url": "https://codeforces.com//problemset/problem/1579/F", "name": "Array Stabilization (AND version)", "tags": ["brute force", "graphs", "math", "number theory", "shortest paths"], "problem_rating": "1700", "solved_by": "x4682"},
{"url": "https://codeforces.com//problemset/problem/1579/E2", "name": "Array Optimization by Deque", "tags": ["data structures", "greedy"], "problem_rating": "1700", "solved_by": "x6538"},
{"url": "https://codeforces.com//problemset/problem/1579/E1", "name": "Permutation Minimization by Deque", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x21292"},
{"url": "https://codeforces.com//problemset/problem/1579/D", "name": "Productive Meeting", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x15711"},
{"url": "https://codeforces.com//problemset/problem/1579/C", "name": "Ticks", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x10441"},
{"url": "https://codeforces.com//problemset/problem/1579/B", "name": "Shifting Sort", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x17978"},
{"url": "https://codeforces.com//problemset/problem/1579/A", "name": "Casimir's String Solitaire", "tags": ["math", "strings"], "problem_rating": "800", "solved_by": "x38364"},
{"url": "https://codeforces.com//problemset/problem/1578/M", "name": "The Mind", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "2700", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1578/L", "name": "Labyrinth", "tags": ["binary search", "dsu", "greedy"], "problem_rating": "2400", "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/1578/K", "name": "Kingdom of Islands", "tags": ["brute force", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x348"},
{"url": "https://codeforces.com//problemset/problem/1578/J", "name": "Just Kingdom", "tags": ["brute force", "data structures", "dfs and similar"], "problem_rating": "3100", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1578/I", "name": "Interactive Rays", "tags": ["geometry", "interactive"], "problem_rating": "3300", "solved_by": "x59"},
{"url": "https://codeforces.com//problemset/problem/1578/H", "name": "Higher Order Functions", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x2003"},
{"url": "https://codeforces.com//problemset/problem/1578/G", "name": "Game of Chance", "tags": ["math", "probabilities"], "problem_rating": "3500", "solved_by": "x36"},
{"url": "https://codeforces.com//problemset/problem/1578/F", "name": "Framing Pictures", "tags": ["geometry"], "problem_rating": "2900", "solved_by": "x148"},
{"url": "https://codeforces.com//problemset/problem/1578/E", "name": "Easy Scheduling", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x3769"},
{"url": "https://codeforces.com//problemset/problem/1578/D", "name": "Dragon Curve", "tags": [], "problem_rating": "3200", "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1578/C", "name": "Cactus Lady and her Cing", "tags": [], "problem_rating": "3500", "solved_by": "x9"},
{"url": "https://codeforces.com//problemset/problem/1578/B", "name": "Building Forest Trails", "tags": ["data structures", "dsu"], "problem_rating": "2800", "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/1578/A", "name": "Anti-Tetris", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2800", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1576/A", "name": "Communication Routing Challenge", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1575/M", "name": "Managing Telephone Poles", "tags": ["data structures", "geometry"], "problem_rating": "2400", "solved_by": "x244"},
{"url": "https://codeforces.com//problemset/problem/1575/L", "name": "Longest Array Deconstruction", "tags": ["data structures", "divide and conquer", "dp", "sortings"], "problem_rating": "2100", "solved_by": "x1319"},
{"url": "https://codeforces.com//problemset/problem/1575/K", "name": "Knitting Batik", "tags": ["implementation", "math"], "problem_rating": "2200", "solved_by": "x672"},
{"url": "https://codeforces.com//problemset/problem/1575/J", "name": "Jeopardy of Dropped Balls", "tags": ["binary search", "brute force", "dsu", "implementation"], "problem_rating": "1500", "solved_by": "x3705"},
{"url": "https://codeforces.com//problemset/problem/1575/I", "name": "Illusions of the Desert", "tags": ["data structures", "trees"], "problem_rating": "2300", "solved_by": "x855"},
{"url": "https://codeforces.com//problemset/problem/1575/H", "name": "Holiday Wall Ornaments", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x598"},
{"url": "https://codeforces.com//problemset/problem/1575/G", "name": "GCD Festival", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1575/F", "name": "Finding Expected Value", "tags": ["math"], "problem_rating": "2900", "solved_by": "x111"},
{"url": "https://codeforces.com//problemset/problem/1575/E", "name": "Eye-Pleasing City Park Tour", "tags": ["data structures", "trees"], "problem_rating": "2600", "solved_by": "x323"},
{"url": "https://codeforces.com//problemset/problem/1575/D", "name": "Divisible by Twenty-Five", "tags": ["brute force", "dfs and similar", "dp"], "problem_rating": "1800", "solved_by": "x2453"},
{"url": "https://codeforces.com//problemset/problem/1575/C", "name": "Cyclic Sum", "tags": ["data structures", "fft", "number theory"], "problem_rating": "3000", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1575/B", "name": "Building an Amusement Park", "tags": ["binary search", "geometry"], "problem_rating": "2300", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1575/A", "name": "Another Sorting Problem", "tags": ["data structures", "sortings", "strings"], "problem_rating": "1100", "solved_by": "x4358"},
{"url": "https://codeforces.com//problemset/problem/1574/F", "name": "Occurrences", "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "fft", "graphs"], "problem_rating": "2700", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1574/E", "name": "Coloring", "tags": ["combinatorics", "constructive algorithms", "implementation", "math"], "problem_rating": "2500", "solved_by": "x888"},
{"url": "https://codeforces.com//problemset/problem/1574/D", "name": "The Strongest Build", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "hashing", "implementation"], "problem_rating": "2000", "solved_by": "x4421"},
{"url": "https://codeforces.com//problemset/problem/1574/C", "name": "Slay the Dragon", "tags": ["binary search", "greedy", "sortings", "ternary search"], "problem_rating": "1300", "solved_by": "x16806"},
{"url": "https://codeforces.com//problemset/problem/1574/B", "name": "Combinatorics Homework", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1100", "solved_by": "x17182"},
{"url": "https://codeforces.com//problemset/problem/1574/A", "name": "Regular Bracket Sequences", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x21618"},
{"url": "https://codeforces.com//problemset/problem/1573/B", "name": "Swaps", "tags": ["greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14345"},
{"url": "https://codeforces.com//problemset/problem/1573/A", "name": "Countdown", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x21045"},
{"url": "https://codeforces.com//problemset/problem/1572/F", "name": "Stations", "tags": ["data structures"], "problem_rating": "3400", "solved_by": "x252"},
{"url": "https://codeforces.com//problemset/problem/1572/E", "name": "Polygon", "tags": ["binary search", "dp", "geometry"], "problem_rating": "3000", "solved_by": "x283"},
{"url": "https://codeforces.com//problemset/problem/1572/D", "name": "Bridge Club", "tags": ["flows", "graph matchings", "graphs", "greedy"], "problem_rating": "2800", "solved_by": "x487"},
{"url": "https://codeforces.com//problemset/problem/1572/C", "name": "Paint", "tags": ["dp", "greedy"], "problem_rating": "2700", "solved_by": "x1418"},
{"url": "https://codeforces.com//problemset/problem/1572/B", "name": "Xor of 3", "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x1777"},
{"url": "https://codeforces.com//problemset/problem/1572/A", "name": "Book", "tags": ["binary search", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x8764"},
{"url": "https://codeforces.com//problemset/problem/1571/J", "name": "Two Railroads", "tags": ["*special problem"], "problem_rating": "3000", "solved_by": "x40"},
{"url": "https://codeforces.com//problemset/problem/1571/I", "name": "Physical Examination", "tags": ["*special problem", "binary search", "data structures"], "problem_rating": "3200", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1571/H", "name": "Laser Beams", "tags": ["*special problem", "geometry", "probabilities"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1571/G", "name": "A Battle Against a Dragon", "tags": ["*special problem", "data structures", "dp"], "problem_rating": "2500", "solved_by": "x75"},
{"url": "https://codeforces.com//problemset/problem/1571/F", "name": "Kotlinforces", "tags": ["*special problem", "constructive algorithms", "dp"], "problem_rating": "2000", "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1571/E", "name": "Fix the String", "tags": ["*special problem", "bitmasks", "dp", "greedy"], "problem_rating": "1700", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1571/D", "name": "Sweepstake", "tags": ["*special problem", "brute force", "constructive algorithms", "implementation", "math"], "problem_rating": "1800", "solved_by": "x328"},
{"url": "https://codeforces.com//problemset/problem/1571/C", "name": "Rhyme", "tags": ["*special problem", "implementation"], "problem_rating": "1800", "solved_by": "x373"},
{"url": "https://codeforces.com//problemset/problem/1571/B", "name": "Epic Novel", "tags": ["*special problem", "math"], "problem_rating": "1300", "solved_by": "x698"},
{"url": "https://codeforces.com//problemset/problem/1571/A", "name": "Sequence of Comparisons", "tags": ["*special problem"], "problem_rating": "800", "solved_by": "x1272"},
{"url": "https://codeforces.com//problemset/problem/1569/F", "name": "Palindromic Hamiltonian Path", "tags": ["brute force", "dfs and similar", "dp", "graphs", "hashing"], "problem_rating": "3000", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/1569/E", "name": "Playoff Restoration", "tags": ["bitmasks", "brute force", "hashing", "implementation", "meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x791"},
{"url": "https://codeforces.com//problemset/problem/1569/D", "name": "Inconvenient Pairs", "tags": ["binary search", "data structures", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x4339"},
{"url": "https://codeforces.com//problemset/problem/1569/C", "name": "Jury Meeting", "tags": ["combinatorics", "math"], "problem_rating": "1500", "solved_by": "x11846"},
{"url": "https://codeforces.com//problemset/problem/1569/B", "name": "Chess Tournament", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x18718"},
{"url": "https://codeforces.com//problemset/problem/1569/A", "name": "Balanced Substring", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25386"},
{"url": "https://codeforces.com//problemset/problem/1567/F", "name": "One-Four Overload", "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2700", "solved_by": "x736"},
{"url": "https://codeforces.com//problemset/problem/1567/E", "name": "Non-Decreasing Dilemma", "tags": ["data structures", "divide and conquer", "math"], "problem_rating": "2200", "solved_by": "x3574"},
{"url": "https://codeforces.com//problemset/problem/1567/D", "name": "Expression Evaluation Error", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2000", "solved_by": "x4455"},
{"url": "https://codeforces.com//problemset/problem/1567/C", "name": "Carrying Conundrum", "tags": ["bitmasks", "combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x12007"},
{"url": "https://codeforces.com//problemset/problem/1567/B", "name": "MEXor Mixup", "tags": ["bitmasks", "greedy"], "problem_rating": "1000", "solved_by": "x22297"},
{"url": "https://codeforces.com//problemset/problem/1567/A", "name": "Domino Disaster", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x29883"},
{"url": "https://codeforces.com//problemset/problem/1566/H", "name": "Xor-quiz", "tags": ["constructive algorithms", "dp", "interactive", "math", "number theory"], "problem_rating": "3200", "solved_by": "x129"},
{"url": "https://codeforces.com//problemset/problem/1566/G", "name": "Four Vertices", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "3100", "solved_by": "x339"},
{"url": "https://codeforces.com//problemset/problem/1566/F", "name": "Points Movement", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2600", "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1566/E", "name": "Buds Re-hanging", "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x4070"},
{"url": "https://codeforces.com//problemset/problem/1566/D2", "name": "Seating Arrangements (hard version)", "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x7779"},
{"url": "https://codeforces.com//problemset/problem/1566/D1", "name": "Seating Arrangements (easy version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x13895"},
{"url": "https://codeforces.com//problemset/problem/1566/C", "name": "MAX-MEX Cut", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "problem_rating": "1000", "solved_by": "x17305"},
{"url": "https://codeforces.com//problemset/problem/1566/B", "name": "MIN-MEX Cut", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "problem_rating": "800", "solved_by": "x19374"},
{"url": "https://codeforces.com//problemset/problem/1566/A", "name": "Median Maximization", "tags": ["binary search", "greedy", "math"], "problem_rating": "800", "solved_by": "x23001"},
{"url": "https://codeforces.com//problemset/problem/1562/F", "name": "Tubular Bells", "tags": ["interactive", "math", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/1562/E", "name": "Rescue Niwen!", "tags": ["dp", "greedy", "string suffix structures", "strings"], "problem_rating": "2500", "solved_by": "x1378"},
{"url": "https://codeforces.com//problemset/problem/1562/D2", "name": "Two Hundred Twenty One (hard version)", "tags": ["data structures", "math"], "problem_rating": "2200", "solved_by": "x2095"},
{"url": "https://codeforces.com//problemset/problem/1562/D1", "name": "Two Hundred Twenty One (easy version)", "tags": ["data structures", "dp", "math"], "problem_rating": "1700", "solved_by": "x6248"},
{"url": "https://codeforces.com//problemset/problem/1562/C", "name": "Rings", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x13087"},
{"url": "https://codeforces.com//problemset/problem/1562/B", "name": "Scenes From a Memory", "tags": ["brute force", "constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "1000", "solved_by": "x19379"},
{"url": "https://codeforces.com//problemset/problem/1562/A", "name": "The Miracle and the Sleeper", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25370"},
{"url": "https://codeforces.com//problemset/problem/1561/D1", "name": "Up the Strip (simplified version)", "tags": ["brute force", "data structures", "dp", "math", "number theory"], "problem_rating": "1700", "solved_by": "x5528"},
{"url": "https://codeforces.com//problemset/problem/1561/C", "name": "Deep Down Below", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x14072"},
{"url": "https://codeforces.com//problemset/problem/1561/A", "name": "Simply Strange Sort", "tags": ["brute force", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x16508"},
{"url": "https://codeforces.com//problemset/problem/1560/F2", "name": "Nearest Beautiful Number (hard version)", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"], "problem_rating": "2100", "solved_by": "x4275"},
{"url": "https://codeforces.com//problemset/problem/1560/F1", "name": "Nearest Beautiful Number (easy version)", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "dfs and similar", "greedy"], "problem_rating": "1900", "solved_by": "x6027"},
{"url": "https://codeforces.com//problemset/problem/1560/E", "name": "Polycarp and String Transformation", "tags": ["binary search", "implementation", "sortings", "strings"], "problem_rating": "1800", "solved_by": "x7848"},
{"url": "https://codeforces.com//problemset/problem/1560/D", "name": "Make a Power of Two", "tags": ["greedy", "math", "strings"], "problem_rating": "1300", "solved_by": "x17934"},
{"url": "https://codeforces.com//problemset/problem/1560/C", "name": "Infinity Table", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x26348"},
{"url": "https://codeforces.com//problemset/problem/1560/B", "name": "Who's Opposite?", "tags": ["math"], "problem_rating": "800", "solved_by": "x35196"},
{"url": "https://codeforces.com//problemset/problem/1560/A", "name": "Dislike of Threes", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x57861"},
{"url": "https://codeforces.com//problemset/problem/1559/E", "name": "Mocha and Stars", "tags": ["combinatorics", "dp", "fft", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2260"},
{"url": "https://codeforces.com//problemset/problem/1559/D2", "name": "Mocha and Diana (Hard Version)", "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "problem_rating": "2500", "solved_by": "x2583"},
{"url": "https://codeforces.com//problemset/problem/1559/D1", "name": "Mocha and Diana (Easy Version)", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "trees"], "problem_rating": "1400", "solved_by": "x13526"},
{"url": "https://codeforces.com//problemset/problem/1559/C", "name": "Mocha and Hiking", "tags": ["constructive algorithms", "graphs"], "problem_rating": "1200", "solved_by": "x20077"},
{"url": "https://codeforces.com//problemset/problem/1559/B", "name": "Mocha and Red and Blue", "tags": ["dp", "greedy"], "problem_rating": "900", "solved_by": "x22226"},
{"url": "https://codeforces.com//problemset/problem/1559/A", "name": "Mocha and Math", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x30070"},
{"url": "https://codeforces.com//problemset/problem/1558/F", "name": "Strange Sort", "tags": ["data structures", "sortings"], "problem_rating": "3300", "solved_by": "x372"},
{"url": "https://codeforces.com//problemset/problem/1558/E", "name": "Down Below", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "meet-in-the-middle", "shortest paths"], "problem_rating": "3000", "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1558/D", "name": "Top-Notch Insertions", "tags": ["combinatorics", "data structures"], "problem_rating": "2600", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/1558/C", "name": "Bottom-Tier Reversals", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2000", "solved_by": "x3207"},
{"url": "https://codeforces.com//problemset/problem/1558/B", "name": "Up the Strip", "tags": ["brute force", "dp", "math", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x4714"},
{"url": "https://codeforces.com//problemset/problem/1558/A", "name": "Charmed by the Game", "tags": ["brute force", "math"], "problem_rating": "1300", "solved_by": "x10992"},
{"url": "https://codeforces.com//problemset/problem/1557/E", "name": "Assiut Chess", "tags": ["brute force", "constructive algorithms", "interactive"], "problem_rating": "2800", "solved_by": "x705"},
{"url": "https://codeforces.com//problemset/problem/1557/D", "name": "Ezzat and Grid", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2507"},
{"url": "https://codeforces.com//problemset/problem/1557/C", "name": "Moamen and XOR", "tags": ["bitmasks", "combinatorics", "dp", "math", "matrices"], "problem_rating": "1700", "solved_by": "x8475"},
{"url": "https://codeforces.com//problemset/problem/1557/B", "name": "Moamen and k-subarrays", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x23112"},
{"url": "https://codeforces.com//problemset/problem/1557/A", "name": "Ezzat and Two Subsequences", "tags": ["brute force", "math", "sortings"], "problem_rating": "800", "solved_by": "x27717"},
{"url": "https://codeforces.com//problemset/problem/1556/H", "name": "DIY Tree", "tags": ["graphs", "greedy", "math", "probabilities"], "problem_rating": "3300", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1556/G", "name": "Gates to Another World", "tags": ["bitmasks", "data structures", "dsu", "two pointers"], "problem_rating": "3300", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1556/F", "name": "Sports Betting", "tags": ["bitmasks", "combinatorics", "dp", "graphs", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x1197"},
{"url": "https://codeforces.com//problemset/problem/1556/E", "name": "Equilibrium", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2542"},
{"url": "https://codeforces.com//problemset/problem/1556/D", "name": "Take a Guess", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "1800", "solved_by": "x6740"},
{"url": "https://codeforces.com//problemset/problem/1556/C", "name": "Compressed Bracket Sequence", "tags": ["brute force", "implementation"], "problem_rating": "1800", "solved_by": "x5722"},
{"url": "https://codeforces.com//problemset/problem/1556/B", "name": "Take Your Places!", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x12564"},
{"url": "https://codeforces.com//problemset/problem/1556/A", "name": "A Variety of Operations", "tags": ["math"], "problem_rating": "800", "solved_by": "x18004"},
{"url": "https://codeforces.com//problemset/problem/1555/F", "name": "Good Graph", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x836"},
{"url": "https://codeforces.com//problemset/problem/1555/E", "name": "Boring Segments", "tags": ["data structures", "sortings", "trees", "two pointers"], "problem_rating": "2100", "solved_by": "x3950"},
{"url": "https://codeforces.com//problemset/problem/1555/D", "name": "Say No to Palindromes", "tags": ["brute force", "constructive algorithms", "dp", "strings"], "problem_rating": "1600", "solved_by": "x12085"},
{"url": "https://codeforces.com//problemset/problem/1555/C", "name": "Coin Rows", "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "problem_rating": "1300", "solved_by": "x21294"},
{"url": "https://codeforces.com//problemset/problem/1555/B", "name": "Two Tables", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x15873"},
{"url": "https://codeforces.com//problemset/problem/1555/A", "name": "PizzaForces", "tags": ["brute force", "math"], "problem_rating": "900", "solved_by": "x27710"},
{"url": "https://codeforces.com//problemset/problem/1554/E", "name": "You", "tags": ["dfs and similar", "dp", "math", "number theory"], "problem_rating": "2600", "solved_by": "x1196"},
{"url": "https://codeforces.com//problemset/problem/1554/D", "name": "Diane", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1800", "solved_by": "x9253"},
{"url": "https://codeforces.com//problemset/problem/1554/C", "name": "Mikasa", "tags": ["binary search", "bitmasks", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x8712"},
{"url": "https://codeforces.com//problemset/problem/1554/B", "name": "Cobb", "tags": ["bitmasks", "brute force", "greedy", "math"], "problem_rating": "1700", "solved_by": "x12605"},
{"url": "https://codeforces.com//problemset/problem/1554/A", "name": "Cherry", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x28972"},
{"url": "https://codeforces.com//problemset/problem/1553/I", "name": "Stairs", "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "problem_rating": "3400", "solved_by": "x198"},
{"url": "https://codeforces.com//problemset/problem/1553/H", "name": "XOR and Distance", "tags": ["bitmasks", "divide and conquer", "trees"], "problem_rating": "2900", "solved_by": "x680"},
{"url": "https://codeforces.com//problemset/problem/1553/G", "name": "Common Divisor Graph", "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "hashing", "math", "number theory"], "problem_rating": "2700", "solved_by": "x991"},
{"url": "https://codeforces.com//problemset/problem/1553/F", "name": "Pairwise Modulo", "tags": ["data structures", "math"], "problem_rating": "2300", "solved_by": "x2184"},
{"url": "https://codeforces.com//problemset/problem/1553/E", "name": "Permutation Shift", "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs", "math"], "problem_rating": "2100", "solved_by": "x3278"},
{"url": "https://codeforces.com//problemset/problem/1553/D", "name": "Backspace", "tags": ["dp", "greedy", "strings", "two pointers"], "problem_rating": "1500", "solved_by": "x13526"},
{"url": "https://codeforces.com//problemset/problem/1553/C", "name": "Penalty", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x17605"},
{"url": "https://codeforces.com//problemset/problem/1553/B", "name": "Reverse String", "tags": ["brute force", "dp", "hashing", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x13995"},
{"url": "https://codeforces.com//problemset/problem/1553/A", "name": "Digits Sum", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x30628"},
{"url": "https://codeforces.com//problemset/problem/1552/I", "name": "Organizing a Music Festival", "tags": ["dfs and similar", "math"], "problem_rating": "3400", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1552/H", "name": "Guess the Perimeter", "tags": ["binary search", "interactive", "number theory"], "problem_rating": "3300", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1552/G", "name": "A Serious Referee", "tags": ["bitmasks", "brute force", "dfs and similar", "sortings"], "problem_rating": "3000", "solved_by": "x518"},
{"url": "https://codeforces.com//problemset/problem/1552/F", "name": "Telepanting", "tags": ["binary search", "data structures", "dp", "sortings"], "problem_rating": "2200", "solved_by": "x2848"},
{"url": "https://codeforces.com//problemset/problem/1552/E", "name": "Colors and Intervals", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x1808"},
{"url": "https://codeforces.com//problemset/problem/1552/D", "name": "Array Differentiation", "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"], "problem_rating": "1800", "solved_by": "x6872"},
{"url": "https://codeforces.com//problemset/problem/1552/C", "name": "Maximize the Intersections", "tags": ["combinatorics", "constructive algorithms", "geometry", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x5844"},
{"url": "https://codeforces.com//problemset/problem/1552/B", "name": "Running for Gold", "tags": ["combinatorics", "graphs", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x15224"},
{"url": "https://codeforces.com//problemset/problem/1552/A", "name": "Subsequence Permutation", "tags": ["sortings", "strings"], "problem_rating": "800", "solved_by": "x23682"},
{"url": "https://codeforces.com//problemset/problem/1551/F", "name": "Equidistant Vertices", "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2200", "solved_by": "x1797"},
{"url": "https://codeforces.com//problemset/problem/1551/E", "name": "Fixed Points", "tags": ["binary search", "brute force", "dp"], "problem_rating": "2000", "solved_by": "x3797"},
{"url": "https://codeforces.com//problemset/problem/1551/D2", "name": "Domino (hard version)", "tags": ["constructive algorithms", "implementation", "math"], "problem_rating": "2100", "solved_by": "x2705"},
{"url": "https://codeforces.com//problemset/problem/1551/D1", "name": "Domino (easy version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x6977"},
{"url": "https://codeforces.com//problemset/problem/1551/C", "name": "Interesting Story", "tags": ["greedy", "sortings", "strings"], "problem_rating": "1500", "solved_by": "x13089"},
{"url": "https://codeforces.com//problemset/problem/1551/B2", "name": "Wonderful Coloring - 2", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x15287"},
{"url": "https://codeforces.com//problemset/problem/1551/B1", "name": "Wonderful Coloring - 1", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x28963"},
{"url": "https://codeforces.com//problemset/problem/1551/A", "name": "Polycarp and Coins", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x49687"},
{"url": "https://codeforces.com//problemset/problem/1550/F", "name": "Jumping Around", "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1550/E", "name": "Stringforces", "tags": ["binary search", "bitmasks", "brute force", "dp", "strings", "two pointers"], "problem_rating": "2500", "solved_by": "x1484"},
{"url": "https://codeforces.com//problemset/problem/1550/D", "name": "Excellent Arrays", "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation", "math", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1806"},
{"url": "https://codeforces.com//problemset/problem/1550/C", "name": "Manhattan Subarrays", "tags": ["brute force", "geometry", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x10059"},
{"url": "https://codeforces.com//problemset/problem/1550/B", "name": "Maximum Cost Deletion", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x26073"},
{"url": "https://codeforces.com//problemset/problem/1550/A", "name": "Find The Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x27869"},
{"url": "https://codeforces.com//problemset/problem/1549/B", "name": "Gregor and the Pawn Game", "tags": ["dfs and similar", "dp", "flows", "graph matchings", "graphs", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x24081"},
{"url": "https://codeforces.com//problemset/problem/1549/A", "name": "Gregor and Cryptography", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x31975"},
{"url": "https://codeforces.com//problemset/problem/1548/E", "name": "Gregor and the Two Painters", "tags": ["data structures", "divide and conquer", "graphs", "greedy", "math"], "problem_rating": "3400", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1548/D2", "name": "Gregor and the Odd Cows (Hard)", "tags": ["brute force", "geometry", "math", "number theory"], "problem_rating": "3300", "solved_by": "x240"},
{"url": "https://codeforces.com//problemset/problem/1548/D1", "name": "Gregor and the Odd Cows (Easy)", "tags": ["bitmasks", "geometry", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1440"},
{"url": "https://codeforces.com//problemset/problem/1548/C", "name": "The Three Little Pigs", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2500", "solved_by": "x1776"},
{"url": "https://codeforces.com//problemset/problem/1548/B", "name": "Integers Have Friends", "tags": ["binary search", "data structures", "divide and conquer", "math", "number theory", "two pointers"], "problem_rating": "1800", "solved_by": "x9566"},
{"url": "https://codeforces.com//problemset/problem/1548/A", "name": "Web of Lies", "tags": ["brute force", "graphs", "greedy"], "problem_rating": "1400", "solved_by": "x16238"},
{"url": "https://codeforces.com//problemset/problem/1547/G", "name": "How Many Paths?", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x2940"},
{"url": "https://codeforces.com//problemset/problem/1547/F", "name": "Array Stabilization (GCD version)", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "problem_rating": "1900", "solved_by": "x5691"},
{"url": "https://codeforces.com//problemset/problem/1547/E", "name": "Air Conditioners", "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x14183"},
{"url": "https://codeforces.com//problemset/problem/1547/D", "name": "Co-growing Sequence", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1300", "solved_by": "x16359"},
{"url": "https://codeforces.com//problemset/problem/1547/C", "name": "Pair Programming", "tags": ["greedy", "two pointers"], "problem_rating": "1100", "solved_by": "x22390"},
{"url": "https://codeforces.com//problemset/problem/1547/B", "name": "Alphabetical Strings", "tags": ["greedy", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26177"},
{"url": "https://codeforces.com//problemset/problem/1547/A", "name": "Shortest Path with Obstacle", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x30195"},
{"url": "https://codeforces.com//problemset/problem/1546/B", "name": "AquaMoon and Stolen String", "tags": ["interactive", "math"], "problem_rating": "1200", "solved_by": "x12959"},
{"url": "https://codeforces.com//problemset/problem/1546/A", "name": "AquaMoon and Two Arrays", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x18157"},
{"url": "https://codeforces.com//problemset/problem/1545/F", "name": "AquaMoon and Potatoes", "tags": ["brute force", "data structures", "dp"], "problem_rating": "3500", "solved_by": "x106"},
{"url": "https://codeforces.com//problemset/problem/1545/E2", "name": "AquaMoon and Time Stop (hard version)", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1545/E1", "name": "AquaMoon and Time Stop (easy version)", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x77"},
{"url": "https://codeforces.com//problemset/problem/1545/D", "name": "AquaMoon and Wrong Coordinate", "tags": ["constructive algorithms", "interactive", "math"], "problem_rating": "3000", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/1545/C", "name": "AquaMoon and Permutations", "tags": ["2-sat", "brute force", "combinatorics", "constructive algorithms", "graph matchings", "graphs"], "problem_rating": "2800", "solved_by": "x597"},
{"url": "https://codeforces.com//problemset/problem/1545/B", "name": "AquaMoon and Chess", "tags": ["combinatorics", "math"], "problem_rating": "1900", "solved_by": "x5816"},
{"url": "https://codeforces.com//problemset/problem/1545/A", "name": "AquaMoon and Strange Sort", "tags": ["sortings"], "problem_rating": "1500", "solved_by": "x13758"},
{"url": "https://codeforces.com//problemset/problem/1543/E", "name": "The Final Pursuit", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "problem_rating": "2700", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/1543/D2", "name": "RPD and Rap Sheet (Hard Version)", "tags": ["brute force", "constructive algorithms", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1965"},
{"url": "https://codeforces.com//problemset/problem/1543/D1", "name": "RPD and Rap Sheet (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "1700", "solved_by": "x7513"},
{"url": "https://codeforces.com//problemset/problem/1543/C", "name": "Need for Pink Slips", "tags": ["bitmasks", "brute force", "dfs and similar", "implementation", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x5236"},
{"url": "https://codeforces.com//problemset/problem/1543/B", "name": "Customising the Track", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "900", "solved_by": "x22884"},
{"url": "https://codeforces.com//problemset/problem/1543/A", "name": "Exciting Bets", "tags": ["greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x27292"},
{"url": "https://codeforces.com//problemset/problem/1542/E2", "name": "Abnormal Permutation Pairs (hard version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x828"},
{"url": "https://codeforces.com//problemset/problem/1542/E1", "name": "Abnormal Permutation Pairs (easy version)", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2400", "solved_by": "x1211"},
{"url": "https://codeforces.com//problemset/problem/1542/D", "name": "Priority Queue", "tags": ["combinatorics", "dp", "implementation", "math", "ternary search"], "problem_rating": "2200", "solved_by": "x2579"},
{"url": "https://codeforces.com//problemset/problem/1542/C", "name": "Strange Function", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x13902"},
{"url": "https://codeforces.com//problemset/problem/1542/B", "name": "Plus and Multiply", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x22623"},
{"url": "https://codeforces.com//problemset/problem/1542/A", "name": "Odd Set", "tags": ["math"], "problem_rating": "800", "solved_by": "x43548"},
{"url": "https://codeforces.com//problemset/problem/1541/B", "name": "Pleasant Pairs", "tags": ["brute force", "implementation", "math", "number theory"], "problem_rating": "1200", "solved_by": "x27456"},
{"url": "https://codeforces.com//problemset/problem/1541/A", "name": "Pretty Permutations", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x29210"},
{"url": "https://codeforces.com//problemset/problem/1540/E", "name": "Tasty Dishes", "tags": ["math", "matrices"], "problem_rating": "3500", "solved_by": "x102"},
{"url": "https://codeforces.com//problemset/problem/1540/D", "name": "Inverse Inversions", "tags": ["binary search", "brute force", "data structures"], "problem_rating": "3200", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1540/C2", "name": "Converging Array (Hard Version)", "tags": ["dp", "math"], "problem_rating": "2900", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/1540/C1", "name": "Converging Array (Easy Version)", "tags": ["dp", "math"], "problem_rating": "2700", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/1540/B", "name": "Tree Array", "tags": ["brute force", "combinatorics", "dp", "graphs", "math", "probabilities", "trees"], "problem_rating": "2300", "solved_by": "x2526"},
{"url": "https://codeforces.com//problemset/problem/1540/A", "name": "Great Graphs", "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "1400", "solved_by": "x13810"},
{"url": "https://codeforces.com//problemset/problem/1539/F", "name": "Strange Array", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2600", "solved_by": "x849"},
{"url": "https://codeforces.com//problemset/problem/1539/E", "name": "Game with Cards", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x935"},
{"url": "https://codeforces.com//problemset/problem/1539/D", "name": "PriceFixed", "tags": ["binary search", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x11473"},
{"url": "https://codeforces.com//problemset/problem/1539/C", "name": "Stable Groups", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x22030"},
{"url": "https://codeforces.com//problemset/problem/1539/B", "name": "Love Song", "tags": ["dp", "implementation", "strings"], "problem_rating": "800", "solved_by": "x24160"},
{"url": "https://codeforces.com//problemset/problem/1539/A", "name": "Contest Start", "tags": ["combinatorics", "geometry", "greedy", "math"], "problem_rating": "1000", "solved_by": "x19880"},
{"url": "https://codeforces.com//problemset/problem/1538/G", "name": "Gift Set", "tags": ["binary search", "greedy", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x4452"},
{"url": "https://codeforces.com//problemset/problem/1538/F", "name": "Interesting Function", "tags": ["binary search", "dp", "math", "number theory"], "problem_rating": "1500", "solved_by": "x18864"},
{"url": "https://codeforces.com//problemset/problem/1538/E", "name": "Funny Substrings", "tags": ["data structures", "hashing", "implementation", "matrices", "strings"], "problem_rating": "2100", "solved_by": "x2850"},
{"url": "https://codeforces.com//problemset/problem/1538/D", "name": "Another Problem About Dividing Numbers", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1700", "solved_by": "x13352"},
{"url": "https://codeforces.com//problemset/problem/1538/C", "name": "Number of Pairs", "tags": ["binary search", "data structures", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x27779"},
{"url": "https://codeforces.com//problemset/problem/1538/B", "name": "Friends and Candies", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x31436"},
{"url": "https://codeforces.com//problemset/problem/1538/A", "name": "Stone Game", "tags": ["brute force", "dp", "greedy"], "problem_rating": "800", "solved_by": "x36320"},
{"url": "https://codeforces.com//problemset/problem/1537/F", "name": "Figure Fixing", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2407"},
{"url": "https://codeforces.com//problemset/problem/1537/E2", "name": "Erase and Extend (Hard Version)", "tags": ["binary search", "data structures", "greedy", "hashing", "string suffix structures", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x5100"},
{"url": "https://codeforces.com//problemset/problem/1537/E1", "name": "Erase and Extend (Easy Version)", "tags": ["binary search", "brute force", "dp", "greedy", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "problem_rating": "1600", "solved_by": "x12636"},
{"url": "https://codeforces.com//problemset/problem/1537/D", "name": "Deleting Divisors", "tags": ["games", "math", "number theory"], "problem_rating": "1700", "solved_by": "x12139"},
{"url": "https://codeforces.com//problemset/problem/1537/C", "name": "Challenging Cliffs", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x26989"},
{"url": "https://codeforces.com//problemset/problem/1537/B", "name": "Bad Boy", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x28940"},
{"url": "https://codeforces.com//problemset/problem/1537/A", "name": "Arithmetic Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x36685"},
{"url": "https://codeforces.com//problemset/problem/1536/F", "name": "Omkar and Akmar", "tags": ["chinese remainder theorem", "combinatorics", "constructive algorithms", "fft", "games", "geometry", "math", "meet-in-the-middle", "string suffix structures"], "problem_rating": "2600", "solved_by": "x926"},
{"url": "https://codeforces.com//problemset/problem/1536/E", "name": "Omkar and Forest", "tags": ["combinatorics", "graphs", "math", "shortest paths"], "problem_rating": "2300", "solved_by": "x2370"},
{"url": "https://codeforces.com//problemset/problem/1536/D", "name": "Omkar and Medians", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4617"},
{"url": "https://codeforces.com//problemset/problem/1536/C", "name": "Diluc and Kaeya", "tags": ["data structures", "dp", "hashing", "number theory"], "problem_rating": "1500", "solved_by": "x13859"},
{"url": "https://codeforces.com//problemset/problem/1536/B", "name": "Prinzessin der Verurteilung", "tags": ["brute force", "constructive algorithms", "strings"], "problem_rating": "1200", "solved_by": "x18280"},
{"url": "https://codeforces.com//problemset/problem/1536/A", "name": "Omkar and Bad Story", "tags": ["brute force", "constructive algorithms"], "problem_rating": "800", "solved_by": "x20131"},
{"url": "https://codeforces.com//problemset/problem/1535/F", "name": "String Distance", "tags": ["binary search", "brute force", "data structures", "hashing", "implementation", "strings"], "problem_rating": "3000", "solved_by": "x446"},
{"url": "https://codeforces.com//problemset/problem/1535/E", "name": "Gold Transfer", "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "problem_rating": "2200", "solved_by": "x2676"},
{"url": "https://codeforces.com//problemset/problem/1535/D", "name": "Playoff Tournament", "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x7600"},
{"url": "https://codeforces.com//problemset/problem/1535/C", "name": "Unstable String", "tags": ["binary search", "dp", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1400", "solved_by": "x16300"},
{"url": "https://codeforces.com//problemset/problem/1535/B", "name": "Array Reodering", "tags": ["brute force", "greedy", "math", "number theory", "sortings"], "problem_rating": "900", "solved_by": "x30067"},
{"url": "https://codeforces.com//problemset/problem/1535/A", "name": "Fair Playoff", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x47890"},
{"url": "https://codeforces.com//problemset/problem/1534/H", "name": "Lost Nodes", "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"], "problem_rating": "3500", "solved_by": "x146"},
{"url": "https://codeforces.com//problemset/problem/1534/G", "name": "A New Beginning", "tags": ["data structures", "dp", "geometry", "sortings"], "problem_rating": "3300", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/1534/F2", "name": "Falling Sand (Hard Version)", "tags": ["dfs and similar", "dp", "graphs", "greedy"], "problem_rating": "3000", "solved_by": "x529"},
{"url": "https://codeforces.com//problemset/problem/1534/F1", "name": "Falling Sand (Easy Version)", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1211"},
{"url": "https://codeforces.com//problemset/problem/1534/E", "name": "Lost Array", "tags": ["graphs", "greedy", "interactive", "shortest paths"], "problem_rating": "2300", "solved_by": "x1885"},
{"url": "https://codeforces.com//problemset/problem/1534/D", "name": "Lost Tree", "tags": ["constructive algorithms", "interactive", "trees"], "problem_rating": "1800", "solved_by": "x5909"},
{"url": "https://codeforces.com//problemset/problem/1534/C", "name": "Little Alawn's Puzzle", "tags": ["combinatorics", "dp", "dsu", "graphs", "math"], "problem_rating": "1300", "solved_by": "x12670"},
{"url": "https://codeforces.com//problemset/problem/1534/B", "name": "Histogram Ugliness", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x12436"},
{"url": "https://codeforces.com//problemset/problem/1534/A", "name": "Colour the Flag", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x12663"},
{"url": "https://codeforces.com//problemset/problem/1533/J", "name": "Pawns", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1533/I", "name": "Excursions", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs"], "problem_rating": [null], "solved_by": "x52"},
{"url": "https://codeforces.com//problemset/problem/1533/H", "name": "Submatrices", "tags": ["*special problem", "bitmasks", "data structures", "dp"], "problem_rating": [null], "solved_by": "x83"},
{"url": "https://codeforces.com//problemset/problem/1533/G", "name": "Biome Map", "tags": ["*special problem", "constructive algorithms", "dfs and similar", "graphs"], "problem_rating": [null], "solved_by": "x89"},
{"url": "https://codeforces.com//problemset/problem/1533/F", "name": "Binary String Partition", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": [null], "solved_by": "x215"},
{"url": "https://codeforces.com//problemset/problem/1533/E", "name": "Chess Team Forming", "tags": ["*special problem", "binary search", "data structures", "greedy"], "problem_rating": [null], "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1533/D", "name": "String Searching", "tags": ["*special problem", "hashing"], "problem_rating": [null], "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1533/C", "name": "Sweets", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": [null], "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1533/B", "name": "Nearest Point Function", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x766"},
{"url": "https://codeforces.com//problemset/problem/1533/A", "name": "Travel to Bertown", "tags": ["*special problem", "implementation", "math"], "problem_rating": [null], "solved_by": "x1073"},
{"url": "https://codeforces.com//problemset/problem/1532/F", "name": "Prefixes and Suffixes", "tags": ["*special problem", "strings"], "problem_rating": [null], "solved_by": "x218"},
{"url": "https://codeforces.com//problemset/problem/1532/E", "name": "Good Array", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x388"},
{"url": "https://codeforces.com//problemset/problem/1532/D", "name": "Teams Forming", "tags": ["*special problem", "sortings"], "problem_rating": [null], "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1532/C", "name": "Uniform String", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1532/B", "name": "Frog Jumping", "tags": ["*special problem", "math"], "problem_rating": [null], "solved_by": "x822"},
{"url": "https://codeforces.com//problemset/problem/1532/A", "name": "A+B (Trial Problem)", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x1134"},
{"url": "https://codeforces.com//problemset/problem/1531/E3", "name": "Сортировка слиянием", "tags": ["*special problem", "binary search"], "problem_rating": [null], "solved_by": "x269"},
{"url": "https://codeforces.com//problemset/problem/1531/E2", "name": "Сортировка слиянием", "tags": ["*special problem", "*special problem", "brute force"], "problem_rating": [null], "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1531/E1", "name": "Сортировка слиянием", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x358"},
{"url": "https://codeforces.com//problemset/problem/1531/D", "name": "Редактируем Зингер | color", "tags": ["*special problem", "*special problem"], "problem_rating": [null], "solved_by": "x353"},
{"url": "https://codeforces.com//problemset/problem/1531/C", "name": "Симметричный амфитеатр", "tags": ["*special problem", "constructive algorithms", "dp"], "problem_rating": [null], "solved_by": "x648"},
{"url": "https://codeforces.com//problemset/problem/1531/B2", "name": "Мониторинг", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x767"},
{"url": "https://codeforces.com//problemset/problem/1531/B1", "name": "Мониторинг", "tags": ["*special problem", "*special problem"], "problem_rating": [null], "solved_by": "x1089"},
{"url": "https://codeforces.com//problemset/problem/1531/A", "name": "Зингер | color", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x1447"},
{"url": "https://codeforces.com//problemset/problem/1530/H", "name": "Turing's Award", "tags": ["data structures", "dp"], "problem_rating": "3400", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1530/G", "name": "What a Reversal", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1530/F", "name": "Bingo", "tags": ["bitmasks", "combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x763"},
{"url": "https://codeforces.com//problemset/problem/1530/E", "name": "Minimax", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2100", "solved_by": "x2935"},
{"url": "https://codeforces.com//problemset/problem/1530/D", "name": "Secret Santa", "tags": ["constructive algorithms", "flows", "graphs", "greedy", "math"], "problem_rating": "1600", "solved_by": "x9071"},
{"url": "https://codeforces.com//problemset/problem/1530/C", "name": "Pursuit", "tags": ["binary search", "brute force", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x14480"},
{"url": "https://codeforces.com//problemset/problem/1530/B", "name": "Putting Plates", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x15737"},
{"url": "https://codeforces.com//problemset/problem/1530/A", "name": "Binary Decimal", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20959"},
{"url": "https://codeforces.com//problemset/problem/1529/B", "name": "Sifid and Strange Subsequences", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x20459"},
{"url": "https://codeforces.com//problemset/problem/1529/A", "name": "Eshag Loves Big Arrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x29584"},
{"url": "https://codeforces.com//problemset/problem/1528/F", "name": "AmShZ Farm", "tags": ["combinatorics", "fft", "math"], "problem_rating": "3300", "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1528/E", "name": "Mashtali and Hagh Trees", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "2900", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1528/D", "name": "It's a bird! No, it's a plane! No, it's AaParsa!", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "2500", "solved_by": "x1415"},
{"url": "https://codeforces.com//problemset/problem/1528/C", "name": "Trees of Tranquillity", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2598"},
{"url": "https://codeforces.com//problemset/problem/1528/B", "name": "Kavi on Pairing Duty", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x8583"},
{"url": "https://codeforces.com//problemset/problem/1528/A", "name": "Parsa's Humongous Tree", "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"], "problem_rating": "1600", "solved_by": "x14305"},
{"url": "https://codeforces.com//problemset/problem/1527/E", "name": "Partition Game", "tags": ["binary search", "data structures", "divide and conquer", "dp"], "problem_rating": "2500", "solved_by": "x2237"},
{"url": "https://codeforces.com//problemset/problem/1527/D", "name": "MEX Tree", "tags": ["combinatorics", "dfs and similar", "implementation", "math", "trees"], "problem_rating": "2400", "solved_by": "x1863"},
{"url": "https://codeforces.com//problemset/problem/1527/C", "name": "Sequence Pair Weight", "tags": ["hashing", "implementation", "math"], "problem_rating": "1600", "solved_by": "x13316"},
{"url": "https://codeforces.com//problemset/problem/1527/B2", "name": "Palindrome Game (hard version)", "tags": ["constructive algorithms", "games"], "problem_rating": "1900", "solved_by": "x7752"},
{"url": "https://codeforces.com//problemset/problem/1527/B1", "name": "Palindrome Game (easy version)", "tags": ["constructive algorithms", "games"], "problem_rating": "1200", "solved_by": "x25241"},
{"url": "https://codeforces.com//problemset/problem/1527/A", "name": "And Then There Were K", "tags": ["bitmasks"], "problem_rating": "800", "solved_by": "x34860"},
{"url": "https://codeforces.com//problemset/problem/1526/F", "name": "Median Queries", "tags": ["constructive algorithms", "interactive", "probabilities"], "problem_rating": "3000", "solved_by": "x253"},
{"url": "https://codeforces.com//problemset/problem/1526/E", "name": "Oolimry and Suffix Array", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "2400", "solved_by": "x1039"},
{"url": "https://codeforces.com//problemset/problem/1526/D", "name": "Kill Anton", "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "problem_rating": "2200", "solved_by": "x2381"},
{"url": "https://codeforces.com//problemset/problem/1526/C2", "name": "Potions (Hard Version)", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x21873"},
{"url": "https://codeforces.com//problemset/problem/1526/C1", "name": "Potions (Easy Version)", "tags": ["brute force", "data structures", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x21845"},
{"url": "https://codeforces.com//problemset/problem/1526/B", "name": "I Hate 1111", "tags": ["dp", "math", "number theory"], "problem_rating": "1400", "solved_by": "x29706"},
{"url": "https://codeforces.com//problemset/problem/1526/A", "name": "Mean Inequality", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x24028"},
{"url": "https://codeforces.com//problemset/problem/1525/F", "name": "Goblins And Gnomes", "tags": ["brute force", "dp", "flows", "graph matchings"], "problem_rating": "2800", "solved_by": "x325"},
{"url": "https://codeforces.com//problemset/problem/1525/E", "name": "Assimilation IV", "tags": ["combinatorics", "dp", "math", "probabilities", "two pointers"], "problem_rating": "2100", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1525/D", "name": "Armchairs", "tags": ["dp", "flows", "graph matchings", "greedy"], "problem_rating": "1800", "solved_by": "x9544"},
{"url": "https://codeforces.com//problemset/problem/1525/C", "name": "Robot Collisions", "tags": ["data structures", "greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x4390"},
{"url": "https://codeforces.com//problemset/problem/1525/B", "name": "Permutation Sort", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x24465"},
{"url": "https://codeforces.com//problemset/problem/1525/A", "name": "Potion-making", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x25228"},
{"url": "https://codeforces.com//problemset/problem/1523/H", "name": "Hopping Around the Array", "tags": ["data structures", "dp"], "problem_rating": "3500", "solved_by": "x238"},
{"url": "https://codeforces.com//problemset/problem/1523/G", "name": "Try Booking", "tags": ["data structures", "divide and conquer"], "problem_rating": "3200", "solved_by": "x443"},
{"url": "https://codeforces.com//problemset/problem/1523/F", "name": "Favorite Game", "tags": ["bitmasks", "dp"], "problem_rating": "3300", "solved_by": "x415"},
{"url": "https://codeforces.com//problemset/problem/1523/E", "name": "Crypto Lights", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x1575"},
{"url": "https://codeforces.com//problemset/problem/1523/D", "name": "Love-Hate", "tags": ["bitmasks", "brute force", "dp", "probabilities"], "problem_rating": "2400", "solved_by": "x2140"},
{"url": "https://codeforces.com//problemset/problem/1523/C", "name": "Compression and Expansion", "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "problem_rating": "1600", "solved_by": "x8667"},
{"url": "https://codeforces.com//problemset/problem/1523/B", "name": "Lord of the Values", "tags": ["constructive algorithms"], "problem_rating": "1100", "solved_by": "x12045"},
{"url": "https://codeforces.com//problemset/problem/1523/A", "name": "Game of Life", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13444"},
{"url": "https://codeforces.com//problemset/problem/1521/E", "name": "Nastia and a Beautiful Matrix", "tags": ["binary search", "constructive algorithms", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x654"},
{"url": "https://codeforces.com//problemset/problem/1521/D", "name": "Nastia Plays with a Tree", "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x1876"},
{"url": "https://codeforces.com//problemset/problem/1521/C", "name": "Nastia and a Hidden Permutation", "tags": ["constructive algorithms", "interactive"], "problem_rating": "2000", "solved_by": "x4316"},
{"url": "https://codeforces.com//problemset/problem/1521/B", "name": "Nastia and a Good Array", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x21069"},
{"url": "https://codeforces.com//problemset/problem/1521/A", "name": "Nastia and Nearly Good Numbers", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1000", "solved_by": "x36261"},
{"url": "https://codeforces.com//problemset/problem/1520/G", "name": "To Go Or Not To Go?", "tags": ["brute force", "dfs and similar", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "2200", "solved_by": "x3618"},
{"url": "https://codeforces.com//problemset/problem/1520/F2", "name": "Guess the K-th Zero (Hard version)", "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "problem_rating": "2200", "solved_by": "x2946"},
{"url": "https://codeforces.com//problemset/problem/1520/F1", "name": "Guess the K-th Zero (Easy version)", "tags": ["binary search", "interactive"], "problem_rating": "1600", "solved_by": "x11263"},
{"url": "https://codeforces.com//problemset/problem/1520/E", "name": "Arranging The Sheep", "tags": ["greedy", "math"], "problem_rating": "1400", "solved_by": "x20726"},
{"url": "https://codeforces.com//problemset/problem/1520/D", "name": "Same Differences", "tags": ["data structures", "hashing", "math"], "problem_rating": "1200", "solved_by": "x44924"},
{"url": "https://codeforces.com//problemset/problem/1520/C", "name": "Not Adjacent Matrix", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x31228"},
{"url": "https://codeforces.com//problemset/problem/1520/B", "name": "Ordinary Numbers", "tags": ["brute force", "math", "number theory"], "problem_rating": "800", "solved_by": "x43698"},
{"url": "https://codeforces.com//problemset/problem/1520/A", "name": "Do Not Be Distracted!", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x50804"},
{"url": "https://codeforces.com//problemset/problem/1519/F", "name": "Chests and Keys", "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "flows"], "problem_rating": "3200", "solved_by": "x402"},
{"url": "https://codeforces.com//problemset/problem/1519/E", "name": "Off by One", "tags": ["constructive algorithms", "dfs and similar", "geometry", "graphs", "sortings", "trees"], "problem_rating": "2700", "solved_by": "x814"},
{"url": "https://codeforces.com//problemset/problem/1519/D", "name": "Maximum Sum of Products", "tags": ["brute force", "dp", "implementation", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x14904"},
{"url": "https://codeforces.com//problemset/problem/1519/C", "name": "Berland Regional", "tags": ["brute force", "data structures", "greedy", "number theory", "sortings"], "problem_rating": "1400", "solved_by": "x16458"},
{"url": "https://codeforces.com//problemset/problem/1519/B", "name": "The Cake Is a Lie", "tags": ["dp", "math"], "problem_rating": "800", "solved_by": "x30465"},
{"url": "https://codeforces.com//problemset/problem/1519/A", "name": "Red and Blue Beans", "tags": ["math"], "problem_rating": "800", "solved_by": "x28515"},
{"url": "https://codeforces.com//problemset/problem/1517/H", "name": "Fly Around the World", "tags": ["dp", "geometry"], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1517/G", "name": "Starry Night Camping", "tags": ["constructive algorithms", "flows", "graphs"], "problem_rating": "3300", "solved_by": "x463"},
{"url": "https://codeforces.com//problemset/problem/1517/F", "name": "Reunion", "tags": ["combinatorics", "dp", "trees"], "problem_rating": "3200", "solved_by": "x452"},
{"url": "https://codeforces.com//problemset/problem/1517/E", "name": "Group Photo", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "2500", "solved_by": "x961"},
{"url": "https://codeforces.com//problemset/problem/1517/D", "name": "Explorer Space", "tags": ["dp", "graphs", "shortest paths"], "problem_rating": "1800", "solved_by": "x7519"},
{"url": "https://codeforces.com//problemset/problem/1517/C", "name": "Fillomino 2", "tags": ["constructive algorithms", "dfs and similar", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x13218"},
{"url": "https://codeforces.com//problemset/problem/1517/B", "name": "Morning Jogging", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x13170"},
{"url": "https://codeforces.com//problemset/problem/1517/A", "name": "Sum of 2050", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x25365"},
{"url": "https://codeforces.com//problemset/problem/1516/E", "name": "Baby Ehab Plays with Permutations", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2500", "solved_by": "x830"},
{"url": "https://codeforces.com//problemset/problem/1516/D", "name": "Cut", "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"], "problem_rating": "2100", "solved_by": "x4207"},
{"url": "https://codeforces.com//problemset/problem/1516/C", "name": "Baby Ehab Partitions Again", "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "problem_rating": "1700", "solved_by": "x11736"},
{"url": "https://codeforces.com//problemset/problem/1516/B", "name": "AGAGA XOOORRR", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x18788"},
{"url": "https://codeforces.com//problemset/problem/1516/A", "name": "Tit for Tat", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x23246"},
{"url": "https://codeforces.com//problemset/problem/1515/I", "name": "Phoenix and Diamonds", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "3400", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/1515/H", "name": "Phoenix and Bits", "tags": ["bitmasks", "brute force", "data structures", "sortings"], "problem_rating": "3500", "solved_by": "x222"},
{"url": "https://codeforces.com//problemset/problem/1515/G", "name": "Phoenix and Odometers", "tags": ["dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2700", "solved_by": "x986"},
{"url": "https://codeforces.com//problemset/problem/1515/F", "name": "Phoenix and Earthquake", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x1726"},
{"url": "https://codeforces.com//problemset/problem/1515/E", "name": "Phoenix and Computers", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x3456"},
{"url": "https://codeforces.com//problemset/problem/1515/D", "name": "Phoenix and Socks", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x11267"},
{"url": "https://codeforces.com//problemset/problem/1515/C", "name": "Phoenix and Towers", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x16819"},
{"url": "https://codeforces.com//problemset/problem/1515/B", "name": "Phoenix and Puzzle", "tags": ["brute force", "geometry", "math", "number theory"], "problem_rating": "1000", "solved_by": "x24555"},
{"url": "https://codeforces.com//problemset/problem/1515/A", "name": "Phoenix and Gold", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x20129"},
{"url": "https://codeforces.com//problemset/problem/1514/E", "name": "Baby Ehab's Hyper Apartment", "tags": ["binary search", "graphs", "interactive", "sortings", "two pointers"], "problem_rating": "2700", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/1514/D", "name": "Cut and Stick", "tags": ["binary search", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x4175"},
{"url": "https://codeforces.com//problemset/problem/1514/C", "name": "Product 1 Modulo N", "tags": ["greedy", "number theory"], "problem_rating": "1600", "solved_by": "x14722"},
{"url": "https://codeforces.com//problemset/problem/1514/B", "name": "AND 0, Sum Big", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1200", "solved_by": "x23930"},
{"url": "https://codeforces.com//problemset/problem/1514/A", "name": "Perfectly Imperfect Array", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x23946"},
{"url": "https://codeforces.com//problemset/problem/1513/F", "name": "Swapping Problem", "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "problem_rating": "2500", "solved_by": "x1214"},
{"url": "https://codeforces.com//problemset/problem/1513/E", "name": "Cost Equilibrium", "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1436"},
{"url": "https://codeforces.com//problemset/problem/1513/D", "name": "GCD and MST", "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "number theory", "sortings"], "problem_rating": "2000", "solved_by": "x5204"},
{"url": "https://codeforces.com//problemset/problem/1513/C", "name": "Add One", "tags": ["dp", "matrices"], "problem_rating": "1600", "solved_by": "x13585"},
{"url": "https://codeforces.com//problemset/problem/1513/B", "name": "AND Sequences", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x14243"},
{"url": "https://codeforces.com//problemset/problem/1513/A", "name": "Array and Peaks", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19256"},
{"url": "https://codeforces.com//problemset/problem/1512/G", "name": "Short Task", "tags": ["brute force", "dp", "math", "number theory"], "problem_rating": "1700", "solved_by": "x7995"},
{"url": "https://codeforces.com//problemset/problem/1512/F", "name": "Education", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x6058"},
{"url": "https://codeforces.com//problemset/problem/1512/E", "name": "Permutation by Sum", "tags": ["brute force", "greedy", "math"], "problem_rating": "1600", "solved_by": "x10241"},
{"url": "https://codeforces.com//problemset/problem/1512/D", "name": "Corrupted Array", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1200", "solved_by": "x22164"},
{"url": "https://codeforces.com//problemset/problem/1512/C", "name": "A-B Palindrome", "tags": ["constructive algorithms", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x19803"},
{"url": "https://codeforces.com//problemset/problem/1512/B", "name": "Almost Rectangle", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x25191"},
{"url": "https://codeforces.com//problemset/problem/1512/A", "name": "Spy Detected!", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x61904"},
{"url": "https://codeforces.com//problemset/problem/1511/G", "name": "Chips on a Board", "tags": ["bitmasks", "brute force", "data structures", "dp", "games", "two pointers"], "problem_rating": "2700", "solved_by": "x721"},
{"url": "https://codeforces.com//problemset/problem/1511/F", "name": "Chainword", "tags": ["brute force", "data structures", "dp", "matrices", "string suffix structures", "strings"], "problem_rating": "2700", "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1511/E", "name": "Colorings and Dominoes", "tags": ["combinatorics", "dp", "greedy", "math"], "problem_rating": "2100", "solved_by": "x2498"},
{"url": "https://codeforces.com//problemset/problem/1511/D", "name": "Min Cost String", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x11259"},
{"url": "https://codeforces.com//problemset/problem/1511/C", "name": "Yet Another Card Deck", "tags": ["brute force", "data structures", "implementation", "trees"], "problem_rating": "1100", "solved_by": "x22966"},
{"url": "https://codeforces.com//problemset/problem/1511/B", "name": "GCD Length", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x22534"},
{"url": "https://codeforces.com//problemset/problem/1511/A", "name": "Review Site", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x27371"},
{"url": "https://codeforces.com//problemset/problem/1510/K", "name": "King's Task", "tags": ["brute force", "graphs", "implementation"], "problem_rating": "1200", "solved_by": "x5337"},
{"url": "https://codeforces.com//problemset/problem/1510/J", "name": "Japanese Game", "tags": ["constructive algorithms", "math"], "problem_rating": "2700", "solved_by": "x516"},
{"url": "https://codeforces.com//problemset/problem/1510/I", "name": "Is It Rated?", "tags": ["greedy", "interactive", "math", "probabilities"], "problem_rating": "2700", "solved_by": "x462"},
{"url": "https://codeforces.com//problemset/problem/1510/H", "name": "Hard Optimization", "tags": ["dp"], "problem_rating": "3200", "solved_by": "x98"},
{"url": "https://codeforces.com//problemset/problem/1510/G", "name": "Guide", "tags": [], "problem_rating": "2100", "solved_by": "x1266"},
{"url": "https://codeforces.com//problemset/problem/1510/F", "name": "Fiber Shape", "tags": [], "problem_rating": "2800", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1510/E", "name": "Equilibrium Point /\\textbackslash/\\textbackslash", "tags": [], "problem_rating": "2700", "solved_by": "x245"},
{"url": "https://codeforces.com//problemset/problem/1510/D", "name": "Digits", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x1853"},
{"url": "https://codeforces.com//problemset/problem/1510/C", "name": "Cactus Not Enough", "tags": ["dfs and similar", "graph matchings", "graphs"], "problem_rating": "2900", "solved_by": "x211"},
{"url": "https://codeforces.com//problemset/problem/1510/B", "name": "Button Lock", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2600", "solved_by": "x726"},
{"url": "https://codeforces.com//problemset/problem/1510/A", "name": "ASCII Automata Art", "tags": [], "problem_rating": "3100", "solved_by": "x152"},
{"url": "https://codeforces.com//problemset/problem/1509/C", "name": "The Sports Festival", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x12130"},
{"url": "https://codeforces.com//problemset/problem/1509/B", "name": "TMT Document", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x21332"},
{"url": "https://codeforces.com//problemset/problem/1509/A", "name": "Average Height", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x25855"},
{"url": "https://codeforces.com//problemset/problem/1508/F", "name": "Optimal Encoding", "tags": ["brute force", "data structures"], "problem_rating": "3500", "solved_by": "x120"},
{"url": "https://codeforces.com//problemset/problem/1508/E", "name": "Tree Calendar", "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "problem_rating": "3100", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/1508/D", "name": "Swap Pass", "tags": ["constructive algorithms", "geometry", "sortings"], "problem_rating": "3000", "solved_by": "x546"},
{"url": "https://codeforces.com//problemset/problem/1508/C", "name": "Complete the MST", "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1448"},
{"url": "https://codeforces.com//problemset/problem/1508/B", "name": "Almost Sorted", "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x3906"},
{"url": "https://codeforces.com//problemset/problem/1508/A", "name": "Binary Literature", "tags": ["constructive algorithms", "greedy", "implementation", "strings", "two pointers"], "problem_rating": "1900", "solved_by": "x6106"},
{"url": "https://codeforces.com//problemset/problem/1506/G", "name": "Maximize the Remaining String", "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x4165"},
{"url": "https://codeforces.com//problemset/problem/1506/F", "name": "Triangular Paths", "tags": ["constructive algorithms", "graphs", "math", "shortest paths", "sortings"], "problem_rating": "2000", "solved_by": "x3167"},
{"url": "https://codeforces.com//problemset/problem/1506/E", "name": "Restoring the Permutation", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x12828"},
{"url": "https://codeforces.com//problemset/problem/1506/D", "name": "Epic Transformation", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x21279"},
{"url": "https://codeforces.com//problemset/problem/1506/C", "name": "Double-ended Strings", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x24187"},
{"url": "https://codeforces.com//problemset/problem/1506/B", "name": "Partial Replacement", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x20059"},
{"url": "https://codeforces.com//problemset/problem/1506/A", "name": "Strange Table", "tags": ["math"], "problem_rating": "800", "solved_by": "x30364"},
{"url": "https://codeforces.com//problemset/problem/1505/I", "name": "Mysterious language again, seriously?", "tags": ["*special problem"], "problem_rating": "2200", "solved_by": "x549"},
{"url": "https://codeforces.com//problemset/problem/1505/H", "name": "L BREAK into program", "tags": ["*special problem"], "problem_rating": "2500", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1505/G", "name": "Encoded message", "tags": ["*special problem", "implementation"], "problem_rating": "2600", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1505/F", "name": "Math", "tags": ["*special problem", "math"], "problem_rating": "2200", "solved_by": "x1485"},
{"url": "https://codeforces.com//problemset/problem/1505/E", "name": "Cakewalk", "tags": ["*special problem", "greedy", "implementation", "shortest paths"], "problem_rating": "1800", "solved_by": "x1741"},
{"url": "https://codeforces.com//problemset/problem/1505/D", "name": "Xenolith? Hippodrome?", "tags": ["*special problem", "number theory"], "problem_rating": "1800", "solved_by": "x756"},
{"url": "https://codeforces.com//problemset/problem/1505/C", "name": "Fibonacci Words", "tags": ["*special problem", "implementation"], "problem_rating": "1400", "solved_by": "x6340"},
{"url": "https://codeforces.com//problemset/problem/1505/B", "name": "DMCA", "tags": ["*special problem", "implementation", "number theory"], "problem_rating": "1600", "solved_by": "x6061"},
{"url": "https://codeforces.com//problemset/problem/1505/A", "name": "Is it rated - 2", "tags": ["*special problem", "implementation", "interactive"], "problem_rating": "900", "solved_by": "x14186"},
{"url": "https://codeforces.com//problemset/problem/1504/B", "name": "Flip the Bits", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x17906"},
{"url": "https://codeforces.com//problemset/problem/1504/A", "name": "Déjà Vu", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x21550"},
{"url": "https://codeforces.com//problemset/problem/1503/F", "name": "Balance the Cards", "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "problem_rating": "3500", "solved_by": "x137"},
{"url": "https://codeforces.com//problemset/problem/1503/E", "name": "2-Coloring", "tags": ["combinatorics", "dp", "math"], "problem_rating": "3100", "solved_by": "x603"},
{"url": "https://codeforces.com//problemset/problem/1503/D", "name": "Flip the Cards", "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "problem_rating": "2600", "solved_by": "x988"},
{"url": "https://codeforces.com//problemset/problem/1503/C", "name": "Travelling Salesman Problem", "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x3300"},
{"url": "https://codeforces.com//problemset/problem/1503/B", "name": "3-Coloring", "tags": ["constructive algorithms", "games", "interactive"], "problem_rating": "1700", "solved_by": "x6922"},
{"url": "https://codeforces.com//problemset/problem/1503/A", "name": "Balance the Bits", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x13210"},
{"url": "https://codeforces.com//problemset/problem/1501/B", "name": "Napoleon Cake", "tags": ["dp", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x18785"},
{"url": "https://codeforces.com//problemset/problem/1501/A", "name": "Alexey and Train", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11552"},
{"url": "https://codeforces.com//problemset/problem/1500/F", "name": "Cupboards Jumps", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x341"},
{"url": "https://codeforces.com//problemset/problem/1500/E", "name": "Subset Trick", "tags": ["binary search", "data structures"], "problem_rating": "3300", "solved_by": "x216"},
{"url": "https://codeforces.com//problemset/problem/1500/D", "name": "Tiles for Bathroom", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "2900", "solved_by": "x450"},
{"url": "https://codeforces.com//problemset/problem/1500/C", "name": "Matrix Sorting", "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x787"},
{"url": "https://codeforces.com//problemset/problem/1500/B", "name": "Two chandeliers", "tags": ["binary search", "brute force", "chinese remainder theorem", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2021"},
{"url": "https://codeforces.com//problemset/problem/1500/A", "name": "Going Home", "tags": ["brute force", "hashing", "implementation", "math"], "problem_rating": "1800", "solved_by": "x8657"},
{"url": "https://codeforces.com//problemset/problem/1499/G", "name": "Graph Coloring", "tags": ["data structures", "graphs", "interactive"], "problem_rating": "3100", "solved_by": "x188"},
{"url": "https://codeforces.com//problemset/problem/1499/F", "name": "Diameter Cuts", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2400", "solved_by": "x1276"},
{"url": "https://codeforces.com//problemset/problem/1499/E", "name": "Chaotic Merge", "tags": ["combinatorics", "dp", "math", "strings"], "problem_rating": "2400", "solved_by": "x1431"},
{"url": "https://codeforces.com//problemset/problem/1499/D", "name": "The Number of Pairs", "tags": ["dp", "math", "number theory"], "problem_rating": "2100", "solved_by": "x5631"},
{"url": "https://codeforces.com//problemset/problem/1499/C", "name": "Minimum Grid Path", "tags": ["brute force", "data structures", "greedy", "math"], "problem_rating": "1500", "solved_by": "x12462"},
{"url": "https://codeforces.com//problemset/problem/1499/B", "name": "Binary Removals", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "1000", "solved_by": "x20477"},
{"url": "https://codeforces.com//problemset/problem/1499/A", "name": "Domino on Windowsill", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x21093"},
{"url": "https://codeforces.com//problemset/problem/1498/F", "name": "Christmas Game", "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "problem_rating": "2500", "solved_by": "x862"},
{"url": "https://codeforces.com//problemset/problem/1498/E", "name": "Two Houses", "tags": ["brute force", "graphs", "greedy", "interactive", "sortings"], "problem_rating": "2200", "solved_by": "x1870"},
{"url": "https://codeforces.com//problemset/problem/1498/D", "name": "Bananas in a Microwave", "tags": ["dfs and similar", "dp", "graphs", "implementation"], "problem_rating": "2200", "solved_by": "x2269"},
{"url": "https://codeforces.com//problemset/problem/1498/C", "name": "Planar Reflections", "tags": ["brute force", "data structures", "dp"], "problem_rating": "1600", "solved_by": "x9461"},
{"url": "https://codeforces.com//problemset/problem/1498/B", "name": "Box Fitting", "tags": ["binary search", "bitmasks", "data structures", "greedy"], "problem_rating": "1300", "solved_by": "x16601"},
{"url": "https://codeforces.com//problemset/problem/1498/A", "name": "GCD Sum", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x22978"},
{"url": "https://codeforces.com//problemset/problem/1497/E2", "name": "Square-Free Division (hard version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "2500", "solved_by": "x1593"},
{"url": "https://codeforces.com//problemset/problem/1497/E1", "name": "Square-Free Division (easy version)", "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "problem_rating": "1700", "solved_by": "x8157"},
{"url": "https://codeforces.com//problemset/problem/1497/D", "name": "Genius", "tags": ["bitmasks", "dp", "graphs", "number theory"], "problem_rating": "2500", "solved_by": "x1509"},
{"url": "https://codeforces.com//problemset/problem/1497/C2", "name": "k-LCM (hard version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1600", "solved_by": "x16831"},
{"url": "https://codeforces.com//problemset/problem/1497/C1", "name": "k-LCM (easy version)", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x25165"},
{"url": "https://codeforces.com//problemset/problem/1497/B", "name": "M-arrays", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x19267"},
{"url": "https://codeforces.com//problemset/problem/1497/A", "name": "Meximization", "tags": ["brute force", "data structures", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x24091"},
{"url": "https://codeforces.com//problemset/problem/1496/B", "name": "Max and Mex", "tags": ["math"], "problem_rating": "1100", "solved_by": "x17377"},
{"url": "https://codeforces.com//problemset/problem/1496/A", "name": "Split it!", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "900", "solved_by": "x20478"},
{"url": "https://codeforces.com//problemset/problem/1495/F", "name": "Squares", "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "problem_rating": "3300", "solved_by": "x292"},
{"url": "https://codeforces.com//problemset/problem/1495/E", "name": "Qingshan and Daniel", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "3200", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1495/D", "name": "BFS Trees", "tags": ["combinatorics", "dfs and similar", "graphs", "math", "shortest paths", "trees"], "problem_rating": "2600", "solved_by": "x1203"},
{"url": "https://codeforces.com//problemset/problem/1495/C", "name": "Garden of the Sun", "tags": ["constructive algorithms", "graphs"], "problem_rating": "2300", "solved_by": "x2540"},
{"url": "https://codeforces.com//problemset/problem/1495/B", "name": "Let's Go Hiking", "tags": ["games", "greedy"], "problem_rating": "1900", "solved_by": "x5896"},
{"url": "https://codeforces.com//problemset/problem/1495/A", "name": "Diamond Miner", "tags": ["geometry", "greedy", "math", "sortings"], "problem_rating": "1200", "solved_by": "x16853"},
{"url": "https://codeforces.com//problemset/problem/1494/F", "name": "Delete The Edges", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation"], "problem_rating": "2900", "solved_by": "x335"},
{"url": "https://codeforces.com//problemset/problem/1494/E", "name": "A-Z Graph", "tags": ["constructive algorithms", "data structures", "graphs", "hashing"], "problem_rating": "2400", "solved_by": "x1678"},
{"url": "https://codeforces.com//problemset/problem/1494/D", "name": "Dogeforces", "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "problem_rating": "2300", "solved_by": "x2523"},
{"url": "https://codeforces.com//problemset/problem/1494/C", "name": "1D Sokoban", "tags": ["binary search", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x5352"},
{"url": "https://codeforces.com//problemset/problem/1494/B", "name": "Berland Crossword", "tags": ["bitmasks", "brute force", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x14133"},
{"url": "https://codeforces.com//problemset/problem/1494/A", "name": "ABC String", "tags": ["bitmasks", "brute force", "implementation"], "problem_rating": "900", "solved_by": "x20630"},
{"url": "https://codeforces.com//problemset/problem/1493/F", "name": "Enchanted Matrix", "tags": ["bitmasks", "interactive", "number theory"], "problem_rating": "2600", "solved_by": "x384"},
{"url": "https://codeforces.com//problemset/problem/1493/E", "name": "Enormous XOR", "tags": ["bitmasks", "constructive algorithms", "greedy", "math", "strings", "two pointers"], "problem_rating": "2600", "solved_by": "x883"},
{"url": "https://codeforces.com//problemset/problem/1493/D", "name": "GCD of an Array", "tags": ["brute force", "data structures", "hashing", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2100", "solved_by": "x4836"},
{"url": "https://codeforces.com//problemset/problem/1493/C", "name": "K-beautiful Strings", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x4512"},
{"url": "https://codeforces.com//problemset/problem/1493/B", "name": "Planet Lapituletti", "tags": ["brute force", "implementation"], "problem_rating": "1300", "solved_by": "x11729"},
{"url": "https://codeforces.com//problemset/problem/1493/A", "name": "Anti-knapsack", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x19181"},
{"url": "https://codeforces.com//problemset/problem/1492/E", "name": "Almost Fault-Tolerant Database", "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "implementation"], "problem_rating": "2500", "solved_by": "x1172"},
{"url": "https://codeforces.com//problemset/problem/1492/D", "name": "Genius's Gambit", "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x6003"},
{"url": "https://codeforces.com//problemset/problem/1492/C", "name": "Maximum width", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "1500", "solved_by": "x15813"},
{"url": "https://codeforces.com//problemset/problem/1492/B", "name": "Card Deck", "tags": ["data structures", "greedy", "math"], "problem_rating": "1100", "solved_by": "x18256"},
{"url": "https://codeforces.com//problemset/problem/1492/A", "name": "Three swimmers", "tags": ["math"], "problem_rating": "800", "solved_by": "x22545"},
{"url": "https://codeforces.com//problemset/problem/1491/I", "name": "Ruler Of The Zoo", "tags": ["brute force", "data structures"], "problem_rating": "3500", "solved_by": "x79"},
{"url": "https://codeforces.com//problemset/problem/1491/H", "name": "Yuezheng Ling and Dynamic Tree", "tags": ["data structures", "trees"], "problem_rating": "3400", "solved_by": "x786"},
{"url": "https://codeforces.com//problemset/problem/1491/G", "name": "Switch and Flip", "tags": ["constructive algorithms", "graphs", "math"], "problem_rating": "2800", "solved_by": "x754"},
{"url": "https://codeforces.com//problemset/problem/1491/F", "name": "Magnets", "tags": ["binary search", "constructive algorithms", "interactive"], "problem_rating": "2700", "solved_by": "x920"},
{"url": "https://codeforces.com//problemset/problem/1491/E", "name": "Fib-tree", "tags": ["brute force", "dfs and similar", "divide and conquer", "number theory", "trees"], "problem_rating": "2400", "solved_by": "x2077"},
{"url": "https://codeforces.com//problemset/problem/1491/D", "name": "Zookeeper and The Infinite Zoo", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7033"},
{"url": "https://codeforces.com//problemset/problem/1491/C", "name": "Pekora and Trampoline", "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7792"},
{"url": "https://codeforces.com//problemset/problem/1491/B", "name": "Minimal Cost", "tags": ["brute force", "math"], "problem_rating": "1200", "solved_by": "x13666"},
{"url": "https://codeforces.com//problemset/problem/1491/A", "name": "K-th Largest Value", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x18122"},
{"url": "https://codeforces.com//problemset/problem/1490/G", "name": "Old Floppy Drive", "tags": ["binary search", "data structures", "math"], "problem_rating": "1900", "solved_by": "x5581"},
{"url": "https://codeforces.com//problemset/problem/1490/F", "name": "Equalize the Array", "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x15811"},
{"url": "https://codeforces.com//problemset/problem/1490/E", "name": "Accidental Victory", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x18708"},
{"url": "https://codeforces.com//problemset/problem/1490/D", "name": "Permutation Transformation", "tags": ["dfs and similar", "divide and conquer", "implementation"], "problem_rating": "1200", "solved_by": "x19153"},
{"url": "https://codeforces.com//problemset/problem/1490/C", "name": "Sum of Cubes", "tags": ["binary search", "brute force", "brute force", "math"], "problem_rating": "1100", "solved_by": "x32279"},
{"url": "https://codeforces.com//problemset/problem/1490/B", "name": "Balanced Remainders", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x25918"},
{"url": "https://codeforces.com//problemset/problem/1490/A", "name": "Dense Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x30916"},
{"url": "https://codeforces.com//problemset/problem/1488/J", "name": "Flower Shop", "tags": ["*special problem", "data structures", "fft", "math"], "problem_rating": "3100", "solved_by": "x35"},
{"url": "https://codeforces.com//problemset/problem/1488/I", "name": "Demonic Invasion", "tags": ["*special problem", "flows"], "problem_rating": "3100", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1488/H", "name": "Build From Suffixes", "tags": ["*special problem", "combinatorics", "data structures"], "problem_rating": "2800", "solved_by": "x58"},
{"url": "https://codeforces.com//problemset/problem/1488/G", "name": "Painting Numbers", "tags": ["*special problem", "data structures", "greedy", "number theory"], "problem_rating": "2500", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1488/F", "name": "Dogecoin", "tags": ["*special problem", "*special problem", "binary search", "data structures"], "problem_rating": "2300", "solved_by": "x174"},
{"url": "https://codeforces.com//problemset/problem/1488/E", "name": "Palindromic Doubles", "tags": ["*special problem", "data structures", "dp"], "problem_rating": "2200", "solved_by": "x212"},
{"url": "https://codeforces.com//problemset/problem/1488/D", "name": "Problemsolving Marathon", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "1900", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1488/C", "name": "Two Policemen", "tags": ["*special problem", "binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x404"},
{"url": "https://codeforces.com//problemset/problem/1488/B", "name": "RBS Deletion", "tags": ["*special problem", "greedy"], "problem_rating": "1800", "solved_by": "x554"},
{"url": "https://codeforces.com//problemset/problem/1488/A", "name": "From Zero To Y", "tags": ["*special problem", "math"], "problem_rating": "900", "solved_by": "x1379"},
{"url": "https://codeforces.com//problemset/problem/1487/G", "name": "String Counting", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2700", "solved_by": "x581"},
{"url": "https://codeforces.com//problemset/problem/1487/F", "name": "Ones", "tags": ["dp", "greedy", "shortest paths"], "problem_rating": "2900", "solved_by": "x365"},
{"url": "https://codeforces.com//problemset/problem/1487/E", "name": "Cheap Dinner", "tags": ["brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4435"},
{"url": "https://codeforces.com//problemset/problem/1487/D", "name": "Pythagorean Triples", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x17427"},
{"url": "https://codeforces.com//problemset/problem/1487/C", "name": "Minimum Ties", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x13905"},
{"url": "https://codeforces.com//problemset/problem/1487/B", "name": "Cat Cycle", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x20344"},
{"url": "https://codeforces.com//problemset/problem/1487/A", "name": "Arena", "tags": ["implementation", "sortings"], "problem_rating": "800", "solved_by": "x26334"},
{"url": "https://codeforces.com//problemset/problem/1486/F", "name": "Pairs of Paths", "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2600", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1486/E", "name": "Paired Payment", "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x2844"},
{"url": "https://codeforces.com//problemset/problem/1486/D", "name": "Max Median", "tags": ["binary search", "data structures", "dp"], "problem_rating": "2100", "solved_by": "x7000"},
{"url": "https://codeforces.com//problemset/problem/1486/C2", "name": "Guessing the Greatest (hard version)", "tags": ["binary search", "interactive"], "problem_rating": "1900", "solved_by": "x8286"},
{"url": "https://codeforces.com//problemset/problem/1486/C1", "name": "Guessing the Greatest (easy version)", "tags": ["binary search", "interactive"], "problem_rating": "1600", "solved_by": "x11870"},
{"url": "https://codeforces.com//problemset/problem/1486/B", "name": "Eastern Exhibition", "tags": ["binary search", "geometry", "shortest paths", "sortings"], "problem_rating": "1500", "solved_by": "x15636"},
{"url": "https://codeforces.com//problemset/problem/1486/A", "name": "Shifting Stacks", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x25098"},
{"url": "https://codeforces.com//problemset/problem/1485/F", "name": "Copy or Prefix Sum", "tags": ["combinatorics", "data structures", "dp", "sortings"], "problem_rating": "2400", "solved_by": "x1901"},
{"url": "https://codeforces.com//problemset/problem/1485/E", "name": "Move and Swap", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1247"},
{"url": "https://codeforces.com//problemset/problem/1485/D", "name": "Multiples and Power Differences", "tags": ["constructive algorithms", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x4999"},
{"url": "https://codeforces.com//problemset/problem/1485/C", "name": "Floor and Mod", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9721"},
{"url": "https://codeforces.com//problemset/problem/1485/B", "name": "Replace and Keep Sorted", "tags": ["dp", "implementation", "math"], "problem_rating": "1200", "solved_by": "x16860"},
{"url": "https://codeforces.com//problemset/problem/1485/A", "name": "Add and Divide", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x21603"},
{"url": "https://codeforces.com//problemset/problem/1482/H", "name": "Exam", "tags": ["data structures", "string suffix structures", "trees"], "problem_rating": "3400", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1482/G", "name": "Vabank", "tags": ["binary search", "interactive"], "problem_rating": "3200", "solved_by": "x277"},
{"url": "https://codeforces.com//problemset/problem/1482/F", "name": "Useful Edges", "tags": ["graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x1486"},
{"url": "https://codeforces.com//problemset/problem/1482/E", "name": "Skyline Photo", "tags": ["data structures", "divide and conquer", "dp"], "problem_rating": "2100", "solved_by": "x3034"},
{"url": "https://codeforces.com//problemset/problem/1482/D", "name": "Playlist", "tags": ["data structures", "dsu", "implementation", "shortest paths"], "problem_rating": "1900", "solved_by": "x3768"},
{"url": "https://codeforces.com//problemset/problem/1482/C", "name": "Basic Diplomacy", "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x9252"},
{"url": "https://codeforces.com//problemset/problem/1482/B", "name": "Restore Modulo", "tags": ["implementation", "math"], "problem_rating": "1500", "solved_by": "x9119"},
{"url": "https://codeforces.com//problemset/problem/1482/A", "name": "Prison Break", "tags": ["math"], "problem_rating": "800", "solved_by": "x20308"},
{"url": "https://codeforces.com//problemset/problem/1481/F", "name": "AB Tree", "tags": ["dp", "greedy", "trees"], "problem_rating": "3100", "solved_by": "x477"},
{"url": "https://codeforces.com//problemset/problem/1481/E", "name": "Sorting Books", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x2034"},
{"url": "https://codeforces.com//problemset/problem/1481/D", "name": "AB Graph", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x4449"},
{"url": "https://codeforces.com//problemset/problem/1481/C", "name": "Fence Painting", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x11452"},
{"url": "https://codeforces.com//problemset/problem/1481/B", "name": "New Colony", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x19121"},
{"url": "https://codeforces.com//problemset/problem/1481/A", "name": "Space Navigation", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x24756"},
{"url": "https://codeforces.com//problemset/problem/1480/B", "name": "The Great Hero", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x17038"},
{"url": "https://codeforces.com//problemset/problem/1480/A", "name": "Yet Another String Game", "tags": ["games", "greedy", "strings"], "problem_rating": "800", "solved_by": "x25688"},
{"url": "https://codeforces.com//problemset/problem/1479/E", "name": "School Clubs", "tags": ["dp", "fft", "math", "number theory", "probabilities"], "problem_rating": "3500", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1479/D", "name": "Odd Mineral Resource", "tags": ["binary search", "bitmasks", "brute force", "data structures", "probabilities", "trees"], "problem_rating": "2900", "solved_by": "x997"},
{"url": "https://codeforces.com//problemset/problem/1479/C", "name": "Continuous City", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "2500", "solved_by": "x1265"},
{"url": "https://codeforces.com//problemset/problem/1479/B2", "name": "Painting the Array II", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x3982"},
{"url": "https://codeforces.com//problemset/problem/1479/B1", "name": "Painting the Array I", "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x6842"},
{"url": "https://codeforces.com//problemset/problem/1479/A", "name": "Searching Local Minimum", "tags": ["binary search", "interactive", "ternary search"], "problem_rating": "1700", "solved_by": "x11312"},
{"url": "https://codeforces.com//problemset/problem/1478/C", "name": "Nezzar and Symmetric Array", "tags": ["implementation", "math", "sortings"], "problem_rating": "1700", "solved_by": "x9604"},
{"url": "https://codeforces.com//problemset/problem/1478/B", "name": "Nezzar and Lucky Number", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "1100", "solved_by": "x18144"},
{"url": "https://codeforces.com//problemset/problem/1478/A", "name": "Nezzar and Colorful Balls", "tags": ["brute force", "greedy"], "problem_rating": "800", "solved_by": "x25942"},
{"url": "https://codeforces.com//problemset/problem/1477/F", "name": "Nezzar and Chocolate Bars", "tags": ["combinatorics", "fft", "math", "probabilities"], "problem_rating": "3500", "solved_by": "x125"},
{"url": "https://codeforces.com//problemset/problem/1477/E", "name": "Nezzar and Tournaments", "tags": ["data structures", "greedy"], "problem_rating": "3300", "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1477/D", "name": "Nezzar and Hidden Permutations", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2800", "solved_by": "x539"},
{"url": "https://codeforces.com//problemset/problem/1477/C", "name": "Nezzar and Nice Beatmap", "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "problem_rating": "2200", "solved_by": "x2232"},
{"url": "https://codeforces.com//problemset/problem/1477/B", "name": "Nezzar and Binary String", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x3115"},
{"url": "https://codeforces.com//problemset/problem/1477/A", "name": "Nezzar and Board", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1800", "solved_by": "x5780"},
{"url": "https://codeforces.com//problemset/problem/1476/G", "name": "Minimum Difference", "tags": ["data structures", "hashing", "sortings", "two pointers"], "problem_rating": "3100", "solved_by": "x559"},
{"url": "https://codeforces.com//problemset/problem/1476/F", "name": "Lanterns", "tags": ["binary search", "data structures", "dp"], "problem_rating": "3000", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1476/E", "name": "Pattern Matching", "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "hashing", "sortings", "strings"], "problem_rating": "2300", "solved_by": "x2285"},
{"url": "https://codeforces.com//problemset/problem/1476/D", "name": "Journey", "tags": ["dfs and similar", "dp", "dsu", "implementation"], "problem_rating": "1700", "solved_by": "x8474"},
{"url": "https://codeforces.com//problemset/problem/1476/C", "name": "Longest Simple Cycle", "tags": ["dp", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x11187"},
{"url": "https://codeforces.com//problemset/problem/1476/B", "name": "Inflation", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "1300", "solved_by": "x19726"},
{"url": "https://codeforces.com//problemset/problem/1476/A", "name": "K-divisible Sum", "tags": ["binary search", "constructive algorithms", "greedy", "math"], "problem_rating": "1000", "solved_by": "x36127"},
{"url": "https://codeforces.com//problemset/problem/1475/G", "name": "Strange Beauty", "tags": ["dp", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x6602"},
{"url": "https://codeforces.com//problemset/problem/1475/F", "name": "Unusual Matrix", "tags": ["2-sat", "brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x5177"},
{"url": "https://codeforces.com//problemset/problem/1475/E", "name": "Advertising Agency", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "1600", "solved_by": "x13286"},
{"url": "https://codeforces.com//problemset/problem/1475/D", "name": "Cleaning the Phone", "tags": ["binary search", "dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x9926"},
{"url": "https://codeforces.com//problemset/problem/1475/C", "name": "Ball in Berland", "tags": ["combinatorics", "graphs", "math"], "problem_rating": "1400", "solved_by": "x20576"},
{"url": "https://codeforces.com//problemset/problem/1475/B", "name": "New Year's Number", "tags": ["brute force", "dp", "math"], "problem_rating": "900", "solved_by": "x47605"},
{"url": "https://codeforces.com//problemset/problem/1475/A", "name": "Odd Divisor", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x57886"},
{"url": "https://codeforces.com//problemset/problem/1474/F", "name": "1 2 3 4 ...", "tags": ["dp", "math", "matrices"], "problem_rating": "3000", "solved_by": "x243"},
{"url": "https://codeforces.com//problemset/problem/1474/E", "name": "What Is It?", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2500", "solved_by": "x1311"},
{"url": "https://codeforces.com//problemset/problem/1474/D", "name": "Cleaning", "tags": ["data structures", "dp", "greedy", "math"], "problem_rating": "2200", "solved_by": "x3919"},
{"url": "https://codeforces.com//problemset/problem/1474/C", "name": "Array Destruction", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "problem_rating": "1700", "solved_by": "x12399"},
{"url": "https://codeforces.com//problemset/problem/1474/B", "name": "Different Divisors", "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1000", "solved_by": "x27538"},
{"url": "https://codeforces.com//problemset/problem/1474/A", "name": "Puzzle From the Future", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x22281"},
{"url": "https://codeforces.com//problemset/problem/1473/G", "name": "Tiles", "tags": ["combinatorics", "dp", "fft", "math"], "problem_rating": "2800", "solved_by": "x385"},
{"url": "https://codeforces.com//problemset/problem/1473/F", "name": "Strange Set", "tags": ["flows", "math"], "problem_rating": "2700", "solved_by": "x932"},
{"url": "https://codeforces.com//problemset/problem/1473/E", "name": "Minimum Path", "tags": ["graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x3435"},
{"url": "https://codeforces.com//problemset/problem/1473/D", "name": "Program", "tags": ["data structures", "dp", "implementation", "strings"], "problem_rating": "1700", "solved_by": "x9453"},
{"url": "https://codeforces.com//problemset/problem/1473/C", "name": "No More Inversions", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x12518"},
{"url": "https://codeforces.com//problemset/problem/1473/B", "name": "String LCM", "tags": ["brute force", "math", "number theory", "strings"], "problem_rating": "1000", "solved_by": "x30684"},
{"url": "https://codeforces.com//problemset/problem/1473/A", "name": "Replacing Elements", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "800", "solved_by": "x33239"},
{"url": "https://codeforces.com//problemset/problem/1472/G", "name": "Moving to the Capital", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4513"},
{"url": "https://codeforces.com//problemset/problem/1472/F", "name": "New Year's Puzzle", "tags": ["brute force", "dp", "graph matchings", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2975"},
{"url": "https://codeforces.com//problemset/problem/1472/E", "name": "Correct Placement", "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7866"},
{"url": "https://codeforces.com//problemset/problem/1472/D", "name": "Even-Odd Game", "tags": ["dp", "games", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x26618"},
{"url": "https://codeforces.com//problemset/problem/1472/C", "name": "Long Jumps", "tags": ["dp", "graphs"], "problem_rating": "1100", "solved_by": "x30633"},
{"url": "https://codeforces.com//problemset/problem/1472/B", "name": "Fair Division", "tags": ["dp", "greedy", "math"], "problem_rating": "800", "solved_by": "x48889"},
{"url": "https://codeforces.com//problemset/problem/1472/A", "name": "Cards for Friends", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x41412"},
{"url": "https://codeforces.com//problemset/problem/1471/B", "name": "Strange List", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x19236"},
{"url": "https://codeforces.com//problemset/problem/1471/A", "name": "Strange Partition", "tags": ["greedy", "math", "number theory"], "problem_rating": "900", "solved_by": "x25347"},
{"url": "https://codeforces.com//problemset/problem/1470/F", "name": "Strange Covering", "tags": ["divide and conquer"], "problem_rating": "3500", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/1470/E", "name": "Strange Permutation", "tags": ["binary search", "combinatorics", "data structures", "dp", "graphs", "implementation", "two pointers"], "problem_rating": "3200", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/1470/D", "name": "Strange Housing", "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy"], "problem_rating": "2200", "solved_by": "x3623"},
{"url": "https://codeforces.com//problemset/problem/1470/C", "name": "Strange Shuffle", "tags": ["binary search", "brute force", "constructive algorithms", "interactive"], "problem_rating": "2500", "solved_by": "x1318"},
{"url": "https://codeforces.com//problemset/problem/1470/B", "name": "Strange Definition", "tags": ["bitmasks", "graphs", "hashing", "math", "number theory"], "problem_rating": "1900", "solved_by": "x6248"},
{"url": "https://codeforces.com//problemset/problem/1470/A", "name": "Strange Birthday Party", "tags": ["binary search", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x21858"},
{"url": "https://codeforces.com//problemset/problem/1469/F", "name": "Power Sockets", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "2600", "solved_by": "x836"},
{"url": "https://codeforces.com//problemset/problem/1469/E", "name": "A Bit Similar", "tags": ["bitmasks", "brute force", "hashing", "string suffix structures", "strings", "two pointers"], "problem_rating": "2400", "solved_by": "x1895"},
{"url": "https://codeforces.com//problemset/problem/1469/D", "name": "Ceil Divisions", "tags": ["brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "1700", "solved_by": "x9286"},
{"url": "https://codeforces.com//problemset/problem/1469/C", "name": "Building a Fence", "tags": ["dp", "greedy", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x10598"},
{"url": "https://codeforces.com//problemset/problem/1469/B", "name": "Red and Blue", "tags": ["dp", "greedy"], "problem_rating": "1000", "solved_by": "x26671"},
{"url": "https://codeforces.com//problemset/problem/1469/A", "name": "Regular Bracket Sequence", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x26966"},
{"url": "https://codeforces.com//problemset/problem/1468/N", "name": "Waste Sorting", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x8037"},
{"url": "https://codeforces.com//problemset/problem/1468/M", "name": "Similar Sets", "tags": ["data structures", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x930"},
{"url": "https://codeforces.com//problemset/problem/1468/L", "name": "Prime Divisors Selection", "tags": ["binary search", "greedy", "math", "number theory"], "problem_rating": "2700", "solved_by": "x318"},
{"url": "https://codeforces.com//problemset/problem/1468/K", "name": "The Robot", "tags": ["brute force", "implementation"], "problem_rating": "1600", "solved_by": "x5017"},
{"url": "https://codeforces.com//problemset/problem/1468/J", "name": "Road Reform", "tags": ["dsu", "graphs", "greedy"], "problem_rating": "1800", "solved_by": "x3991"},
{"url": "https://codeforces.com//problemset/problem/1468/I", "name": "Plane Tiling", "tags": ["geometry", "implementation", "math"], "problem_rating": "2500", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/1468/H", "name": "K and Medians", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2200", "solved_by": "x1723"},
{"url": "https://codeforces.com//problemset/problem/1468/G", "name": "Hobbits", "tags": ["binary search", "geometry"], "problem_rating": "2500", "solved_by": "x805"},
{"url": "https://codeforces.com//problemset/problem/1468/F", "name": "Full Turn", "tags": ["geometry", "hashing", "number theory"], "problem_rating": "1700", "solved_by": "x3652"},
{"url": "https://codeforces.com//problemset/problem/1468/E", "name": "Four Segments", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x8707"},
{"url": "https://codeforces.com//problemset/problem/1468/D", "name": "Firecrackers", "tags": ["binary search", "sortings"], "problem_rating": "1700", "solved_by": "x4550"},
{"url": "https://codeforces.com//problemset/problem/1468/C", "name": "Berpizza", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x7602"},
{"url": "https://codeforces.com//problemset/problem/1468/B", "name": "Bakery", "tags": ["data structures", "dsu"], "problem_rating": "2900", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1468/A", "name": "LaIS", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x1630"},
{"url": "https://codeforces.com//problemset/problem/1467/E", "name": "Distinctive Roots in a Tree", "tags": ["data structures", "dfs and similar", "dp", "trees"], "problem_rating": "2500", "solved_by": "x1360"},
{"url": "https://codeforces.com//problemset/problem/1467/D", "name": "Sum of Paths", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2200", "solved_by": "x3592"},
{"url": "https://codeforces.com//problemset/problem/1467/C", "name": "Three Bags", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x6286"},
{"url": "https://codeforces.com//problemset/problem/1467/B", "name": "Hills And Valleys", "tags": ["brute force", "implementation"], "problem_rating": "1700", "solved_by": "x10806"},
{"url": "https://codeforces.com//problemset/problem/1467/A", "name": "Wizard of Orz", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "900", "solved_by": "x24094"},
{"url": "https://codeforces.com//problemset/problem/1466/I", "name": "The Riddle of the Sphinx", "tags": ["binary search", "data structures", "data structures", "interactive"], "problem_rating": "3400", "solved_by": "x186"},
{"url": "https://codeforces.com//problemset/problem/1466/H", "name": "Finding satisfactory solutions", "tags": ["combinatorics", "dp", "graphs", "greedy", "math"], "problem_rating": "3300", "solved_by": "x270"},
{"url": "https://codeforces.com//problemset/problem/1466/G", "name": "Song of the Sirens", "tags": ["combinatorics", "divide and conquer", "hashing", "math", "string suffix structures", "strings"], "problem_rating": "2600", "solved_by": "x860"},
{"url": "https://codeforces.com//problemset/problem/1466/F", "name": "Euclid's nightmare", "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings"], "problem_rating": "2100", "solved_by": "x2813"},
{"url": "https://codeforces.com//problemset/problem/1466/E", "name": "Apollo versus Pan", "tags": ["bitmasks", "brute force", "math"], "problem_rating": "1800", "solved_by": "x7151"},
{"url": "https://codeforces.com//problemset/problem/1466/D", "name": "13th Labour of Heracles", "tags": ["data structures", "greedy", "sortings", "trees"], "problem_rating": "1500", "solved_by": "x11037"},
{"url": "https://codeforces.com//problemset/problem/1466/C", "name": "Canine poetry", "tags": ["dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x17446"},
{"url": "https://codeforces.com//problemset/problem/1466/B", "name": "Last minute enhancements", "tags": ["dp", "greedy"], "problem_rating": "800", "solved_by": "x22504"},
{"url": "https://codeforces.com//problemset/problem/1466/A", "name": "Bovine Dilemma", "tags": ["brute force", "geometry", "math"], "problem_rating": "800", "solved_by": "x22387"},
{"url": "https://codeforces.com//problemset/problem/1464/F", "name": "My Beautiful Madness", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x298"},
{"url": "https://codeforces.com//problemset/problem/1463/F", "name": "Max Correct Set", "tags": ["bitmasks", "dp", "math"], "problem_rating": "3100", "solved_by": "x564"},
{"url": "https://codeforces.com//problemset/problem/1463/E", "name": "Plan of Lectures", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1478"},
{"url": "https://codeforces.com//problemset/problem/1463/D", "name": "Pairs", "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "problem_rating": "1900", "solved_by": "x4340"},
{"url": "https://codeforces.com//problemset/problem/1463/C", "name": "Busy Robot", "tags": ["implementation"], "problem_rating": "1800", "solved_by": "x5577"},
{"url": "https://codeforces.com//problemset/problem/1463/B", "name": "Find The Array", "tags": ["bitmasks", "constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x19086"},
{"url": "https://codeforces.com//problemset/problem/1463/A", "name": "Dungeon", "tags": ["binary search", "math"], "problem_rating": "1100", "solved_by": "x25106"},
{"url": "https://codeforces.com//problemset/problem/1462/F", "name": "The Treasure of The Segments", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1800", "solved_by": "x6841"},
{"url": "https://codeforces.com//problemset/problem/1462/E2", "name": "Close Tuples (hard version)", "tags": ["binary search", "combinatorics", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x9497"},
{"url": "https://codeforces.com//problemset/problem/1462/E1", "name": "Close Tuples (easy version)", "tags": ["binary search", "combinatorics", "math", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x13508"},
{"url": "https://codeforces.com//problemset/problem/1462/D", "name": "Add to Neighbour and Remove", "tags": ["greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x16527"},
{"url": "https://codeforces.com//problemset/problem/1462/C", "name": "Unique Number", "tags": ["brute force", "greedy", "math"], "problem_rating": "900", "solved_by": "x32007"},
{"url": "https://codeforces.com//problemset/problem/1462/B", "name": "Last Year's Substring", "tags": ["dp", "implementation", "strings"], "problem_rating": "800", "solved_by": "x26897"},
{"url": "https://codeforces.com//problemset/problem/1462/A", "name": "Favorite Sequence", "tags": ["implementation", "two pointers"], "problem_rating": "800", "solved_by": "x40881"},
{"url": "https://codeforces.com//problemset/problem/1461/F", "name": "Mathematical Expression", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "2700", "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1461/E", "name": "Water Level", "tags": ["brute force", "graphs", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x2086"},
{"url": "https://codeforces.com//problemset/problem/1461/D", "name": "Divide and Summarize", "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "sortings"], "problem_rating": "1600", "solved_by": "x9116"},
{"url": "https://codeforces.com//problemset/problem/1461/C", "name": "Random Events", "tags": ["dp", "math", "probabilities"], "problem_rating": "1500", "solved_by": "x11058"},
{"url": "https://codeforces.com//problemset/problem/1461/B", "name": "Find the Spruce", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x12517"},
{"url": "https://codeforces.com//problemset/problem/1461/A", "name": "String Generation", "tags": ["constructive algorithms", "greedy"], "problem_rating": "800", "solved_by": "x18520"},
{"url": "https://codeforces.com//problemset/problem/1459/B", "name": "Move and Turn", "tags": ["dp", "math"], "problem_rating": "1300", "solved_by": "x14354"},
{"url": "https://codeforces.com//problemset/problem/1459/A", "name": "Red-Blue Shuffle", "tags": ["math", "probabilities"], "problem_rating": "800", "solved_by": "x16916"},
{"url": "https://codeforces.com//problemset/problem/1458/F", "name": "Range Diameter Sum", "tags": ["data structures", "trees"], "problem_rating": "3500", "solved_by": "x268"},
{"url": "https://codeforces.com//problemset/problem/1458/E", "name": "Nim Shortcuts", "tags": ["data structures", "games"], "problem_rating": "3100", "solved_by": "x433"},
{"url": "https://codeforces.com//problemset/problem/1458/D", "name": "Flip and Reverse", "tags": ["data structures", "graphs", "greedy"], "problem_rating": "3100", "solved_by": "x1020"},
{"url": "https://codeforces.com//problemset/problem/1458/C", "name": "Latin Square", "tags": ["math", "matrices"], "problem_rating": "2700", "solved_by": "x1257"},
{"url": "https://codeforces.com//problemset/problem/1458/B", "name": "Glass Half Spilled", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x3473"},
{"url": "https://codeforces.com//problemset/problem/1458/A", "name": "Row GCD", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x17012"},
{"url": "https://codeforces.com//problemset/problem/1456/E", "name": "XOR-ranges", "tags": ["dp", "greedy"], "problem_rating": "3500", "solved_by": "x275"},
{"url": "https://codeforces.com//problemset/problem/1455/G", "name": "Forbidden Value", "tags": ["data structures", "dp"], "problem_rating": "2900", "solved_by": "x400"},
{"url": "https://codeforces.com//problemset/problem/1455/F", "name": "String and Operations", "tags": ["dp", "greedy"], "problem_rating": "2800", "solved_by": "x426"},
{"url": "https://codeforces.com//problemset/problem/1455/E", "name": "Four Points", "tags": ["brute force", "constructive algorithms", "flows", "geometry", "greedy", "implementation", "math", "ternary search"], "problem_rating": "2400", "solved_by": "x1497"},
{"url": "https://codeforces.com//problemset/problem/1455/D", "name": "Sequence and Swaps", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x12164"},
{"url": "https://codeforces.com//problemset/problem/1455/C", "name": "Ping-pong", "tags": ["constructive algorithms", "games", "math"], "problem_rating": "1100", "solved_by": "x19453"},
{"url": "https://codeforces.com//problemset/problem/1455/B", "name": "Jumps", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x21587"},
{"url": "https://codeforces.com//problemset/problem/1455/A", "name": "Strange Functions", "tags": ["math", "number theory"], "problem_rating": "800", "solved_by": "x26271"},
{"url": "https://codeforces.com//problemset/problem/1454/F", "name": "Array Partition", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3939"},
{"url": "https://codeforces.com//problemset/problem/1454/E", "name": "Number of Simple Paths", "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "problem_rating": "2000", "solved_by": "x5678"},
{"url": "https://codeforces.com//problemset/problem/1454/D", "name": "Number into Sequence", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1300", "solved_by": "x20065"},
{"url": "https://codeforces.com//problemset/problem/1454/C", "name": "Sequence Transformation", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x21224"},
{"url": "https://codeforces.com//problemset/problem/1454/B", "name": "Unique Bid Auction", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x27822"},
{"url": "https://codeforces.com//problemset/problem/1454/A", "name": "Special Permutation", "tags": ["constructive algorithms", "probabilities"], "problem_rating": "800", "solved_by": "x39922"},
{"url": "https://codeforces.com//problemset/problem/1453/F", "name": "Even Harder", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x822"},
{"url": "https://codeforces.com//problemset/problem/1453/E", "name": "Dog Snacks", "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x1993"},
{"url": "https://codeforces.com//problemset/problem/1453/D", "name": "Checkpoints", "tags": ["brute force", "constructive algorithms", "greedy", "math", "probabilities"], "problem_rating": "1900", "solved_by": "x4116"},
{"url": "https://codeforces.com//problemset/problem/1453/C", "name": "Triangles", "tags": ["greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6006"},
{"url": "https://codeforces.com//problemset/problem/1453/B", "name": "Suffix Operations", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1400", "solved_by": "x13259"},
{"url": "https://codeforces.com//problemset/problem/1453/A", "name": "Cancel the Trains", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x22409"},
{"url": "https://codeforces.com//problemset/problem/1452/G", "name": "Game On Tree", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2700", "solved_by": "x469"},
{"url": "https://codeforces.com//problemset/problem/1452/F", "name": "Divide Powers", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2900", "solved_by": "x308"},
{"url": "https://codeforces.com//problemset/problem/1452/E", "name": "Two Editorials", "tags": ["brute force", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x1544"},
{"url": "https://codeforces.com//problemset/problem/1452/D", "name": "Radio Towers", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1600", "solved_by": "x7873"},
{"url": "https://codeforces.com//problemset/problem/1452/C", "name": "Two Brackets", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x19299"},
{"url": "https://codeforces.com//problemset/problem/1452/B", "name": "Toy Blocks", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x14588"},
{"url": "https://codeforces.com//problemset/problem/1452/A", "name": "Robot Program", "tags": ["math"], "problem_rating": "800", "solved_by": "x21991"},
{"url": "https://codeforces.com//problemset/problem/1451/F", "name": "Nullify The Matrix", "tags": ["constructive algorithms", "games"], "problem_rating": "2700", "solved_by": "x939"},
{"url": "https://codeforces.com//problemset/problem/1451/E2", "name": "Bitwise Queries (Hard Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2300", "solved_by": "x2925"},
{"url": "https://codeforces.com//problemset/problem/1451/E1", "name": "Bitwise Queries (Easy Version)", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2000", "solved_by": "x4303"},
{"url": "https://codeforces.com//problemset/problem/1451/D", "name": "Circle Game", "tags": ["games", "geometry", "math"], "problem_rating": "1700", "solved_by": "x9382"},
{"url": "https://codeforces.com//problemset/problem/1451/C", "name": "String Equality", "tags": ["dp", "greedy", "hashing", "implementation", "strings"], "problem_rating": "1400", "solved_by": "x15354"},
{"url": "https://codeforces.com//problemset/problem/1451/B", "name": "Non-Substring Subsequence", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "900", "solved_by": "x19141"},
{"url": "https://codeforces.com//problemset/problem/1451/A", "name": "Subtract or Divide", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x24044"},
{"url": "https://codeforces.com//problemset/problem/1450/H2", "name": "Multithreading (Hard Version)", "tags": ["combinatorics", "implementation", "math"], "problem_rating": "3300", "solved_by": "x210"},
{"url": "https://codeforces.com//problemset/problem/1450/H1", "name": "Multithreading (Easy Version)", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2900", "solved_by": "x422"},
{"url": "https://codeforces.com//problemset/problem/1450/G", "name": "Communism", "tags": ["bitmasks", "dp", "trees"], "problem_rating": "3500", "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1450/F", "name": "The Struggling Contestant", "tags": ["constructive algorithms", "greedy"], "problem_rating": "2400", "solved_by": "x1325"},
{"url": "https://codeforces.com//problemset/problem/1450/E", "name": "Capitalism", "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "problem_rating": "2700", "solved_by": "x1103"},
{"url": "https://codeforces.com//problemset/problem/1450/D", "name": "Rating Compression", "tags": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "problem_rating": "1800", "solved_by": "x5416"},
{"url": "https://codeforces.com//problemset/problem/1450/C2", "name": "Errich-Tac-Toe (Hard Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "2300", "solved_by": "x3612"},
{"url": "https://codeforces.com//problemset/problem/1450/C1", "name": "Errich-Tac-Toe (Easy Version)", "tags": ["constructive algorithms", "math"], "problem_rating": "2100", "solved_by": "x5413"},
{"url": "https://codeforces.com//problemset/problem/1450/B", "name": "Balls of Steel", "tags": ["brute force", "geometry", "greedy"], "problem_rating": "1000", "solved_by": "x15084"},
{"url": "https://codeforces.com//problemset/problem/1450/A", "name": "Avoid Trygub", "tags": ["constructive algorithms", "sortings"], "problem_rating": "800", "solved_by": "x17652"},
{"url": "https://codeforces.com//problemset/problem/1447/B", "name": "Numbers Box", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x15929"},
{"url": "https://codeforces.com//problemset/problem/1447/A", "name": "Add Candies", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x13743"},
{"url": "https://codeforces.com//problemset/problem/1446/F", "name": "Line Distance", "tags": ["binary search", "data structures", "geometry"], "problem_rating": "3200", "solved_by": "x327"},
{"url": "https://codeforces.com//problemset/problem/1446/E", "name": "Long Recovery", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "3500", "solved_by": "x80"},
{"url": "https://codeforces.com//problemset/problem/1446/D2", "name": "Frequency Problem (Hard Version)", "tags": ["data structures", "greedy", "two pointers"], "problem_rating": "3000", "solved_by": "x1268"},
{"url": "https://codeforces.com//problemset/problem/1446/D1", "name": "Frequency Problem (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "2600", "solved_by": "x1706"},
{"url": "https://codeforces.com//problemset/problem/1446/C", "name": "Xor Tree", "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "problem_rating": "2100", "solved_by": "x3524"},
{"url": "https://codeforces.com//problemset/problem/1446/B", "name": "Catching Cheaters", "tags": ["dp", "strings"], "problem_rating": "1800", "solved_by": "x7734"},
{"url": "https://codeforces.com//problemset/problem/1446/A", "name": "Knapsack", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x15277"},
{"url": "https://codeforces.com//problemset/problem/1445/B", "name": "Elimination", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x15180"},
{"url": "https://codeforces.com//problemset/problem/1445/A", "name": "Array Rearrangment", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x19035"},
{"url": "https://codeforces.com//problemset/problem/1444/E", "name": "Finding the Vertex", "tags": ["brute force", "dfs and similar", "dp", "interactive", "trees"], "problem_rating": "3500", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/1444/D", "name": "Rectangular Polyline", "tags": ["constructive algorithms", "dp", "geometry"], "problem_rating": "2900", "solved_by": "x563"},
{"url": "https://codeforces.com//problemset/problem/1444/C", "name": "Team-Building", "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1559"},
{"url": "https://codeforces.com//problemset/problem/1444/B", "name": "Divide and Sum", "tags": ["combinatorics", "math", "sortings"], "problem_rating": "1900", "solved_by": "x6186"},
{"url": "https://codeforces.com//problemset/problem/1444/A", "name": "Division", "tags": ["brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12842"},
{"url": "https://codeforces.com//problemset/problem/1443/E", "name": "Long Permutation", "tags": ["brute force", "math", "two pointers"], "problem_rating": "2400", "solved_by": "x1234"},
{"url": "https://codeforces.com//problemset/problem/1443/C", "name": "The Delivery Dilemma", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x15100"},
{"url": "https://codeforces.com//problemset/problem/1443/B", "name": "Saving the City", "tags": ["dp", "greedy", "math", "sortings"], "problem_rating": "1300", "solved_by": "x15660"},
{"url": "https://codeforces.com//problemset/problem/1443/A", "name": "Kids Seating", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x16179"},
{"url": "https://codeforces.com//problemset/problem/1442/F", "name": "Differentiating Games", "tags": ["games", "interactive"], "problem_rating": "3400", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1442/E", "name": "Black, White and Grey Tree", "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "3000", "solved_by": "x567"},
{"url": "https://codeforces.com//problemset/problem/1442/D", "name": "Sum", "tags": ["data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2800", "solved_by": "x2104"},
{"url": "https://codeforces.com//problemset/problem/1442/C", "name": "Graph Transpositions", "tags": ["dfs and similar", "graphs", "greedy", "shortest paths"], "problem_rating": "2400", "solved_by": "x1658"},
{"url": "https://codeforces.com//problemset/problem/1442/B", "name": "Identify the Operations", "tags": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4431"},
{"url": "https://codeforces.com//problemset/problem/1442/A", "name": "Extreme Subtraction", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1800", "solved_by": "x8739"},
{"url": "https://codeforces.com//problemset/problem/1440/B", "name": "Sum of Medians", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x18146"},
{"url": "https://codeforces.com//problemset/problem/1440/A", "name": "Buy the String", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x19656"},
{"url": "https://codeforces.com//problemset/problem/1439/E", "name": "Cheat and Win", "tags": ["bitmasks", "data structures", "games", "trees"], "problem_rating": "3500", "solved_by": "x219"},
{"url": "https://codeforces.com//problemset/problem/1439/D", "name": "INOI Final Contests", "tags": ["combinatorics", "dp", "fft"], "problem_rating": "3100", "solved_by": "x354"},
{"url": "https://codeforces.com//problemset/problem/1439/C", "name": "Greedy Shopping", "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation"], "problem_rating": "2600", "solved_by": "x1737"},
{"url": "https://codeforces.com//problemset/problem/1439/B", "name": "Graph Subset Problem", "tags": ["constructive algorithms", "data structures", "graphs"], "problem_rating": "2600", "solved_by": "x1442"},
{"url": "https://codeforces.com//problemset/problem/1439/A2", "name": "Binary Table (Hard Version)", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x5066"},
{"url": "https://codeforces.com//problemset/problem/1439/A1", "name": "Binary Table (Easy Version)", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1500", "solved_by": "x9300"},
{"url": "https://codeforces.com//problemset/problem/1438/F", "name": "Olha and Igor", "tags": ["interactive", "probabilities", "trees"], "problem_rating": "3000", "solved_by": "x625"},
{"url": "https://codeforces.com//problemset/problem/1438/E", "name": "Yurii Can Do Everything", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "problem_rating": "2500", "solved_by": "x1309"},
{"url": "https://codeforces.com//problemset/problem/1438/D", "name": "Powerful Ksenia", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "2200", "solved_by": "x4129"},
{"url": "https://codeforces.com//problemset/problem/1438/C", "name": "Engineer Artem", "tags": ["2-sat", "chinese remainder theorem", "constructive algorithms", "fft", "flows"], "problem_rating": "2000", "solved_by": "x10322"},
{"url": "https://codeforces.com//problemset/problem/1438/B", "name": "Valerii Against Everyone", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x19101"},
{"url": "https://codeforces.com//problemset/problem/1438/A", "name": "Specific Tastes of Andre", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x19195"},
{"url": "https://codeforces.com//problemset/problem/1437/G", "name": "Death DBMS", "tags": ["data structures", "string suffix structures", "strings", "trees"], "problem_rating": "2600", "solved_by": "x966"},
{"url": "https://codeforces.com//problemset/problem/1437/F", "name": "Emotional Fishermen", "tags": ["combinatorics", "dp", "math", "two pointers"], "problem_rating": "2600", "solved_by": "x1189"},
{"url": "https://codeforces.com//problemset/problem/1437/E", "name": "Make It Increasing", "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "problem_rating": "2200", "solved_by": "x3383"},
{"url": "https://codeforces.com//problemset/problem/1437/D", "name": "Minimal Height Tree", "tags": ["graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1600", "solved_by": "x12561"},
{"url": "https://codeforces.com//problemset/problem/1437/C", "name": "Chef Monocarp", "tags": ["dp", "flows", "graph matchings", "greedy", "math", "sortings"], "problem_rating": "1800", "solved_by": "x10323"},
{"url": "https://codeforces.com//problemset/problem/1437/B", "name": "Reverse Binary Strings", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x18982"},
{"url": "https://codeforces.com//problemset/problem/1437/A", "name": "Marketing Scheme", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x17971"},
{"url": "https://codeforces.com//problemset/problem/1436/F", "name": "Sum Over Subsets", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2800", "solved_by": "x513"},
{"url": "https://codeforces.com//problemset/problem/1436/E", "name": "Complicated Computations", "tags": ["binary search", "data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x2212"},
{"url": "https://codeforces.com//problemset/problem/1436/D", "name": "Bandit in a City", "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x5981"},
{"url": "https://codeforces.com//problemset/problem/1436/C", "name": "Binary Search", "tags": ["binary search", "combinatorics"], "problem_rating": "1500", "solved_by": "x10717"},
{"url": "https://codeforces.com//problemset/problem/1436/B", "name": "Prime Square", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x20421"},
{"url": "https://codeforces.com//problemset/problem/1436/A", "name": "Reorder", "tags": ["math"], "problem_rating": "800", "solved_by": "x22589"},
{"url": "https://codeforces.com//problemset/problem/1434/E", "name": "A Convex Game", "tags": ["dsu", "games"], "problem_rating": "3500", "solved_by": "x169"},
{"url": "https://codeforces.com//problemset/problem/1433/G", "name": "Reducing Delivery Cost", "tags": ["brute force", "graphs", "shortest paths"], "problem_rating": "2100", "solved_by": "x4223"},
{"url": "https://codeforces.com//problemset/problem/1433/F", "name": "Zero Remainder Sum", "tags": ["dp"], "problem_rating": "2100", "solved_by": "x5946"},
{"url": "https://codeforces.com//problemset/problem/1433/E", "name": "Two Round Dances", "tags": ["combinatorics", "math"], "problem_rating": "1300", "solved_by": "x18267"},
{"url": "https://codeforces.com//problemset/problem/1433/D", "name": "Districts Connection", "tags": ["constructive algorithms", "dfs and similar"], "problem_rating": "1200", "solved_by": "x22493"},
{"url": "https://codeforces.com//problemset/problem/1433/C", "name": "Dominant Piranha", "tags": ["constructive algorithms", "greedy"], "problem_rating": "900", "solved_by": "x26718"},
{"url": "https://codeforces.com//problemset/problem/1433/B", "name": "Yet Another Bookshelf", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x28235"},
{"url": "https://codeforces.com//problemset/problem/1433/A", "name": "Boring Apartments", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x50897"},
{"url": "https://codeforces.com//problemset/problem/1431/J", "name": "Zero-XOR Array", "tags": ["*special problem", "dp"], "problem_rating": "3400", "solved_by": "x44"},
{"url": "https://codeforces.com//problemset/problem/1431/I", "name": "Cyclic Shifts", "tags": ["*special problem", "strings"], "problem_rating": "2900", "solved_by": "x45"},
{"url": "https://codeforces.com//problemset/problem/1431/H", "name": "Rogue-like Game", "tags": ["*special problem", "brute force", "greedy", "two pointers"], "problem_rating": "2600", "solved_by": "x67"},
{"url": "https://codeforces.com//problemset/problem/1431/G", "name": "Number Deletion Game", "tags": ["*special problem", "dp", "games", "greedy"], "problem_rating": "2100", "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1431/F", "name": "Neural Network Problem", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "2100", "solved_by": "x156"},
{"url": "https://codeforces.com//problemset/problem/1431/E", "name": "Chess Match", "tags": ["*special problem"], "problem_rating": "2000", "solved_by": "x220"},
{"url": "https://codeforces.com//problemset/problem/1431/D", "name": "Used Markers", "tags": ["*special problem", "greedy"], "problem_rating": "1500", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1431/C", "name": "Black Friday", "tags": ["*special problem", "implementation"], "problem_rating": "1600", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1431/B", "name": "Polycarp and the Language of Gods", "tags": ["*special problem", "implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x1006"},
{"url": "https://codeforces.com//problemset/problem/1431/A", "name": "Selling Hamburgers", "tags": ["*special problem"], "problem_rating": "800", "solved_by": "x1822"},
{"url": "https://codeforces.com//problemset/problem/1430/G", "name": "Yet Another DAG Problem", "tags": ["bitmasks", "dfs and similar", "dp", "flows", "graphs", "math"], "problem_rating": "2600", "solved_by": "x638"},
{"url": "https://codeforces.com//problemset/problem/1430/F", "name": "Realistic Gameplay", "tags": ["dp", "greedy"], "problem_rating": "2600", "solved_by": "x879"},
{"url": "https://codeforces.com//problemset/problem/1430/E", "name": "String Reversal", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1900", "solved_by": "x6378"},
{"url": "https://codeforces.com//problemset/problem/1430/D", "name": "String Deletion", "tags": ["binary search", "data structures", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x8737"},
{"url": "https://codeforces.com//problemset/problem/1430/C", "name": "Numbers on Whiteboard", "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x23943"},
{"url": "https://codeforces.com//problemset/problem/1430/B", "name": "Barrels", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "800", "solved_by": "x19301"},
{"url": "https://codeforces.com//problemset/problem/1430/A", "name": "Number of Apartments", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x20763"},
{"url": "https://codeforces.com//problemset/problem/1428/H", "name": "Rotary Laser Lock", "tags": ["binary search", "interactive"], "problem_rating": "3500", "solved_by": "x103"},
{"url": "https://codeforces.com//problemset/problem/1428/G2", "name": "Lucky Numbers (Hard Version)", "tags": ["dp", "greedy"], "problem_rating": "3000", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1428/G1", "name": "Lucky Numbers (Easy Version)", "tags": ["dp", "greedy"], "problem_rating": "2900", "solved_by": "x556"},
{"url": "https://codeforces.com//problemset/problem/1428/F", "name": "Fruit Sequences", "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "problem_rating": "2400", "solved_by": "x2196"},
{"url": "https://codeforces.com//problemset/problem/1428/E", "name": "Carrots for Rabbits", "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "problem_rating": "2200", "solved_by": "x3585"},
{"url": "https://codeforces.com//problemset/problem/1428/D", "name": "Bouncing Boomerangs", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4447"},
{"url": "https://codeforces.com//problemset/problem/1428/C", "name": "ABBB", "tags": ["brute force", "data structures", "greedy", "strings"], "problem_rating": "1100", "solved_by": "x19984"},
{"url": "https://codeforces.com//problemset/problem/1428/B", "name": "Belted Rooms", "tags": ["graphs", "implementation"], "problem_rating": "1200", "solved_by": "x14265"},
{"url": "https://codeforces.com//problemset/problem/1428/A", "name": "Box is Pull", "tags": ["math"], "problem_rating": "800", "solved_by": "x16234"},
{"url": "https://codeforces.com//problemset/problem/1427/H", "name": "Prison Break", "tags": ["binary search", "games", "geometry", "ternary search"], "problem_rating": "3500", "solved_by": "x73"},
{"url": "https://codeforces.com//problemset/problem/1427/G", "name": "One Billion Shades of Grey", "tags": ["flows", "graphs"], "problem_rating": "3300", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/1427/F", "name": "Boring Card Game", "tags": ["data structures", "greedy", "trees"], "problem_rating": "3200", "solved_by": "x311"},
{"url": "https://codeforces.com//problemset/problem/1427/E", "name": "Xum", "tags": ["bitmasks", "constructive algorithms", "math", "matrices", "number theory"], "problem_rating": "2500", "solved_by": "x1357"},
{"url": "https://codeforces.com//problemset/problem/1427/D", "name": "Unshuffling a Deck", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2000", "solved_by": "x3451"},
{"url": "https://codeforces.com//problemset/problem/1427/C", "name": "The Hard Work of Paparazzi", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x5577"},
{"url": "https://codeforces.com//problemset/problem/1427/B", "name": "Chess Cheater", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x10831"},
{"url": "https://codeforces.com//problemset/problem/1427/A", "name": "Avoiding Zero", "tags": ["math", "sortings"], "problem_rating": "900", "solved_by": "x17119"},
{"url": "https://codeforces.com//problemset/problem/1426/F", "name": "Number of Subsequences", "tags": ["combinatorics", "dp", "strings"], "problem_rating": "2000", "solved_by": "x5205"},
{"url": "https://codeforces.com//problemset/problem/1426/E", "name": "Rock, Paper, Scissors", "tags": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "problem_rating": "1800", "solved_by": "x7324"},
{"url": "https://codeforces.com//problemset/problem/1426/D", "name": "Non-zero Segments", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1500", "solved_by": "x15760"},
{"url": "https://codeforces.com//problemset/problem/1426/C", "name": "Increase and Copy", "tags": ["binary search", "constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x19221"},
{"url": "https://codeforces.com//problemset/problem/1426/B", "name": "Symmetric Matrix", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x20527"},
{"url": "https://codeforces.com//problemset/problem/1426/A", "name": "Floor Number", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x46803"},
{"url": "https://codeforces.com//problemset/problem/1425/I", "name": "Impressive Harvesting of The Orchard", "tags": ["data structures"], "problem_rating": "2800", "solved_by": "x233"},
{"url": "https://codeforces.com//problemset/problem/1425/H", "name": "Huge Boxes of Animal Toys", "tags": ["constructive algorithms"], "problem_rating": "1300", "solved_by": "x4115"},
{"url": "https://codeforces.com//problemset/problem/1425/F", "name": "Flamingoes of Mystery", "tags": ["interactive"], "problem_rating": "1400", "solved_by": "x5381"},
{"url": "https://codeforces.com//problemset/problem/1425/E", "name": "Excitation of Atoms", "tags": ["greedy", "implementation"], "problem_rating": "2200", "solved_by": "x912"},
{"url": "https://codeforces.com//problemset/problem/1425/D", "name": "Danger of Mad Snakes", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x819"},
{"url": "https://codeforces.com//problemset/problem/1425/C", "name": "Captain of Knights", "tags": ["math"], "problem_rating": "3100", "solved_by": "x41"},
{"url": "https://codeforces.com//problemset/problem/1425/B", "name": "Blue and Red of Our Faculty!", "tags": ["divide and conquer", "dp"], "problem_rating": "2600", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/1425/A", "name": "Arena of Greed", "tags": ["games", "greedy"], "problem_rating": "1400", "solved_by": "x6437"},
{"url": "https://codeforces.com//problemset/problem/1424/M", "name": "Ancient Language", "tags": ["graphs", "sortings"], "problem_rating": "2200", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/1424/G", "name": "Years", "tags": ["data structures", "sortings"], "problem_rating": "1300", "solved_by": "x5730"},
{"url": "https://codeforces.com//problemset/problem/1423/N", "name": "BubbleSquare Tokens", "tags": [], "problem_rating": "3500", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1423/M", "name": "Milutin's Plums", "tags": ["interactive"], "problem_rating": "2800", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1423/L", "name": "Light switches", "tags": ["meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1423/K", "name": "Lonely Numbers", "tags": ["binary search", "math", "number theory", "two pointers"], "problem_rating": "1600", "solved_by": "x4745"},
{"url": "https://codeforces.com//problemset/problem/1423/J", "name": "Bubble Cup hypothesis", "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "problem_rating": "2400", "solved_by": "x745"},
{"url": "https://codeforces.com//problemset/problem/1423/I", "name": "Lookup Tables", "tags": ["bitmasks"], "problem_rating": "3000", "solved_by": "x105"},
{"url": "https://codeforces.com//problemset/problem/1423/H", "name": "Virus", "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x515"},
{"url": "https://codeforces.com//problemset/problem/1423/G", "name": "Growing flowers", "tags": ["data structures"], "problem_rating": "3500", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/1423/F", "name": "Coins", "tags": ["math"], "problem_rating": "2700", "solved_by": "x366"},
{"url": "https://codeforces.com//problemset/problem/1423/E", "name": "5G Antenna Towers", "tags": ["geometry"], "problem_rating": "2700", "solved_by": "x76"},
{"url": "https://codeforces.com//problemset/problem/1423/D", "name": "Does anyone else hate the wind?", "tags": [], "problem_rating": "3100", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1423/C", "name": "Dušan's Railway", "tags": ["divide and conquer", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x138"},
{"url": "https://codeforces.com//problemset/problem/1423/B", "name": "Valuable Paper", "tags": ["binary search", "flows", "graph matchings", "graphs"], "problem_rating": "1900", "solved_by": "x1789"},
{"url": "https://codeforces.com//problemset/problem/1423/A", "name": "Wakanda Forever", "tags": [], "problem_rating": "3500", "solved_by": "x68"},
{"url": "https://codeforces.com//problemset/problem/1422/F", "name": "Boring Queries", "tags": ["data structures", "math", "number theory"], "problem_rating": "2700", "solved_by": "x994"},
{"url": "https://codeforces.com//problemset/problem/1422/E", "name": "Minlexes", "tags": ["dp", "greedy", "implementation", "strings"], "problem_rating": "2700", "solved_by": "x735"},
{"url": "https://codeforces.com//problemset/problem/1422/D", "name": "Returning Home", "tags": ["graphs", "shortest paths", "sortings"], "problem_rating": "2300", "solved_by": "x2736"},
{"url": "https://codeforces.com//problemset/problem/1422/C", "name": "Bargain", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x8159"},
{"url": "https://codeforces.com//problemset/problem/1422/B", "name": "Nice Matrix", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x14298"},
{"url": "https://codeforces.com//problemset/problem/1422/A", "name": "Fence", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x20804"},
{"url": "https://codeforces.com//problemset/problem/1421/E", "name": "Swedish Heroes", "tags": ["brute force", "dp", "implementation"], "problem_rating": "2700", "solved_by": "x688"},
{"url": "https://codeforces.com//problemset/problem/1421/D", "name": "Hexagons", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "shortest paths"], "problem_rating": "1900", "solved_by": "x4135"},
{"url": "https://codeforces.com//problemset/problem/1421/C", "name": "Palindromifier", "tags": ["constructive algorithms", "strings"], "problem_rating": "1400", "solved_by": "x12682"},
{"url": "https://codeforces.com//problemset/problem/1421/B", "name": "Putting Bricks in the Wall", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1100", "solved_by": "x12996"},
{"url": "https://codeforces.com//problemset/problem/1421/A", "name": "XORwice", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "800", "solved_by": "x28223"},
{"url": "https://codeforces.com//problemset/problem/1420/E", "name": "Battle Lemmings", "tags": ["dp", "greedy"], "problem_rating": "2500", "solved_by": "x865"},
{"url": "https://codeforces.com//problemset/problem/1420/D", "name": "Rescue Nibel!", "tags": ["combinatorics", "data structures", "sortings"], "problem_rating": "1800", "solved_by": "x7485"},
{"url": "https://codeforces.com//problemset/problem/1420/C2", "name": "Pokémon Army (hard version)", "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x4588"},
{"url": "https://codeforces.com//problemset/problem/1420/C1", "name": "Pokémon Army (easy version)", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1300", "solved_by": "x17328"},
{"url": "https://codeforces.com//problemset/problem/1420/B", "name": "Rock and Lever", "tags": ["bitmasks", "math"], "problem_rating": "1200", "solved_by": "x24755"},
{"url": "https://codeforces.com//problemset/problem/1420/A", "name": "Cubes Sorting", "tags": ["math", "sortings"], "problem_rating": "900", "solved_by": "x23109"},
{"url": "https://codeforces.com//problemset/problem/1419/F", "name": "Rain of Fire", "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2800", "solved_by": "x487"},
{"url": "https://codeforces.com//problemset/problem/1419/E", "name": "Decryption", "tags": ["constructive algorithms", "implementation", "math", "number theory"], "problem_rating": "2100", "solved_by": "x3224"},
{"url": "https://codeforces.com//problemset/problem/1419/D2", "name": "Sage's Birthday (hard version)", "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x15127"},
{"url": "https://codeforces.com//problemset/problem/1419/D1", "name": "Sage's Birthday (easy version)", "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24019"},
{"url": "https://codeforces.com//problemset/problem/1419/C", "name": "Killjoy", "tags": ["greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x15187"},
{"url": "https://codeforces.com//problemset/problem/1419/B", "name": "Stairs", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1200", "solved_by": "x16119"},
{"url": "https://codeforces.com//problemset/problem/1419/A", "name": "Digit Game", "tags": ["games", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x19453"},
{"url": "https://codeforces.com//problemset/problem/1418/G", "name": "Three Occurrences", "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "problem_rating": "2500", "solved_by": "x1546"},
{"url": "https://codeforces.com//problemset/problem/1418/F", "name": "Equal Product", "tags": ["data structures", "math", "number theory", "two pointers"], "problem_rating": "3000", "solved_by": "x361"},
{"url": "https://codeforces.com//problemset/problem/1418/E", "name": "Expected Damage", "tags": ["binary search", "combinatorics", "probabilities"], "problem_rating": "2400", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1418/D", "name": "Trash Problem", "tags": ["data structures", "implementation"], "problem_rating": "2100", "solved_by": "x4281"},
{"url": "https://codeforces.com//problemset/problem/1418/C", "name": "Mortal Kombat Tower", "tags": ["dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1500", "solved_by": "x19072"},
{"url": "https://codeforces.com//problemset/problem/1418/B", "name": "Negative Prefixes", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x16519"},
{"url": "https://codeforces.com//problemset/problem/1418/A", "name": "Buying Torches", "tags": ["math"], "problem_rating": "1000", "solved_by": "x22319"},
{"url": "https://codeforces.com//problemset/problem/1417/B", "name": "Two Arrays", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14408"},
{"url": "https://codeforces.com//problemset/problem/1417/A", "name": "Copy-paste", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x18182"},
{"url": "https://codeforces.com//problemset/problem/1416/F", "name": "Showing Off", "tags": ["flows", "graph matchings", "greedy", "implementation"], "problem_rating": "3300", "solved_by": "x444"},
{"url": "https://codeforces.com//problemset/problem/1416/E", "name": "Split", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "3200", "solved_by": "x280"},
{"url": "https://codeforces.com//problemset/problem/1416/D", "name": "Graph and Queries", "tags": ["data structures", "dsu", "graphs", "implementation", "trees"], "problem_rating": "2600", "solved_by": "x1967"},
{"url": "https://codeforces.com//problemset/problem/1416/C", "name": "XOR Inverse", "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "problem_rating": "2000", "solved_by": "x4313"},
{"url": "https://codeforces.com//problemset/problem/1416/B", "name": "Make Them Equal", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x6022"},
{"url": "https://codeforces.com//problemset/problem/1416/A", "name": "k-Amazing Numbers", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x12172"},
{"url": "https://codeforces.com//problemset/problem/1415/F", "name": "Cakes for Clones", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x445"},
{"url": "https://codeforces.com//problemset/problem/1415/E", "name": "New Game Plus!", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2669"},
{"url": "https://codeforces.com//problemset/problem/1415/D", "name": "XOR-gun", "tags": ["bitmasks", "brute force", "constructive algorithms"], "problem_rating": "2000", "solved_by": "x5316"},
{"url": "https://codeforces.com//problemset/problem/1415/C", "name": "Bouncing Ball", "tags": ["brute force", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x10795"},
{"url": "https://codeforces.com//problemset/problem/1415/B", "name": "Repainting Street", "tags": ["brute force", "brute force", "greedy"], "problem_rating": "1100", "solved_by": "x12130"},
{"url": "https://codeforces.com//problemset/problem/1415/A", "name": "Prison Break", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x15070"},
{"url": "https://codeforces.com//problemset/problem/1413/F", "name": "Roads and Ramen", "tags": ["data structures", "trees"], "problem_rating": "2800", "solved_by": "x763"},
{"url": "https://codeforces.com//problemset/problem/1413/E", "name": "Solo mid Oracle", "tags": ["greedy", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x1989"},
{"url": "https://codeforces.com//problemset/problem/1413/D", "name": "Shurikens", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6451"},
{"url": "https://codeforces.com//problemset/problem/1413/C", "name": "Perform Easily", "tags": ["binary search", "brute force", "dp", "implementation", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x5657"},
{"url": "https://codeforces.com//problemset/problem/1413/B", "name": "A New Technique", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x11665"},
{"url": "https://codeforces.com//problemset/problem/1413/A", "name": "Finding Sasuke", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x14643"},
{"url": "https://codeforces.com//problemset/problem/1411/G", "name": "No Game No Life", "tags": ["bitmasks", "games", "math", "matrices"], "problem_rating": "2700", "solved_by": "x626"},
{"url": "https://codeforces.com//problemset/problem/1411/F", "name": "The Thorny Path", "tags": ["greedy", "math"], "problem_rating": "3000", "solved_by": "x355"},
{"url": "https://codeforces.com//problemset/problem/1411/E", "name": "Poman Numbers", "tags": ["bitmasks", "greedy", "math", "strings"], "problem_rating": "2300", "solved_by": "x1601"},
{"url": "https://codeforces.com//problemset/problem/1411/D", "name": "Grime Zoo", "tags": ["brute force", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2472"},
{"url": "https://codeforces.com//problemset/problem/1411/C", "name": "Peaceful Rooks", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x7896"},
{"url": "https://codeforces.com//problemset/problem/1411/B", "name": "Fair Numbers", "tags": ["brute force", "number theory"], "problem_rating": "1000", "solved_by": "x18508"},
{"url": "https://codeforces.com//problemset/problem/1411/A", "name": "In-game Chat", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x20484"},
{"url": "https://codeforces.com//problemset/problem/1409/F", "name": "Subsequences of Length Two", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x4372"},
{"url": "https://codeforces.com//problemset/problem/1409/E", "name": "Two Platforms", "tags": ["binary search", "dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x7723"},
{"url": "https://codeforces.com//problemset/problem/1409/D", "name": "Decrease the Sum of Digits", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x19093"},
{"url": "https://codeforces.com//problemset/problem/1409/C", "name": "Yet Another Array Restoration", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x23045"},
{"url": "https://codeforces.com//problemset/problem/1409/B", "name": "Minimum Product", "tags": ["brute force", "greedy", "math"], "problem_rating": "1100", "solved_by": "x28646"},
{"url": "https://codeforces.com//problemset/problem/1409/A", "name": "Yet Another Two Integers Problem", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x64417"},
{"url": "https://codeforces.com//problemset/problem/1408/I", "name": "Bitwise Magic", "tags": ["dp", "math"], "problem_rating": "3200", "solved_by": "x172"},
{"url": "https://codeforces.com//problemset/problem/1408/H", "name": "Rainbow Triples", "tags": ["binary search", "data structures", "flows", "greedy"], "problem_rating": "3300", "solved_by": "x391"},
{"url": "https://codeforces.com//problemset/problem/1408/G", "name": "Clusterization Counting", "tags": ["combinatorics", "dp", "dsu", "fft", "graphs", "trees"], "problem_rating": "2700", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1408/F", "name": "Two Different", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2300", "solved_by": "x2335"},
{"url": "https://codeforces.com//problemset/problem/1408/E", "name": "Avoid Rainbow Cycles", "tags": ["data structures", "dsu", "graphs", "greedy", "sortings", "trees"], "problem_rating": "2400", "solved_by": "x1953"},
{"url": "https://codeforces.com//problemset/problem/1408/D", "name": "Searchlights", "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x4264"},
{"url": "https://codeforces.com//problemset/problem/1408/C", "name": "Discrete Acceleration", "tags": ["binary search", "dp", "implementation", "math", "two pointers"], "problem_rating": "1500", "solved_by": "x8764"},
{"url": "https://codeforces.com//problemset/problem/1408/B", "name": "Arrays Sum", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1400", "solved_by": "x9880"},
{"url": "https://codeforces.com//problemset/problem/1408/A", "name": "Circle Coloring", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x12467"},
{"url": "https://codeforces.com//problemset/problem/1407/E", "name": "Egor in the Republic of Dagestan", "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "problem_rating": "2500", "solved_by": "x1666"},
{"url": "https://codeforces.com//problemset/problem/1407/D", "name": "Discrete Centrifugal Jumps", "tags": ["data structures", "dp", "graphs"], "problem_rating": "2200", "solved_by": "x4735"},
{"url": "https://codeforces.com//problemset/problem/1407/C", "name": "Chocolate Bunny", "tags": ["constructive algorithms", "interactive", "math", "two pointers"], "problem_rating": "1600", "solved_by": "x11782"},
{"url": "https://codeforces.com//problemset/problem/1407/B", "name": "Big Vova", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x16869"},
{"url": "https://codeforces.com//problemset/problem/1407/A", "name": "Ahahahahahahahaha", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x20278"},
{"url": "https://codeforces.com//problemset/problem/1406/E", "name": "Deleting Numbers", "tags": ["interactive", "math", "number theory"], "problem_rating": "2600", "solved_by": "x1591"},
{"url": "https://codeforces.com//problemset/problem/1406/D", "name": "Three Sequences", "tags": ["constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2200", "solved_by": "x3457"},
{"url": "https://codeforces.com//problemset/problem/1406/C", "name": "Link Cut Centroids", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "1700", "solved_by": "x10058"},
{"url": "https://codeforces.com//problemset/problem/1406/B", "name": "Maximum Product", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1200", "solved_by": "x22411"},
{"url": "https://codeforces.com//problemset/problem/1406/A", "name": "Subset Mex", "tags": ["greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x21169"},
{"url": "https://codeforces.com//problemset/problem/1405/B", "name": "Array Cancellation", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1000", "solved_by": "x21282"},
{"url": "https://codeforces.com//problemset/problem/1405/A", "name": "Permutation Forgery", "tags": ["constructive algorithms"], "problem_rating": "800", "solved_by": "x21369"},
{"url": "https://codeforces.com//problemset/problem/1404/E", "name": "Bricks", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2800", "solved_by": "x1174"},
{"url": "https://codeforces.com//problemset/problem/1404/D", "name": "Game of Pairs", "tags": ["constructive algorithms", "dfs and similar", "interactive", "math", "number theory"], "problem_rating": "2800", "solved_by": "x1046"},
{"url": "https://codeforces.com//problemset/problem/1404/C", "name": "Fixed Point Removal", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "problem_rating": "2300", "solved_by": "x2602"},
{"url": "https://codeforces.com//problemset/problem/1404/B", "name": "Tree Tag", "tags": ["dfs and similar", "dp", "games", "trees"], "problem_rating": "1900", "solved_by": "x7287"},
{"url": "https://codeforces.com//problemset/problem/1404/A", "name": "Balanced Bitstring", "tags": ["implementation", "strings"], "problem_rating": "1500", "solved_by": "x15122"},
{"url": "https://codeforces.com//problemset/problem/1403/C", "name": "Chess Rush", "tags": ["*special problem", "combinatorics", "dp", "implementation", "math"], "problem_rating": "3200", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1403/B", "name": "Spring cleaning", "tags": ["*special problem", "data structures", "dfs and similar", "graphs", "trees"], "problem_rating": "2300", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1403/A", "name": "The Potion of Great Power", "tags": ["*special problem", "2-sat", "binary search", "data structures", "graphs", "interactive", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x290"},
{"url": "https://codeforces.com//problemset/problem/1402/C", "name": "Star Trek", "tags": ["*special problem", "combinatorics", "dfs and similar", "dp", "games", "graphs", "matrices", "trees"], "problem_rating": "2600", "solved_by": "x201"},
{"url": "https://codeforces.com//problemset/problem/1402/B", "name": "Roads", "tags": ["*special problem", "geometry", "sortings"], "problem_rating": "2900", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1402/A", "name": "Fancy Fence", "tags": ["*special problem", "data structures", "dsu", "implementation", "math", "sortings"], "problem_rating": "1800", "solved_by": "x1168"},
{"url": "https://codeforces.com//problemset/problem/1401/F", "name": "Reverse and Swap", "tags": ["binary search", "bitmasks", "data structures"], "problem_rating": "2400", "solved_by": "x1608"},
{"url": "https://codeforces.com//problemset/problem/1401/E", "name": "Divide Square", "tags": ["data structures", "geometry", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x2234"},
{"url": "https://codeforces.com//problemset/problem/1401/D", "name": "Maximum Distributed Tree", "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "problem_rating": "1800", "solved_by": "x9018"},
{"url": "https://codeforces.com//problemset/problem/1401/C", "name": "Mere Array", "tags": ["constructive algorithms", "math", "number theory", "sortings"], "problem_rating": "1300", "solved_by": "x23860"},
{"url": "https://codeforces.com//problemset/problem/1401/B", "name": "Ternary Sequence", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1100", "solved_by": "x20895"},
{"url": "https://codeforces.com//problemset/problem/1401/A", "name": "Distance and Axis", "tags": ["constructive algorithms", "math"], "problem_rating": "900", "solved_by": "x27155"},
{"url": "https://codeforces.com//problemset/problem/1400/G", "name": "Mercenaries", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "dsu", "math", "two pointers"], "problem_rating": "2600", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/1400/F", "name": "x-prime Substrings", "tags": ["brute force", "dfs and similar", "dp", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x806"},
{"url": "https://codeforces.com//problemset/problem/1400/E", "name": "Clear the Multiset", "tags": ["data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x5233"},
{"url": "https://codeforces.com//problemset/problem/1400/D", "name": "Zigzags", "tags": ["brute force", "combinatorics", "data structures", "math", "two pointers"], "problem_rating": "1900", "solved_by": "x10003"},
{"url": "https://codeforces.com//problemset/problem/1400/C", "name": "Binary String Reconstruction", "tags": ["2-sat", "brute force", "constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x17028"},
{"url": "https://codeforces.com//problemset/problem/1400/B", "name": "RPG Protagonist", "tags": ["brute force", "greedy", "math"], "problem_rating": "1700", "solved_by": "x11017"},
{"url": "https://codeforces.com//problemset/problem/1400/A", "name": "String Similarity", "tags": ["constructive algorithms", "strings"], "problem_rating": "800", "solved_by": "x26795"},
{"url": "https://codeforces.com//problemset/problem/1399/F", "name": "Yet Another Segments Subset", "tags": ["data structures", "dp", "graphs", "sortings"], "problem_rating": "2300", "solved_by": "x1587"},
{"url": "https://codeforces.com//problemset/problem/1399/E2", "name": "Weights Division (hard version)", "tags": ["binary search", "dfs and similar", "greedy", "sortings", "trees", "two pointers"], "problem_rating": "2200", "solved_by": "x2240"},
{"url": "https://codeforces.com//problemset/problem/1399/E1", "name": "Weights Division (easy version)", "tags": ["data structures", "dfs and similar", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x5748"},
{"url": "https://codeforces.com//problemset/problem/1399/D", "name": "Binary String To Subsequences", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x17952"},
{"url": "https://codeforces.com//problemset/problem/1399/C", "name": "Boats Competition", "tags": ["brute force", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x28273"},
{"url": "https://codeforces.com//problemset/problem/1399/B", "name": "Gifts Fixing", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x42936"},
{"url": "https://codeforces.com//problemset/problem/1399/A", "name": "Remove Smallest", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x64700"},
{"url": "https://codeforces.com//problemset/problem/1398/G", "name": "Running Competition", "tags": ["bitmasks", "fft", "math", "number theory"], "problem_rating": "2600", "solved_by": "x859"},
{"url": "https://codeforces.com//problemset/problem/1398/F", "name": "Controversial Rounds", "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "problem_rating": "2500", "solved_by": "x1122"},
{"url": "https://codeforces.com//problemset/problem/1398/E", "name": "Two Types of Spells", "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "problem_rating": "2200", "solved_by": "x2246"},
{"url": "https://codeforces.com//problemset/problem/1398/D", "name": "Colored Rectangles", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x11198"},
{"url": "https://codeforces.com//problemset/problem/1398/C", "name": "Good Subarrays", "tags": ["data structures", "dp", "math"], "problem_rating": "1600", "solved_by": "x25223"},
{"url": "https://codeforces.com//problemset/problem/1398/B", "name": "Substring Removal Game", "tags": ["games", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x24295"},
{"url": "https://codeforces.com//problemset/problem/1398/A", "name": "Bad Triangle", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x27254"},
{"url": "https://codeforces.com//problemset/problem/1397/B", "name": "Power Sequence", "tags": ["brute force", "math", "number theory", "sortings"], "problem_rating": "1500", "solved_by": "x14537"},
{"url": "https://codeforces.com//problemset/problem/1397/A", "name": "Juggling Letters", "tags": ["greedy", "strings"], "problem_rating": "800", "solved_by": "x28349"},
{"url": "https://codeforces.com//problemset/problem/1396/E", "name": "Distance Matching", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "3200", "solved_by": "x347"},
{"url": "https://codeforces.com//problemset/problem/1396/D", "name": "Rainbow Rectangles", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "3300", "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1396/C", "name": "Monster Invaders", "tags": ["dp", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x2468"},
{"url": "https://codeforces.com//problemset/problem/1396/B", "name": "Stoned Game", "tags": ["brute force", "constructive algorithms", "games", "greedy"], "problem_rating": "1800", "solved_by": "x11132"},
{"url": "https://codeforces.com//problemset/problem/1396/A", "name": "Multiples of Length", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "1600", "solved_by": "x15201"},
{"url": "https://codeforces.com//problemset/problem/1395/C", "name": "Boboniu and Bit Operations", "tags": ["bitmasks", "brute force", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x13825"},
{"url": "https://codeforces.com//problemset/problem/1395/B", "name": "Boboniu Plays Chess", "tags": ["constructive algorithms"], "problem_rating": "1100", "solved_by": "x15881"},
{"url": "https://codeforces.com//problemset/problem/1395/A", "name": "Boboniu Likes to Color Balls", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x23786"},
{"url": "https://codeforces.com//problemset/problem/1394/E", "name": "Boboniu and Banknote Collection", "tags": ["strings"], "problem_rating": "3500", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1394/D", "name": "Boboniu and Jianghu", "tags": ["dp", "greedy", "sortings", "trees"], "problem_rating": "2800", "solved_by": "x875"},
{"url": "https://codeforces.com//problemset/problem/1394/C", "name": "Boboniu and String", "tags": ["binary search", "geometry", "ternary search"], "problem_rating": "2600", "solved_by": "x960"},
{"url": "https://codeforces.com//problemset/problem/1394/B", "name": "Boboniu Walks on Graph", "tags": ["brute force", "dfs and similar", "graphs", "hashing"], "problem_rating": "2300", "solved_by": "x1851"},
{"url": "https://codeforces.com//problemset/problem/1394/A", "name": "Boboniu Chats with Du", "tags": ["dp", "greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x6578"},
{"url": "https://codeforces.com//problemset/problem/1393/E2", "name": "Twilight and Ancient Scroll (harder version)", "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings", "two pointers"], "problem_rating": "3200", "solved_by": "x359"},
{"url": "https://codeforces.com//problemset/problem/1393/E1", "name": "Twilight and Ancient Scroll (easier version)", "tags": ["dp", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2800", "solved_by": "x381"},
{"url": "https://codeforces.com//problemset/problem/1393/D", "name": "Rarity and New Dress", "tags": ["dfs and similar", "dp", "implementation", "shortest paths"], "problem_rating": "2100", "solved_by": "x3844"},
{"url": "https://codeforces.com//problemset/problem/1393/C", "name": "Pinkie Pie Eats Patty-cakes", "tags": ["constructive algorithms", "greedy", "math", "sortings"], "problem_rating": "1700", "solved_by": "x10388"},
{"url": "https://codeforces.com//problemset/problem/1393/B", "name": "Applejack and Storages", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x16444"},
{"url": "https://codeforces.com//problemset/problem/1393/A", "name": "Rainbow Dash, Fluttershy and Chess Coloring", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20322"},
{"url": "https://codeforces.com//problemset/problem/1392/I", "name": "Kevin and Grid", "tags": ["fft", "graphs", "math"], "problem_rating": "3300", "solved_by": "x204"},
{"url": "https://codeforces.com//problemset/problem/1392/H", "name": "ZS Shuffles Cards", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x694"},
{"url": "https://codeforces.com//problemset/problem/1392/G", "name": "Omkar and Pies", "tags": ["bitmasks", "dfs and similar", "dp", "math", "shortest paths"], "problem_rating": "2900", "solved_by": "x473"},
{"url": "https://codeforces.com//problemset/problem/1392/F", "name": "Omkar and Landslide", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1999"},
{"url": "https://codeforces.com//problemset/problem/1392/E", "name": "Omkar and Duck", "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "problem_rating": "2100", "solved_by": "x3342"},
{"url": "https://codeforces.com//problemset/problem/1392/D", "name": "Omkar and Bed Wars", "tags": ["dp", "greedy"], "problem_rating": "1700", "solved_by": "x8625"},
{"url": "https://codeforces.com//problemset/problem/1392/C", "name": "Omkar and Waterslide", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x18494"},
{"url": "https://codeforces.com//problemset/problem/1392/B", "name": "Omkar and Infinity Clock", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x18440"},
{"url": "https://codeforces.com//problemset/problem/1392/A", "name": "Omkar and Password", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20372"},
{"url": "https://codeforces.com//problemset/problem/1391/E", "name": "Pairs of Pairs", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2600", "solved_by": "x1554"},
{"url": "https://codeforces.com//problemset/problem/1391/D", "name": "505", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x5062"},
{"url": "https://codeforces.com//problemset/problem/1391/C", "name": "Cyclic Permutations", "tags": ["combinatorics", "dp", "graphs", "math"], "problem_rating": "1500", "solved_by": "x14737"},
{"url": "https://codeforces.com//problemset/problem/1391/B", "name": "Fix You", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x26633"},
{"url": "https://codeforces.com//problemset/problem/1391/A", "name": "Suborrays", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x24148"},
{"url": "https://codeforces.com//problemset/problem/1389/G", "name": "Directing Edges", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x390"},
{"url": "https://codeforces.com//problemset/problem/1389/F", "name": "Bicolored Segments", "tags": ["data structures", "dp", "graph matchings", "sortings"], "problem_rating": "2600", "solved_by": "x959"},
{"url": "https://codeforces.com//problemset/problem/1389/E", "name": "Calendar Ambiguity", "tags": ["math", "number theory"], "problem_rating": "2200", "solved_by": "x3206"},
{"url": "https://codeforces.com//problemset/problem/1389/D", "name": "Segment Intersections", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "2100", "solved_by": "x4112"},
{"url": "https://codeforces.com//problemset/problem/1389/C", "name": "Good String", "tags": ["brute force", "dp", "greedy", "two pointers"], "problem_rating": "1500", "solved_by": "x18673"},
{"url": "https://codeforces.com//problemset/problem/1389/B", "name": "Array Walk", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1600", "solved_by": "x16258"},
{"url": "https://codeforces.com//problemset/problem/1389/A", "name": "LCM Problem", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x39921"},
{"url": "https://codeforces.com//problemset/problem/1388/E", "name": "Uncle Bogdan and Projections", "tags": ["data structures", "geometry", "sortings"], "problem_rating": "2700", "solved_by": "x449"},
{"url": "https://codeforces.com//problemset/problem/1388/D", "name": "Captain Flint and Treasure", "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2000", "solved_by": "x6230"},
{"url": "https://codeforces.com//problemset/problem/1388/C", "name": "Uncle Bogdan and Country Happiness", "tags": ["dfs and similar", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x9494"},
{"url": "https://codeforces.com//problemset/problem/1388/B", "name": "Captain Flint and a Long Voyage", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x22068"},
{"url": "https://codeforces.com//problemset/problem/1388/A", "name": "Captain Flint and Crew Recruitment", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x24684"},
{"url": "https://codeforces.com//problemset/problem/1387/C", "name": "Viruses", "tags": ["*special problem", "dp", "shortest paths", "string suffix structures"], "problem_rating": "2900", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1387/B2", "name": "Village (Maximum)", "tags": ["*special problem", "dfs and similar", "trees"], "problem_rating": "2500", "solved_by": "x863"},
{"url": "https://codeforces.com//problemset/problem/1387/B1", "name": "Village (Minimum)", "tags": ["*special problem", "dp", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x1374"},
{"url": "https://codeforces.com//problemset/problem/1387/A", "name": "Graph", "tags": ["*special problem", "binary search", "dfs and similar", "dp", "math", "ternary search"], "problem_rating": "2100", "solved_by": "x692"},
{"url": "https://codeforces.com//problemset/problem/1386/C", "name": "Joker", "tags": ["*special problem", "bitmasks", "data structures", "divide and conquer", "dsu"], "problem_rating": "2800", "solved_by": "x458"},
{"url": "https://codeforces.com//problemset/problem/1386/B", "name": "Mixture", "tags": ["*special problem", "data structures", "geometry", "math", "sortings"], "problem_rating": "2900", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1386/A", "name": "Colors", "tags": ["*special problem", "binary search", "constructive algorithms", "interactive"], "problem_rating": "2700", "solved_by": "x256"},
{"url": "https://codeforces.com//problemset/problem/1385/G", "name": "Columns Swaps", "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "implementation"], "problem_rating": "2300", "solved_by": "x1394"},
{"url": "https://codeforces.com//problemset/problem/1385/F", "name": "Removing Leaves", "tags": ["data structures", "greedy", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x2351"},
{"url": "https://codeforces.com//problemset/problem/1385/E", "name": "Directing Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2000", "solved_by": "x7108"},
{"url": "https://codeforces.com//problemset/problem/1385/D", "name": "a-Good String", "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "implementation"], "problem_rating": "1500", "solved_by": "x18827"},
{"url": "https://codeforces.com//problemset/problem/1385/C", "name": "Make It Good", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x26555"},
{"url": "https://codeforces.com//problemset/problem/1385/B", "name": "Restore the Permutation by Merger", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x36746"},
{"url": "https://codeforces.com//problemset/problem/1385/A", "name": "Three Pairwise Maximums", "tags": ["math"], "problem_rating": "800", "solved_by": "x38375"},
{"url": "https://codeforces.com//problemset/problem/1384/B2", "name": "Koa and the Beach (Hard Version)", "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "problem_rating": "2200", "solved_by": "x2477"},
{"url": "https://codeforces.com//problemset/problem/1384/B1", "name": "Koa and the Beach (Easy Version)", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x3870"},
{"url": "https://codeforces.com//problemset/problem/1384/A", "name": "Common Prefixes", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "1200", "solved_by": "x18534"},
{"url": "https://codeforces.com//problemset/problem/1383/F", "name": "Special Edges", "tags": ["flows", "graphs"], "problem_rating": "3200", "solved_by": "x345"},
{"url": "https://codeforces.com//problemset/problem/1383/E", "name": "Strange Operation", "tags": ["combinatorics", "data structures", "dp"], "problem_rating": "2800", "solved_by": "x765"},
{"url": "https://codeforces.com//problemset/problem/1383/D", "name": "Rearrange", "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "2800", "solved_by": "x673"},
{"url": "https://codeforces.com//problemset/problem/1383/C", "name": "String Transformation 2", "tags": ["bitmasks", "dp", "graphs", "trees"], "problem_rating": "3100", "solved_by": "x566"},
{"url": "https://codeforces.com//problemset/problem/1383/B", "name": "GameGame", "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"], "problem_rating": "1900", "solved_by": "x4858"},
{"url": "https://codeforces.com//problemset/problem/1383/A", "name": "String Transformation 1", "tags": ["dsu", "graphs", "greedy", "sortings", "strings", "trees", "two pointers"], "problem_rating": "1700", "solved_by": "x10371"},
{"url": "https://codeforces.com//problemset/problem/1382/B", "name": "Sequential Nim", "tags": ["dp", "games"], "problem_rating": "1100", "solved_by": "x24272"},
{"url": "https://codeforces.com//problemset/problem/1382/A", "name": "Common Subsequence", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x26252"},
{"url": "https://codeforces.com//problemset/problem/1381/E", "name": "Origami", "tags": ["geometry", "math", "sortings"], "problem_rating": "3300", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/1381/D", "name": "The Majestic Brown Tree Snake", "tags": ["dfs and similar", "dp", "greedy", "trees", "two pointers"], "problem_rating": "3000", "solved_by": "x504"},
{"url": "https://codeforces.com//problemset/problem/1381/C", "name": "Mastermind", "tags": ["constructive algorithms", "graph matchings", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "2500", "solved_by": "x1462"},
{"url": "https://codeforces.com//problemset/problem/1381/B", "name": "Unmerge", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x8653"},
{"url": "https://codeforces.com//problemset/problem/1381/A2", "name": "Prefix Flip (Hard Version)", "tags": ["constructive algorithms", "data structures", "implementation", "strings", "two pointers"], "problem_rating": "1700", "solved_by": "x12960"},
{"url": "https://codeforces.com//problemset/problem/1381/A1", "name": "Prefix Flip (Easy Version)", "tags": ["constructive algorithms", "data structures", "strings"], "problem_rating": "1300", "solved_by": "x20095"},
{"url": "https://codeforces.com//problemset/problem/1380/G", "name": "Circular Dungeon", "tags": ["greedy", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x778"},
{"url": "https://codeforces.com//problemset/problem/1380/F", "name": "Strange Addition", "tags": ["data structures", "dp", "matrices"], "problem_rating": "2600", "solved_by": "x773"},
{"url": "https://codeforces.com//problemset/problem/1380/E", "name": "Merging Towers", "tags": ["data structures", "dsu", "implementation", "trees"], "problem_rating": "2300", "solved_by": "x1991"},
{"url": "https://codeforces.com//problemset/problem/1380/D", "name": "Berserk And Fireball", "tags": ["constructive algorithms", "greedy", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x4659"},
{"url": "https://codeforces.com//problemset/problem/1380/C", "name": "Create The Teams", "tags": ["brute force", "dp", "greedy", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x20284"},
{"url": "https://codeforces.com//problemset/problem/1380/B", "name": "Universal Solution", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x14368"},
{"url": "https://codeforces.com//problemset/problem/1380/A", "name": "Three Indices", "tags": ["brute force", "data structures"], "problem_rating": "900", "solved_by": "x24597"},
{"url": "https://codeforces.com//problemset/problem/1379/F2", "name": "Chess Strikes Back (hard version)", "tags": ["data structures", "divide and conquer"], "problem_rating": "2800", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1379/F1", "name": "Chess Strikes Back (easy version)", "tags": ["binary search", "data structures"], "problem_rating": "2700", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1379/E", "name": "Inverse Genealogy", "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "problem_rating": "2800", "solved_by": "x423"},
{"url": "https://codeforces.com//problemset/problem/1379/D", "name": "New Passenger Trams", "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1064"},
{"url": "https://codeforces.com//problemset/problem/1379/C", "name": "Choosing flowers", "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x5475"},
{"url": "https://codeforces.com//problemset/problem/1379/B", "name": "Dubious Cyrpto", "tags": ["binary search", "brute force", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12568"},
{"url": "https://codeforces.com//problemset/problem/1379/A", "name": "Acacius and String", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x11708"},
{"url": "https://codeforces.com//problemset/problem/1375/I", "name": "Cubic Lattice", "tags": ["geometry", "math", "matrices", "number theory"], "problem_rating": "3500", "solved_by": "x162"},
{"url": "https://codeforces.com//problemset/problem/1375/H", "name": "Set Merging", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "3300", "solved_by": "x414"},
{"url": "https://codeforces.com//problemset/problem/1375/G", "name": "Tree Modification", "tags": ["brute force", "constructive algorithms", "dfs and similar", "graph matchings", "graphs", "trees"], "problem_rating": "2800", "solved_by": "x1769"},
{"url": "https://codeforces.com//problemset/problem/1375/F", "name": "Integer Game", "tags": ["constructive algorithms", "games", "interactive", "math"], "problem_rating": "2600", "solved_by": "x2032"},
{"url": "https://codeforces.com//problemset/problem/1375/E", "name": "Inversion SwapSort", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x2877"},
{"url": "https://codeforces.com//problemset/problem/1375/D", "name": "Replace by MEX", "tags": ["brute force", "constructive algorithms", "sortings"], "problem_rating": "1900", "solved_by": "x8953"},
{"url": "https://codeforces.com//problemset/problem/1375/C", "name": "Element Extermination", "tags": ["constructive algorithms", "data structures", "greedy"], "problem_rating": "1400", "solved_by": "x20776"},
{"url": "https://codeforces.com//problemset/problem/1375/B", "name": "Neighbor Grid", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x17065"},
{"url": "https://codeforces.com//problemset/problem/1375/A", "name": "Sign Flipping", "tags": ["constructive algorithms", "math"], "problem_rating": "1100", "solved_by": "x18170"},
{"url": "https://codeforces.com//problemset/problem/1374/F", "name": "Cyclic Shifts Sorting", "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x1282"},
{"url": "https://codeforces.com//problemset/problem/1374/E2", "name": "Reading Books (hard version)", "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"], "problem_rating": "2500", "solved_by": "x917"},
{"url": "https://codeforces.com//problemset/problem/1374/E1", "name": "Reading Books (easy version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x13767"},
{"url": "https://codeforces.com//problemset/problem/1374/D", "name": "Zero Remainder Array", "tags": ["math", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x23026"},
{"url": "https://codeforces.com//problemset/problem/1374/C", "name": "Move Brackets", "tags": ["greedy", "strings"], "problem_rating": "1000", "solved_by": "x44995"},
{"url": "https://codeforces.com//problemset/problem/1374/B", "name": "Multiply by 2, divide by 6", "tags": ["math"], "problem_rating": "900", "solved_by": "x48129"},
{"url": "https://codeforces.com//problemset/problem/1374/A", "name": "Required Remainder", "tags": ["math"], "problem_rating": "800", "solved_by": "x52341"},
{"url": "https://codeforces.com//problemset/problem/1373/G", "name": "Pawns", "tags": ["data structures", "divide and conquer", "greedy"], "problem_rating": "2600", "solved_by": "x782"},
{"url": "https://codeforces.com//problemset/problem/1373/F", "name": "Network Coverage", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "2400", "solved_by": "x1639"},
{"url": "https://codeforces.com//problemset/problem/1373/E", "name": "Sum of Digits", "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "problem_rating": "2200", "solved_by": "x2716"},
{"url": "https://codeforces.com//problemset/problem/1373/D", "name": "Maximum Sum on Even Positions", "tags": ["divide and conquer", "dp", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x15358"},
{"url": "https://codeforces.com//problemset/problem/1373/C", "name": "Pluses and Minuses", "tags": ["math"], "problem_rating": "1300", "solved_by": "x18162"},
{"url": "https://codeforces.com//problemset/problem/1373/B", "name": "01 Game", "tags": ["games"], "problem_rating": "900", "solved_by": "x34311"},
{"url": "https://codeforces.com//problemset/problem/1373/A", "name": "Donut Shops", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x26482"},
{"url": "https://codeforces.com//problemset/problem/1372/F", "name": "Omkar and Modes", "tags": ["binary search", "divide and conquer", "interactive"], "problem_rating": "2700", "solved_by": "x437"},
{"url": "https://codeforces.com//problemset/problem/1372/E", "name": "Omkar and Last Floor", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2900", "solved_by": "x1023"},
{"url": "https://codeforces.com//problemset/problem/1372/D", "name": "Omkar and Circle", "tags": ["brute force", "dp", "games", "greedy"], "problem_rating": "2100", "solved_by": "x5329"},
{"url": "https://codeforces.com//problemset/problem/1372/C", "name": "Omkar and Baseball", "tags": ["constructive algorithms", "math"], "problem_rating": "1500", "solved_by": "x17647"},
{"url": "https://codeforces.com//problemset/problem/1372/B", "name": "Omkar and Last Class of Math", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x27103"},
{"url": "https://codeforces.com//problemset/problem/1372/A", "name": "Omkar and Completion", "tags": ["constructive algorithms", "implementation"], "problem_rating": "800", "solved_by": "x31745"},
{"url": "https://codeforces.com//problemset/problem/1371/F", "name": "Raging Thunder", "tags": ["data structures", "divide and conquer", "implementation"], "problem_rating": "2800", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1371/E2", "name": "Asterism (Hard Version)", "tags": ["binary search", "combinatorics", "dp", "math", "number theory", "sortings"], "problem_rating": "2300", "solved_by": "x2318"},
{"url": "https://codeforces.com//problemset/problem/1371/E1", "name": "Asterism (Easy Version)", "tags": ["binary search", "brute force", "combinatorics", "math", "number theory", "sortings"], "problem_rating": "1900", "solved_by": "x5091"},
{"url": "https://codeforces.com//problemset/problem/1371/D", "name": "Grid-00100", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x12906"},
{"url": "https://codeforces.com//problemset/problem/1371/C", "name": "A Cookie for You", "tags": ["greedy", "implementation", "math"], "problem_rating": "1300", "solved_by": "x20371"},
{"url": "https://codeforces.com//problemset/problem/1371/B", "name": "Magical Calendar", "tags": ["math"], "problem_rating": "1200", "solved_by": "x19078"},
{"url": "https://codeforces.com//problemset/problem/1371/A", "name": "Magical Sticks", "tags": ["math"], "problem_rating": "800", "solved_by": "x45213"},
{"url": "https://codeforces.com//problemset/problem/1370/F2", "name": "The Hidden Pair (Hard Version)", "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x1417"},
{"url": "https://codeforces.com//problemset/problem/1370/F1", "name": "The Hidden Pair (Easy Version)", "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "problem_rating": "2400", "solved_by": "x1546"},
{"url": "https://codeforces.com//problemset/problem/1370/E", "name": "Binary Subsequence Rotation", "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "problem_rating": "2100", "solved_by": "x4808"},
{"url": "https://codeforces.com//problemset/problem/1370/D", "name": "Odd-Even Subsequence", "tags": ["binary search", "dp", "dsu", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x9446"},
{"url": "https://codeforces.com//problemset/problem/1370/C", "name": "Number Game", "tags": ["games", "math", "number theory"], "problem_rating": "1400", "solved_by": "x24176"},
{"url": "https://codeforces.com//problemset/problem/1370/B", "name": "GCD Compression", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x23473"},
{"url": "https://codeforces.com//problemset/problem/1370/A", "name": "Maximum GCD", "tags": ["greedy", "implementation", "math", "number theory"], "problem_rating": "800", "solved_by": "x50627"},
{"url": "https://codeforces.com//problemset/problem/1369/F", "name": "BareLee", "tags": ["dfs and similar", "dp", "games"], "problem_rating": "2700", "solved_by": "x640"},
{"url": "https://codeforces.com//problemset/problem/1369/E", "name": "DeadLee", "tags": ["data structures", "dfs and similar", "greedy", "implementation", "sortings"], "problem_rating": "2400", "solved_by": "x2088"},
{"url": "https://codeforces.com//problemset/problem/1369/D", "name": "TediousLee", "tags": ["dp", "graphs", "greedy", "math", "trees"], "problem_rating": "1900", "solved_by": "x8471"},
{"url": "https://codeforces.com//problemset/problem/1369/C", "name": "RationalLee", "tags": ["greedy", "math", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x19360"},
{"url": "https://codeforces.com//problemset/problem/1369/B", "name": "AccurateLee", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1200", "solved_by": "x24108"},
{"url": "https://codeforces.com//problemset/problem/1369/A", "name": "FashionabLee", "tags": ["geometry", "math"], "problem_rating": "800", "solved_by": "x36150"},
{"url": "https://codeforces.com//problemset/problem/1368/H2", "name": "Breadboard Capacity (hard version)", "tags": [], "problem_rating": "3500", "solved_by": "x223"},
{"url": "https://codeforces.com//problemset/problem/1368/H1", "name": "Breadboard Capacity (easy version)", "tags": ["dp", "flows", "greedy"], "problem_rating": "3300", "solved_by": "x344"},
{"url": "https://codeforces.com//problemset/problem/1368/G", "name": "Shifting Dominoes", "tags": ["data structures", "geometry", "graphs", "trees"], "problem_rating": "3200", "solved_by": "x576"},
{"url": "https://codeforces.com//problemset/problem/1368/F", "name": "Lamps on a Circle", "tags": ["games", "implementation", "interactive", "math"], "problem_rating": "2600", "solved_by": "x1015"},
{"url": "https://codeforces.com//problemset/problem/1368/E", "name": "Ski Accidents", "tags": ["constructive algorithms", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x2171"},
{"url": "https://codeforces.com//problemset/problem/1368/D", "name": "AND, OR and square sum", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1700", "solved_by": "x11588"},
{"url": "https://codeforces.com//problemset/problem/1368/C", "name": "Even Picture", "tags": ["constructive algorithms"], "problem_rating": "1500", "solved_by": "x13248"},
{"url": "https://codeforces.com//problemset/problem/1368/B", "name": "Codeforces Subsequences", "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "problem_rating": "1500", "solved_by": "x19461"},
{"url": "https://codeforces.com//problemset/problem/1368/A", "name": "C+=", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x38204"},
{"url": "https://codeforces.com//problemset/problem/1367/F2", "name": "Flying Sort (Hard Version)", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "2400", "solved_by": "x1635"},
{"url": "https://codeforces.com//problemset/problem/1367/F1", "name": "Flying Sort (Easy Version)", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2100", "solved_by": "x3206"},
{"url": "https://codeforces.com//problemset/problem/1367/E", "name": "Necklace Assembly", "tags": ["brute force", "dfs and similar", "dp", "graphs", "greedy", "number theory"], "problem_rating": "1900", "solved_by": "x5384"},
{"url": "https://codeforces.com//problemset/problem/1367/D", "name": "Task On The Board", "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x8260"},
{"url": "https://codeforces.com//problemset/problem/1367/C", "name": "Social Distance", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1300", "solved_by": "x23238"},
{"url": "https://codeforces.com//problemset/problem/1367/B", "name": "Even Array", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x52033"},
{"url": "https://codeforces.com//problemset/problem/1367/A", "name": "Short Substrings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x56349"},
{"url": "https://codeforces.com//problemset/problem/1366/G", "name": "Construct the String", "tags": ["data structures", "dp", "strings"], "problem_rating": "2700", "solved_by": "x538"},
{"url": "https://codeforces.com//problemset/problem/1366/F", "name": "Jog Around The Graph", "tags": ["binary search", "dp", "geometry", "graphs"], "problem_rating": "2700", "solved_by": "x793"},
{"url": "https://codeforces.com//problemset/problem/1366/E", "name": "Two Arrays", "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"], "problem_rating": "2100", "solved_by": "x4203"},
{"url": "https://codeforces.com//problemset/problem/1366/D", "name": "Two Divisors", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "2000", "solved_by": "x10310"},
{"url": "https://codeforces.com//problemset/problem/1366/C", "name": "Palindromic Paths", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x13463"},
{"url": "https://codeforces.com//problemset/problem/1366/B", "name": "Shuffle", "tags": ["math", "two pointers"], "problem_rating": "1300", "solved_by": "x20343"},
{"url": "https://codeforces.com//problemset/problem/1366/A", "name": "Shovels and Swords", "tags": ["binary search", "greedy", "math"], "problem_rating": "1100", "solved_by": "x29676"},
{"url": "https://codeforces.com//problemset/problem/1365/G", "name": "Secure Password", "tags": ["bitmasks", "combinatorics", "constructive algorithms", "interactive", "math"], "problem_rating": "2800", "solved_by": "x1127"},
{"url": "https://codeforces.com//problemset/problem/1365/F", "name": "Swaps Again", "tags": ["constructive algorithms", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x4393"},
{"url": "https://codeforces.com//problemset/problem/1365/E", "name": "Maximum Subsequence Value", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x7758"},
{"url": "https://codeforces.com//problemset/problem/1365/D", "name": "Solve The Maze", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"], "problem_rating": "1700", "solved_by": "x16846"},
{"url": "https://codeforces.com//problemset/problem/1365/C", "name": "Rotation Matching", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "1400", "solved_by": "x22837"},
{"url": "https://codeforces.com//problemset/problem/1365/B", "name": "Trouble Sort", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x26552"},
{"url": "https://codeforces.com//problemset/problem/1365/A", "name": "Matrix Game", "tags": ["games", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x23924"},
{"url": "https://codeforces.com//problemset/problem/1364/E", "name": "X-OR", "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"], "problem_rating": "2700", "solved_by": "x1402"},
{"url": "https://codeforces.com//problemset/problem/1364/D", "name": "Ehab's Last Corollary", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "problem_rating": "2100", "solved_by": "x4290"},
{"url": "https://codeforces.com//problemset/problem/1364/C", "name": "Ehab and Prefix MEXs", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1600", "solved_by": "x13008"},
{"url": "https://codeforces.com//problemset/problem/1364/B", "name": "Most socially-distanced subsequence", "tags": ["greedy", "two pointers"], "problem_rating": "1300", "solved_by": "x19343"},
{"url": "https://codeforces.com//problemset/problem/1364/A", "name": "XXXXX", "tags": ["brute force", "data structures", "number theory", "two pointers"], "problem_rating": "1200", "solved_by": "x27586"},
{"url": "https://codeforces.com//problemset/problem/1363/F", "name": "Rotating Substrings", "tags": ["dp", "strings"], "problem_rating": "2600", "solved_by": "x1472"},
{"url": "https://codeforces.com//problemset/problem/1363/E", "name": "Tree Shuffling", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x6737"},
{"url": "https://codeforces.com//problemset/problem/1363/D", "name": "Guess The Maximums", "tags": ["binary search", "implementation", "interactive", "math"], "problem_rating": "2100", "solved_by": "x4041"},
{"url": "https://codeforces.com//problemset/problem/1363/C", "name": "Game On Leaves", "tags": ["games", "trees"], "problem_rating": "1600", "solved_by": "x18368"},
{"url": "https://codeforces.com//problemset/problem/1363/B", "name": "Subsequence Hate", "tags": ["implementation", "strings"], "problem_rating": "1400", "solved_by": "x23342"},
{"url": "https://codeforces.com//problemset/problem/1363/A", "name": "Odd Selection", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x35238"},
{"url": "https://codeforces.com//problemset/problem/1362/C", "name": "Johnny and Another Rating Drop", "tags": ["bitmasks", "greedy", "math"], "problem_rating": "1400", "solved_by": "x17870"},
{"url": "https://codeforces.com//problemset/problem/1362/B", "name": "Johnny and His Hobbies", "tags": ["bitmasks", "brute force"], "problem_rating": "1200", "solved_by": "x18802"},
{"url": "https://codeforces.com//problemset/problem/1362/A", "name": "Johnny and Ancient Computer", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x23368"},
{"url": "https://codeforces.com//problemset/problem/1361/F", "name": "Johnny and New Toy", "tags": ["data structures", "implementation", "math"], "problem_rating": "3300", "solved_by": "x151"},
{"url": "https://codeforces.com//problemset/problem/1361/E", "name": "James and the Chase", "tags": ["dfs and similar", "graphs", "probabilities", "trees"], "problem_rating": "3000", "solved_by": "x666"},
{"url": "https://codeforces.com//problemset/problem/1361/D", "name": "Johnny and James", "tags": ["greedy", "implementation", "math", "trees"], "problem_rating": "2900", "solved_by": "x312"},
{"url": "https://codeforces.com//problemset/problem/1361/C", "name": "Johnny and Megan's Necklace", "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2500", "solved_by": "x1605"},
{"url": "https://codeforces.com//problemset/problem/1361/B", "name": "Johnny and Grandmaster", "tags": ["greedy", "implementation", "math", "sortings"], "problem_rating": "1900", "solved_by": "x3594"},
{"url": "https://codeforces.com//problemset/problem/1361/A", "name": "Johnny and Contribution", "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x8369"},
{"url": "https://codeforces.com//problemset/problem/1360/H", "name": "Binary Median", "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"], "problem_rating": "2100", "solved_by": "x4513"},
{"url": "https://codeforces.com//problemset/problem/1360/G", "name": "A/B Matrix", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x7653"},
{"url": "https://codeforces.com//problemset/problem/1360/F", "name": "Spy-string", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"], "problem_rating": "1700", "solved_by": "x12215"},
{"url": "https://codeforces.com//problemset/problem/1360/E", "name": "Polygon", "tags": ["dp", "graphs", "implementation", "shortest paths"], "problem_rating": "1300", "solved_by": "x24931"},
{"url": "https://codeforces.com//problemset/problem/1360/D", "name": "Buying Shovels", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x32077"},
{"url": "https://codeforces.com//problemset/problem/1360/C", "name": "Similar Pairs", "tags": ["constructive algorithms", "graph matchings", "greedy", "sortings"], "problem_rating": "1100", "solved_by": "x32384"},
{"url": "https://codeforces.com//problemset/problem/1360/B", "name": "Honest Coach", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x47154"},
{"url": "https://codeforces.com//problemset/problem/1360/A", "name": "Minimal Square", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x49447"},
{"url": "https://codeforces.com//problemset/problem/1359/F", "name": "RC Kaboom Show", "tags": ["binary search", "brute force", "data structures", "geometry", "math"], "problem_rating": "2900", "solved_by": "x533"},
{"url": "https://codeforces.com//problemset/problem/1359/E", "name": "Modular Stability", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "2000", "solved_by": "x6023"},
{"url": "https://codeforces.com//problemset/problem/1359/D", "name": "Yet Another Yet Another Task", "tags": ["data structures", "dp", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x9308"},
{"url": "https://codeforces.com//problemset/problem/1359/C", "name": "Mixing Water", "tags": ["binary search", "math"], "problem_rating": "1700", "solved_by": "x13632"},
{"url": "https://codeforces.com//problemset/problem/1359/B", "name": "New Theatre Square", "tags": ["brute force", "dp", "greedy", "implementation", "two pointers"], "problem_rating": "1000", "solved_by": "x27535"},
{"url": "https://codeforces.com//problemset/problem/1359/A", "name": "Berland Poker", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x29305"},
{"url": "https://codeforces.com//problemset/problem/1358/F", "name": "Tasty Cookie", "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "problem_rating": "2700", "solved_by": "x441"},
{"url": "https://codeforces.com//problemset/problem/1358/E", "name": "Are You Fired?", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x2286"},
{"url": "https://codeforces.com//problemset/problem/1358/D", "name": "The Best Vacation", "tags": ["binary search", "brute force", "greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x8090"},
{"url": "https://codeforces.com//problemset/problem/1358/C", "name": "Celex Update", "tags": ["math"], "problem_rating": "1600", "solved_by": "x17209"},
{"url": "https://codeforces.com//problemset/problem/1358/B", "name": "Maria Breaks the Self-isolation", "tags": ["greedy", "sortings"], "problem_rating": "1000", "solved_by": "x24804"},
{"url": "https://codeforces.com//problemset/problem/1358/A", "name": "Park Lighting", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x38806"},
{"url": "https://codeforces.com//problemset/problem/1357/E2", "name": "Root of quantum Fourier transform", "tags": [], "problem_rating": [null], "solved_by": "x50"},
{"url": "https://codeforces.com//problemset/problem/1357/E1", "name": "Power of quantum Fourier transform", "tags": [], "problem_rating": [null], "solved_by": "x192"},
{"url": "https://codeforces.com//problemset/problem/1357/D5", "name": "Quantum Classification - Dataset 7", "tags": [], "problem_rating": [null], "solved_by": "x81"},
{"url": "https://codeforces.com//problemset/problem/1357/D4", "name": "Quantum Classification - Dataset 6", "tags": [], "problem_rating": [null], "solved_by": "x84"},
{"url": "https://codeforces.com//problemset/problem/1357/D3", "name": "Quantum Classification - Dataset 5", "tags": [], "problem_rating": [null], "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1357/D2", "name": "Quantum Classification - Dataset 4", "tags": [], "problem_rating": [null], "solved_by": "x111"},
{"url": "https://codeforces.com//problemset/problem/1357/D1", "name": "Quantum Classification - Dataset 3", "tags": [], "problem_rating": [null], "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1357/C2", "name": "Prepare superposition of basis states with the same parity", "tags": [], "problem_rating": [null], "solved_by": "x302"},
{"url": "https://codeforces.com//problemset/problem/1357/C1", "name": "Prepare superposition of basis states with 0s", "tags": [], "problem_rating": [null], "solved_by": "x347"},
{"url": "https://codeforces.com//problemset/problem/1357/B2", "name": "\"Is the number divisible by 3?\" oracle", "tags": [], "problem_rating": [null], "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/1357/B1", "name": "\"Is the bit string balanced?\" oracle", "tags": [], "problem_rating": [null], "solved_by": "x213"},
{"url": "https://codeforces.com//problemset/problem/1357/A7", "name": "Distinguish Y, XZ, -Y and -XZ", "tags": [], "problem_rating": [null], "solved_by": "x181"},
{"url": "https://codeforces.com//problemset/problem/1357/A6", "name": "Distinguish four Pauli gates", "tags": [], "problem_rating": [null], "solved_by": "x166"},
{"url": "https://codeforces.com//problemset/problem/1357/A5", "name": "Distinguish Rz(θ) from Ry(θ)", "tags": [], "problem_rating": [null], "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1357/A4", "name": "Distinguish Rz from R1", "tags": [], "problem_rating": [null], "solved_by": "x350"},
{"url": "https://codeforces.com//problemset/problem/1357/A3", "name": "Distinguish H from X", "tags": [], "problem_rating": [null], "solved_by": "x477"},
{"url": "https://codeforces.com//problemset/problem/1357/A2", "name": "Distinguish I, CNOTs and SWAP", "tags": [], "problem_rating": [null], "solved_by": "x509"},
{"url": "https://codeforces.com//problemset/problem/1357/A1", "name": "Figure out direction of CNOT", "tags": [], "problem_rating": [null], "solved_by": "x630"},
{"url": "https://codeforces.com//problemset/problem/1356/D2", "name": "Quantum Classification - 2", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x126"},
{"url": "https://codeforces.com//problemset/problem/1356/D1", "name": "Quantum Classification - 1", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x135"},
{"url": "https://codeforces.com//problemset/problem/1356/C", "name": "Prepare state |01⟩ + |10⟩ + |11⟩", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1356/B2", "name": "Decrement", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1356/B1", "name": "Increment", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x281"},
{"url": "https://codeforces.com//problemset/problem/1356/A5", "name": "Distinguish Z from -Z", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x329"},
{"url": "https://codeforces.com//problemset/problem/1356/A4", "name": "Distinguish I ⊗ X from CNOT", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x457"},
{"url": "https://codeforces.com//problemset/problem/1356/A3", "name": "Distinguish Z from S", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x459"},
{"url": "https://codeforces.com//problemset/problem/1356/A2", "name": "Distinguish I from Z", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/1356/A1", "name": "Distinguish I from X", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x601"},
{"url": "https://codeforces.com//problemset/problem/1355/F", "name": "Guess Divisors Count", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2600", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/1355/E", "name": "Restorer Distance", "tags": ["binary search", "greedy", "math", "sortings", "ternary search"], "problem_rating": "2100", "solved_by": "x5019"},
{"url": "https://codeforces.com//problemset/problem/1355/D", "name": "Game With Array", "tags": ["constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x17859"},
{"url": "https://codeforces.com//problemset/problem/1355/C", "name": "Count Triangles", "tags": ["binary search", "implementation", "math", "two pointers"], "problem_rating": "1800", "solved_by": "x10537"},
{"url": "https://codeforces.com//problemset/problem/1355/B", "name": "Young Explorers", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x25342"},
{"url": "https://codeforces.com//problemset/problem/1355/A", "name": "Sequence with Digits", "tags": ["brute force", "implementation", "math"], "problem_rating": "1200", "solved_by": "x26143"},
{"url": "https://codeforces.com//problemset/problem/1354/G", "name": "Find a Gift", "tags": ["binary search", "interactive", "probabilities"], "problem_rating": "2600", "solved_by": "x764"},
{"url": "https://codeforces.com//problemset/problem/1354/F", "name": "Summoning Minions", "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1181"},
{"url": "https://codeforces.com//problemset/problem/1354/E", "name": "Graph Coloring", "tags": ["dfs and similar", "dp", "graphs"], "problem_rating": "2100", "solved_by": "x3282"},
{"url": "https://codeforces.com//problemset/problem/1354/D", "name": "Multiset", "tags": ["binary search", "data structures"], "problem_rating": "1900", "solved_by": "x8609"},
{"url": "https://codeforces.com//problemset/problem/1354/C2", "name": "Not So Simple Polygon Embedding", "tags": ["binary search", "brute force", "geometry", "math"], "problem_rating": "2000", "solved_by": "x6019"},
{"url": "https://codeforces.com//problemset/problem/1354/C1", "name": "Simple Polygon Embedding", "tags": ["binary search", "geometry", "math", "ternary search"], "problem_rating": "1400", "solved_by": "x15583"},
{"url": "https://codeforces.com//problemset/problem/1354/B", "name": "Ternary String", "tags": ["binary search", "dp", "implementation", "two pointers"], "problem_rating": "1200", "solved_by": "x30090"},
{"url": "https://codeforces.com//problemset/problem/1354/A", "name": "Alarm Clock", "tags": ["math"], "problem_rating": "900", "solved_by": "x23638"},
{"url": "https://codeforces.com//problemset/problem/1353/F", "name": "Decreasing Heights", "tags": ["brute force", "dp"], "problem_rating": "2200", "solved_by": "x3274"},
{"url": "https://codeforces.com//problemset/problem/1353/E", "name": "K-periodic Garland", "tags": ["brute force", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x7060"},
{"url": "https://codeforces.com//problemset/problem/1353/D", "name": "Constructing the Array", "tags": ["constructive algorithms", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x17836"},
{"url": "https://codeforces.com//problemset/problem/1353/C", "name": "Board Moves", "tags": ["math"], "problem_rating": "1000", "solved_by": "x34919"},
{"url": "https://codeforces.com//problemset/problem/1353/B", "name": "Two Arrays And Swaps", "tags": ["greedy", "sortings"], "problem_rating": "800", "solved_by": "x48634"},
{"url": "https://codeforces.com//problemset/problem/1353/A", "name": "Most Unstable Array", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "800", "solved_by": "x40056"},
{"url": "https://codeforces.com//problemset/problem/1352/G", "name": "Special Permutation", "tags": ["constructive algorithms"], "problem_rating": "1600", "solved_by": "x20684"},
{"url": "https://codeforces.com//problemset/problem/1352/F", "name": "Binary String Reconstruction", "tags": ["constructive algorithms", "dfs and similar", "math"], "problem_rating": "1500", "solved_by": "x16800"},
{"url": "https://codeforces.com//problemset/problem/1352/E", "name": "Special Elements", "tags": ["brute force", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x20060"},
{"url": "https://codeforces.com//problemset/problem/1352/D", "name": "Alice, Bob and Candies", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x25606"},
{"url": "https://codeforces.com//problemset/problem/1352/C", "name": "K-th Not Divisible by n", "tags": ["binary search", "math"], "problem_rating": "1200", "solved_by": "x52424"},
{"url": "https://codeforces.com//problemset/problem/1352/B", "name": "Same Parity Summands", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x36619"},
{"url": "https://codeforces.com//problemset/problem/1352/A", "name": "Sum of Round Numbers", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x75782"},
{"url": "https://codeforces.com//problemset/problem/1351/C", "name": "Skier", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x8478"},
{"url": "https://codeforces.com//problemset/problem/1351/B", "name": "Square?", "tags": ["brute force", "implementation", "math"], "problem_rating": "900", "solved_by": "x16802"},
{"url": "https://codeforces.com//problemset/problem/1351/A", "name": "A+B (Trial Problem)", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x23369"},
{"url": "https://codeforces.com//problemset/problem/1350/B", "name": "Orac and Models", "tags": ["dp", "math", "number theory"], "problem_rating": "1400", "solved_by": "x21446"},
{"url": "https://codeforces.com//problemset/problem/1350/A", "name": "Orac and Factors", "tags": ["math"], "problem_rating": "900", "solved_by": "x25951"},
{"url": "https://codeforces.com//problemset/problem/1349/F2", "name": "Slime and Sequences (Hard Version)", "tags": ["dp", "fft", "math"], "problem_rating": "3500", "solved_by": "x109"},
{"url": "https://codeforces.com//problemset/problem/1349/F1", "name": "Slime and Sequences (Easy Version)", "tags": ["dp", "fft", "math"], "problem_rating": "3100", "solved_by": "x405"},
{"url": "https://codeforces.com//problemset/problem/1349/E", "name": "Slime and Hats", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x88"},
{"url": "https://codeforces.com//problemset/problem/1349/D", "name": "Slime and Biscuits", "tags": ["math", "probabilities"], "problem_rating": "3200", "solved_by": "x881"},
{"url": "https://codeforces.com//problemset/problem/1349/C", "name": "Orac and Game of Life", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "2000", "solved_by": "x4457"},
{"url": "https://codeforces.com//problemset/problem/1349/B", "name": "Orac and Medians", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2000", "solved_by": "x8033"},
{"url": "https://codeforces.com//problemset/problem/1349/A", "name": "Orac and LCM", "tags": ["data structures", "math", "number theory"], "problem_rating": "1600", "solved_by": "x16621"},
{"url": "https://codeforces.com//problemset/problem/1348/F", "name": "Phoenix and Memory", "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "problem_rating": "2600", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1348/E", "name": "Phoenix and Berries", "tags": ["brute force", "dp", "greedy", "math"], "problem_rating": "2400", "solved_by": "x2171"},
{"url": "https://codeforces.com//problemset/problem/1348/D", "name": "Phoenix and Science", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x8767"},
{"url": "https://codeforces.com//problemset/problem/1348/C", "name": "Phoenix and Distribution", "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "problem_rating": "1600", "solved_by": "x14506"},
{"url": "https://codeforces.com//problemset/problem/1348/B", "name": "Phoenix and Beauty", "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x25042"},
{"url": "https://codeforces.com//problemset/problem/1348/A", "name": "Phoenix and Balance", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x39119"},
{"url": "https://codeforces.com//problemset/problem/1346/I", "name": "Pac-Man 2.0", "tags": ["*special problem", "dp"], "problem_rating": "2900", "solved_by": "x48"},
{"url": "https://codeforces.com//problemset/problem/1346/H", "name": "Game with Segments", "tags": ["*special problem", "data structures", "games"], "problem_rating": "2700", "solved_by": "x49"},
{"url": "https://codeforces.com//problemset/problem/1346/G", "name": "Two IP Cameras", "tags": ["*special problem", "math", "number theory"], "problem_rating": "2300", "solved_by": "x134"},
{"url": "https://codeforces.com//problemset/problem/1346/F", "name": "Dune II: Battle For Arrakis", "tags": ["*special problem", "data structures", "greedy", "math"], "problem_rating": "2000", "solved_by": "x223"},
{"url": "https://codeforces.com//problemset/problem/1346/E", "name": "Magic Tricks", "tags": ["*special problem", "dp", "graphs"], "problem_rating": "1700", "solved_by": "x375"},
{"url": "https://codeforces.com//problemset/problem/1346/D", "name": "Constructing the Dungeon", "tags": ["*special problem", "graphs", "greedy"], "problem_rating": "1600", "solved_by": "x486"},
{"url": "https://codeforces.com//problemset/problem/1346/C", "name": "Spring Cleaning", "tags": ["*special problem", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x589"},
{"url": "https://codeforces.com//problemset/problem/1346/B", "name": "Boot Camp", "tags": ["*special problem", "greedy"], "problem_rating": "1400", "solved_by": "x1188"},
{"url": "https://codeforces.com//problemset/problem/1346/A", "name": "Color Revolution", "tags": ["*special problem", "math"], "problem_rating": "1000", "solved_by": "x1966"},
{"url": "https://codeforces.com//problemset/problem/1345/B", "name": "Card Constructions", "tags": ["binary search", "brute force", "dp", "math"], "problem_rating": "1100", "solved_by": "x26073"},
{"url": "https://codeforces.com//problemset/problem/1345/A", "name": "Puzzle Pieces", "tags": ["math"], "problem_rating": "800", "solved_by": "x24085"},
{"url": "https://codeforces.com//problemset/problem/1344/F", "name": "Piet's Palette", "tags": ["matrices"], "problem_rating": "3200", "solved_by": "x447"},
{"url": "https://codeforces.com//problemset/problem/1344/E", "name": "Train Tracks", "tags": ["data structures", "trees"], "problem_rating": "3100", "solved_by": "x456"},
{"url": "https://codeforces.com//problemset/problem/1344/D", "name": "Résumé Review", "tags": ["binary search", "greedy", "math"], "problem_rating": "2700", "solved_by": "x1144"},
{"url": "https://codeforces.com//problemset/problem/1344/C", "name": "Quantifier Question", "tags": ["dfs and similar", "dp", "graphs", "math"], "problem_rating": "2600", "solved_by": "x1839"},
{"url": "https://codeforces.com//problemset/problem/1344/B", "name": "Monopole Magnets", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs"], "problem_rating": "2000", "solved_by": "x6016"},
{"url": "https://codeforces.com//problemset/problem/1344/A", "name": "Hilbert's Hotel", "tags": ["math", "number theory", "sortings"], "problem_rating": "1600", "solved_by": "x15535"},
{"url": "https://codeforces.com//problemset/problem/1343/F", "name": "Restore the Permutation by Sorted Segments", "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x1247"},
{"url": "https://codeforces.com//problemset/problem/1343/E", "name": "Weights Distributing", "tags": ["brute force", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "2100", "solved_by": "x5058"},
{"url": "https://codeforces.com//problemset/problem/1343/D", "name": "Constant Palindrome Sum", "tags": ["brute force", "data structures", "greedy", "two pointers"], "problem_rating": "1700", "solved_by": "x12517"},
{"url": "https://codeforces.com//problemset/problem/1343/C", "name": "Alternating Subsequence", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "1200", "solved_by": "x37577"},
{"url": "https://codeforces.com//problemset/problem/1343/B", "name": "Balanced Array", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x55349"},
{"url": "https://codeforces.com//problemset/problem/1343/A", "name": "Candies", "tags": ["brute force", "math"], "problem_rating": "900", "solved_by": "x47217"},
{"url": "https://codeforces.com//problemset/problem/1342/F", "name": "Make It Ascending", "tags": ["bitmasks", "brute force", "dp"], "problem_rating": "3000", "solved_by": "x701"},
{"url": "https://codeforces.com//problemset/problem/1342/E", "name": "Placing Rooks", "tags": ["combinatorics", "fft", "math"], "problem_rating": "2300", "solved_by": "x3032"},
{"url": "https://codeforces.com//problemset/problem/1342/D", "name": "Multiple Testcases", "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "problem_rating": "1900", "solved_by": "x6055"},
{"url": "https://codeforces.com//problemset/problem/1342/C", "name": "Yet Another Counting Problem", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x13928"},
{"url": "https://codeforces.com//problemset/problem/1342/B", "name": "Binary Period", "tags": ["constructive algorithms", "strings"], "problem_rating": "1100", "solved_by": "x23558"},
{"url": "https://codeforces.com//problemset/problem/1342/A", "name": "Road To Zero", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x39511"},
{"url": "https://codeforces.com//problemset/problem/1341/B", "name": "Nastya and Door", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x19405"},
{"url": "https://codeforces.com//problemset/problem/1341/A", "name": "Nastya and Rice", "tags": ["math"], "problem_rating": "900", "solved_by": "x28799"},
{"url": "https://codeforces.com//problemset/problem/1340/F", "name": "Nastya and CBS", "tags": ["brute force", "data structures", "hashing"], "problem_rating": "3300", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1340/E", "name": "Nastya and Bees", "tags": ["graphs", "interactive", "probabilities"], "problem_rating": "3000", "solved_by": "x53"},
{"url": "https://codeforces.com//problemset/problem/1340/D", "name": "Nastya and Time Machine", "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x982"},
{"url": "https://codeforces.com//problemset/problem/1340/C", "name": "Nastya and Unexpected Guest", "tags": ["dfs and similar", "dp", "graphs", "shortest paths"], "problem_rating": "2400", "solved_by": "x2208"},
{"url": "https://codeforces.com//problemset/problem/1340/B", "name": "Nastya and Scoreboard", "tags": ["bitmasks", "dp", "graphs", "greedy"], "problem_rating": "1700", "solved_by": "x7807"},
{"url": "https://codeforces.com//problemset/problem/1340/A", "name": "Nastya and Strange Generator", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x13377"},
{"url": "https://codeforces.com//problemset/problem/1339/B", "name": "Sorted Adjacent Differences", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1200", "solved_by": "x26040"},
{"url": "https://codeforces.com//problemset/problem/1339/A", "name": "Filling Diamonds", "tags": ["brute force", "dp", "implementation", "math"], "problem_rating": "900", "solved_by": "x31620"},
{"url": "https://codeforces.com//problemset/problem/1338/E", "name": "JYPnation", "tags": ["graphs"], "problem_rating": "3500", "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1338/D", "name": "Nested Rubber Bands", "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2700", "solved_by": "x995"},
{"url": "https://codeforces.com//problemset/problem/1338/C", "name": "Perfect Triples", "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "problem_rating": "2200", "solved_by": "x3164"},
{"url": "https://codeforces.com//problemset/problem/1338/B", "name": "Edge Weight Assignment", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "problem_rating": "1800", "solved_by": "x8363"},
{"url": "https://codeforces.com//problemset/problem/1338/A", "name": "Powered Addition", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x23426"},
{"url": "https://codeforces.com//problemset/problem/1337/B", "name": "Kana and Dragon Quest game", "tags": ["greedy", "implementation", "math"], "problem_rating": "900", "solved_by": "x33776"},
{"url": "https://codeforces.com//problemset/problem/1337/A", "name": "Ichihime and Triangle", "tags": ["constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x37312"},
{"url": "https://codeforces.com//problemset/problem/1336/F", "name": "Journey", "tags": ["data structures", "divide and conquer", "graphs", "trees"], "problem_rating": "3500", "solved_by": "x202"},
{"url": "https://codeforces.com//problemset/problem/1336/E2", "name": "Chiori and Doll Picking (hard version)", "tags": ["bitmasks", "brute force", "combinatorics", "math"], "problem_rating": "3500", "solved_by": "x297"},
{"url": "https://codeforces.com//problemset/problem/1336/E1", "name": "Chiori and Doll Picking (easy version)", "tags": ["bitmasks", "brute force", "combinatorics", "math"], "problem_rating": "2700", "solved_by": "x658"},
{"url": "https://codeforces.com//problemset/problem/1336/D", "name": "Yui and Mahjong Set", "tags": ["constructive algorithms", "interactive"], "problem_rating": "3200", "solved_by": "x470"},
{"url": "https://codeforces.com//problemset/problem/1336/C", "name": "Kaavi and Magic Spell", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x3532"},
{"url": "https://codeforces.com//problemset/problem/1336/B", "name": "Xenia and Colorful Gems", "tags": ["binary search", "greedy", "math", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x11264"},
{"url": "https://codeforces.com//problemset/problem/1336/A", "name": "Linova and Kingdom", "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "problem_rating": "1600", "solved_by": "x19984"},
{"url": "https://codeforces.com//problemset/problem/1335/F", "name": "Robots on a Grid", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"], "problem_rating": "2200", "solved_by": "x2165"},
{"url": "https://codeforces.com//problemset/problem/1335/E2", "name": "Three Blocks Palindrome (hard version)", "tags": ["brute force", "data structures", "dp", "two pointers"], "problem_rating": "1800", "solved_by": "x8249"},
{"url": "https://codeforces.com//problemset/problem/1335/E1", "name": "Three Blocks Palindrome (easy version)", "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "problem_rating": "1700", "solved_by": "x10740"},
{"url": "https://codeforces.com//problemset/problem/1335/D", "name": "Anti-Sudoku", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1300", "solved_by": "x27130"},
{"url": "https://codeforces.com//problemset/problem/1335/C", "name": "Two Teams Composing", "tags": ["binary search", "greedy", "implementation", "sortings"], "problem_rating": "1100", "solved_by": "x34069"},
{"url": "https://codeforces.com//problemset/problem/1335/B", "name": "Construct the String", "tags": ["constructive algorithms"], "problem_rating": "900", "solved_by": "x37854"},
{"url": "https://codeforces.com//problemset/problem/1335/A", "name": "Candies and Two Sisters", "tags": ["math"], "problem_rating": "800", "solved_by": "x81543"},
{"url": "https://codeforces.com//problemset/problem/1334/G", "name": "Substring Search", "tags": ["bitmasks", "brute force", "fft"], "problem_rating": "2900", "solved_by": "x357"},
{"url": "https://codeforces.com//problemset/problem/1334/F", "name": "Strange Function", "tags": ["binary search", "data structures", "dp", "greedy"], "problem_rating": "2500", "solved_by": "x1283"},
{"url": "https://codeforces.com//problemset/problem/1334/E", "name": "Divisor Paths", "tags": ["combinatorics", "graphs", "greedy", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2797"},
{"url": "https://codeforces.com//problemset/problem/1334/D", "name": "Minimum Euler Cycle", "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x7235"},
{"url": "https://codeforces.com//problemset/problem/1334/C", "name": "Circle of Monsters", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1600", "solved_by": "x16440"},
{"url": "https://codeforces.com//problemset/problem/1334/B", "name": "Middle Class", "tags": ["greedy", "sortings"], "problem_rating": "1100", "solved_by": "x25634"},
{"url": "https://codeforces.com//problemset/problem/1334/A", "name": "Level Statistics", "tags": ["implementation", "math"], "problem_rating": "1200", "solved_by": "x23057"},
{"url": "https://codeforces.com//problemset/problem/1333/F", "name": "Kate and imperfection", "tags": ["greedy", "implementation", "math", "number theory", "sortings", "two pointers"], "problem_rating": "2200", "solved_by": "x4208"},
{"url": "https://codeforces.com//problemset/problem/1333/E", "name": "Road to 1600", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2400", "solved_by": "x1677"},
{"url": "https://codeforces.com//problemset/problem/1333/D", "name": "Challenges in school №41", "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x3904"},
{"url": "https://codeforces.com//problemset/problem/1333/C", "name": "Eugene and an array", "tags": ["binary search", "data structures", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x12480"},
{"url": "https://codeforces.com//problemset/problem/1333/B", "name": "Kind Anton", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x21523"},
{"url": "https://codeforces.com//problemset/problem/1333/A", "name": "Little Artem", "tags": ["constructive algorithms"], "problem_rating": "1000", "solved_by": "x24479"},
{"url": "https://codeforces.com//problemset/problem/1332/G", "name": "No Monotone Triples", "tags": ["data structures"], "problem_rating": "3100", "solved_by": "x294"},
{"url": "https://codeforces.com//problemset/problem/1332/F", "name": "Independent Set", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2500", "solved_by": "x987"},
{"url": "https://codeforces.com//problemset/problem/1332/E", "name": "Height All the Same", "tags": ["combinatorics", "constructive algorithms", "math", "matrices"], "problem_rating": "2100", "solved_by": "x3786"},
{"url": "https://codeforces.com//problemset/problem/1332/D", "name": "Walk on Matrix", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1700", "solved_by": "x8111"},
{"url": "https://codeforces.com//problemset/problem/1332/C", "name": "K-Complete Word", "tags": ["dfs and similar", "dsu", "greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x16235"},
{"url": "https://codeforces.com//problemset/problem/1332/B", "name": "Composite Coloring", "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x17458"},
{"url": "https://codeforces.com//problemset/problem/1332/A", "name": "Exercising Walk", "tags": ["greedy", "implementation", "math"], "problem_rating": "1100", "solved_by": "x19347"},
{"url": "https://codeforces.com//problemset/problem/1331/H", "name": "It's showtime", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x621"},
{"url": "https://codeforces.com//problemset/problem/1331/G", "name": "Lingua Romana", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1331/F", "name": "Elementary!", "tags": ["*special problem", "brute force", "dp", "strings"], "problem_rating": [null], "solved_by": "x561"},
{"url": "https://codeforces.com//problemset/problem/1331/E", "name": "Jordan Smiley", "tags": ["*special problem", "dfs and similar", "geometry", "implementation"], "problem_rating": [null], "solved_by": "x1207"},
{"url": "https://codeforces.com//problemset/problem/1331/D", "name": "Again?", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x11872"},
{"url": "https://codeforces.com//problemset/problem/1331/C", "name": "...And after happily lived ever they", "tags": ["*special problem", "bitmasks"], "problem_rating": [null], "solved_by": "x3145"},
{"url": "https://codeforces.com//problemset/problem/1331/B", "name": "Limericks", "tags": ["*special problem", "math", "number theory"], "problem_rating": [null], "solved_by": "x6993"},
{"url": "https://codeforces.com//problemset/problem/1331/A", "name": "Is it rated?", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x17058"},
{"url": "https://codeforces.com//problemset/problem/1330/B", "name": "Dreamoon Likes Permutations", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x13962"},
{"url": "https://codeforces.com//problemset/problem/1330/A", "name": "Dreamoon and Ranking Collection", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x18616"},
{"url": "https://codeforces.com//problemset/problem/1329/E", "name": "Dreamoon Loves AA", "tags": ["binary search", "greedy"], "problem_rating": "3300", "solved_by": "x178"},
{"url": "https://codeforces.com//problemset/problem/1329/D", "name": "Dreamoon Likes Strings", "tags": ["constructive algorithms", "data structures"], "problem_rating": "3100", "solved_by": "x392"},
{"url": "https://codeforces.com//problemset/problem/1329/C", "name": "Drazil Likes Heap", "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x1698"},
{"url": "https://codeforces.com//problemset/problem/1329/B", "name": "Dreamoon Likes Sequences", "tags": ["bitmasks", "combinatorics", "math"], "problem_rating": "1700", "solved_by": "x6599"},
{"url": "https://codeforces.com//problemset/problem/1329/A", "name": "Dreamoon Likes Coloring", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x9023"},
{"url": "https://codeforces.com//problemset/problem/1328/F", "name": "Make k Equal", "tags": ["greedy"], "problem_rating": "2200", "solved_by": "x3199"},
{"url": "https://codeforces.com//problemset/problem/1328/E", "name": "Tree Queries", "tags": ["dfs and similar", "graphs", "trees"], "problem_rating": "1900", "solved_by": "x9277"},
{"url": "https://codeforces.com//problemset/problem/1328/D", "name": "Carousel", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "problem_rating": "1800", "solved_by": "x12970"},
{"url": "https://codeforces.com//problemset/problem/1328/C", "name": "Ternary XOR", "tags": ["greedy", "implementation"], "problem_rating": "1200", "solved_by": "x30005"},
{"url": "https://codeforces.com//problemset/problem/1328/B", "name": "K-th Beautiful String", "tags": ["binary search", "brute force", "combinatorics", "implementation", "math"], "problem_rating": "1300", "solved_by": "x28736"},
{"url": "https://codeforces.com//problemset/problem/1328/A", "name": "Divisibility Problem", "tags": ["math"], "problem_rating": "800", "solved_by": "x97310"},
{"url": "https://codeforces.com//problemset/problem/1327/G", "name": "Letters and Question Marks", "tags": ["bitmasks", "dp", "string suffix structures"], "problem_rating": "2800", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1327/F", "name": "AND Segments", "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"], "problem_rating": "2500", "solved_by": "x1626"},
{"url": "https://codeforces.com//problemset/problem/1327/E", "name": "Count The Blocks", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1800", "solved_by": "x8830"},
{"url": "https://codeforces.com//problemset/problem/1327/D", "name": "Infinite Path", "tags": ["brute force", "dfs and similar", "graphs", "math", "number theory"], "problem_rating": "2200", "solved_by": "x3246"},
{"url": "https://codeforces.com//problemset/problem/1327/C", "name": "Game with Chips", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x13325"},
{"url": "https://codeforces.com//problemset/problem/1327/B", "name": "Princesses and Princes", "tags": ["brute force", "graphs", "greedy"], "problem_rating": "1200", "solved_by": "x18560"},
{"url": "https://codeforces.com//problemset/problem/1327/A", "name": "Sum of Odd Integers", "tags": ["math"], "problem_rating": "1100", "solved_by": "x37989"},
{"url": "https://codeforces.com//problemset/problem/1326/G", "name": "Spiderweb Trees", "tags": ["dp", "geometry", "trees"], "problem_rating": "3500", "solved_by": "x75"},
{"url": "https://codeforces.com//problemset/problem/1326/F2", "name": "Wise Men (Hard Version)", "tags": ["bitmasks", "dp", "math"], "problem_rating": "3200", "solved_by": "x478"},
{"url": "https://codeforces.com//problemset/problem/1326/F1", "name": "Wise Men (Easy Version)", "tags": ["bitmasks", "brute force", "dp", "meet-in-the-middle"], "problem_rating": "2600", "solved_by": "x831"},
{"url": "https://codeforces.com//problemset/problem/1326/E", "name": "Bombs", "tags": ["data structures", "two pointers"], "problem_rating": "2400", "solved_by": "x2175"},
{"url": "https://codeforces.com//problemset/problem/1326/D2", "name": "Prefix-Suffix Palindrome (Hard version)", "tags": ["binary search", "greedy", "hashing", "string suffix structures", "strings"], "problem_rating": "1800", "solved_by": "x9986"},
{"url": "https://codeforces.com//problemset/problem/1326/D1", "name": "Prefix-Suffix Palindrome (Easy version)", "tags": ["hashing", "string suffix structures", "strings"], "problem_rating": "1500", "solved_by": "x11970"},
{"url": "https://codeforces.com//problemset/problem/1326/C", "name": "Permutation Partitions", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1300", "solved_by": "x15532"},
{"url": "https://codeforces.com//problemset/problem/1326/B", "name": "Maximums", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x23884"},
{"url": "https://codeforces.com//problemset/problem/1326/A", "name": "Bad Ugly Numbers", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1000", "solved_by": "x29979"},
{"url": "https://codeforces.com//problemset/problem/1325/F", "name": "Ehab's Last Theorem", "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "problem_rating": "2500", "solved_by": "x1911"},
{"url": "https://codeforces.com//problemset/problem/1325/E", "name": "Ehab's REAL Number Theory Problem", "tags": ["brute force", "dfs and similar", "graphs", "number theory", "shortest paths"], "problem_rating": "2600", "solved_by": "x2014"},
{"url": "https://codeforces.com//problemset/problem/1325/D", "name": "Ehab the Xorcist", "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "problem_rating": "1700", "solved_by": "x11919"},
{"url": "https://codeforces.com//problemset/problem/1325/C", "name": "Ehab and Path-etic MEXs", "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "problem_rating": "1500", "solved_by": "x13391"},
{"url": "https://codeforces.com//problemset/problem/1325/B", "name": "CopyCopyCopyCopyCopy", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x35630"},
{"url": "https://codeforces.com//problemset/problem/1325/A", "name": "EhAb AnD gCd", "tags": ["constructive algorithms", "greedy", "number theory"], "problem_rating": "800", "solved_by": "x39235"},
{"url": "https://codeforces.com//problemset/problem/1324/F", "name": "Maximum White Subtree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "1800", "solved_by": "x9616"},
{"url": "https://codeforces.com//problemset/problem/1324/E", "name": "Sleeping Schedule", "tags": ["dp", "implementation"], "problem_rating": "1700", "solved_by": "x13130"},
{"url": "https://codeforces.com//problemset/problem/1324/D", "name": "Pair of Topics", "tags": ["binary search", "data structures", "sortings", "two pointers"], "problem_rating": "1400", "solved_by": "x27617"},
{"url": "https://codeforces.com//problemset/problem/1324/C", "name": "Frog Jumps", "tags": ["binary search", "data structures", "dfs and similar", "greedy", "implementation"], "problem_rating": "1100", "solved_by": "x27572"},
{"url": "https://codeforces.com//problemset/problem/1324/B", "name": "Yet Another Palindrome Problem", "tags": ["brute force", "strings"], "problem_rating": "1100", "solved_by": "x27976"},
{"url": "https://codeforces.com//problemset/problem/1324/A", "name": "Yet Another Tetris Problem", "tags": ["implementation", "number theory"], "problem_rating": "900", "solved_by": "x25758"},
{"url": "https://codeforces.com//problemset/problem/1323/B", "name": "Count Subrectangles", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x8829"},
{"url": "https://codeforces.com//problemset/problem/1323/A", "name": "Even Subset Sum Problem", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x19645"},
{"url": "https://codeforces.com//problemset/problem/1322/F", "name": "Assigning Fares", "tags": ["dp", "trees"], "problem_rating": "3500", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1322/E", "name": "Median Mountain Range", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x300"},
{"url": "https://codeforces.com//problemset/problem/1322/D", "name": "Reality Show", "tags": ["bitmasks", "dp"], "problem_rating": "2800", "solved_by": "x707"},
{"url": "https://codeforces.com//problemset/problem/1322/C", "name": "Instant Noodles", "tags": ["graphs", "hashing", "math", "number theory"], "problem_rating": "2300", "solved_by": "x2373"},
{"url": "https://codeforces.com//problemset/problem/1322/B", "name": "Present", "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "problem_rating": "2100", "solved_by": "x4150"},
{"url": "https://codeforces.com//problemset/problem/1322/A", "name": "Unusual Competitions", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12401"},
{"url": "https://codeforces.com//problemset/problem/1321/C", "name": "Remove Adjacent", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x9759"},
{"url": "https://codeforces.com//problemset/problem/1321/A", "name": "Contest for Robots", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x14226"},
{"url": "https://codeforces.com//problemset/problem/1320/F", "name": "Blocks and Sensors", "tags": ["brute force"], "problem_rating": "3500", "solved_by": "x154"},
{"url": "https://codeforces.com//problemset/problem/1320/E", "name": "Treeland and Viruses", "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"], "problem_rating": "3000", "solved_by": "x803"},
{"url": "https://codeforces.com//problemset/problem/1320/D", "name": "Reachable Strings", "tags": ["data structures", "hashing", "strings"], "problem_rating": "2500", "solved_by": "x1422"},
{"url": "https://codeforces.com//problemset/problem/1320/C", "name": "World of Darkraft: Battle for Azathoth", "tags": ["brute force", "data structures", "sortings"], "problem_rating": "2000", "solved_by": "x3069"},
{"url": "https://codeforces.com//problemset/problem/1320/B", "name": "Navigation System", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1700", "solved_by": "x5970"},
{"url": "https://codeforces.com//problemset/problem/1320/A", "name": "Journey Planning", "tags": ["data structures", "dp", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x15981"},
{"url": "https://codeforces.com//problemset/problem/1316/F", "name": "Battalion Strength", "tags": ["data structures", "divide and conquer", "probabilities"], "problem_rating": "2800", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1316/E", "name": "Team Building", "tags": ["bitmasks", "dp", "greedy", "sortings"], "problem_rating": "2300", "solved_by": "x3789"},
{"url": "https://codeforces.com//problemset/problem/1316/D", "name": "Nash Matrix", "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3361"},
{"url": "https://codeforces.com//problemset/problem/1316/C", "name": "Primitive Primes", "tags": ["constructive algorithms", "math", "ternary search"], "problem_rating": "1800", "solved_by": "x7233"},
{"url": "https://codeforces.com//problemset/problem/1316/B", "name": "String Modification", "tags": ["brute force", "constructive algorithms", "implementation", "sortings", "strings"], "problem_rating": "1400", "solved_by": "x11205"},
{"url": "https://codeforces.com//problemset/problem/1316/A", "name": "Grade Allocation", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x18603"},
{"url": "https://codeforces.com//problemset/problem/1315/C", "name": "Restoring Permutation", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x10010"},
{"url": "https://codeforces.com//problemset/problem/1315/B", "name": "Homecoming", "tags": ["binary search", "dp", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x9150"},
{"url": "https://codeforces.com//problemset/problem/1315/A", "name": "Dead Pixel", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x12005"},
{"url": "https://codeforces.com//problemset/problem/1313/E", "name": "Concatenation with intersection", "tags": ["data structures", "hashing", "strings", "two pointers"], "problem_rating": "2700", "solved_by": "x530"},
{"url": "https://codeforces.com//problemset/problem/1313/D", "name": "Happy New Year", "tags": ["bitmasks", "dp", "implementation"], "problem_rating": "2500", "solved_by": "x1315"},
{"url": "https://codeforces.com//problemset/problem/1313/C2", "name": "Skyscrapers (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x6396"},
{"url": "https://codeforces.com//problemset/problem/1313/C1", "name": "Skyscrapers (easy version)", "tags": ["brute force", "data structures", "dp", "greedy"], "problem_rating": "1500", "solved_by": "x10343"},
{"url": "https://codeforces.com//problemset/problem/1313/B", "name": "Different Rules", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1700", "solved_by": "x6652"},
{"url": "https://codeforces.com//problemset/problem/1313/A", "name": "Fast Food Restaurant", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x15429"},
{"url": "https://codeforces.com//problemset/problem/1312/G", "name": "Autocompletion", "tags": ["data structures", "dfs and similar", "dp"], "problem_rating": "2600", "solved_by": "x970"},
{"url": "https://codeforces.com//problemset/problem/1312/F", "name": "Attack on Red Kingdom", "tags": ["games", "two pointers"], "problem_rating": "2500", "solved_by": "x890"},
{"url": "https://codeforces.com//problemset/problem/1312/E", "name": "Array Shrinking", "tags": ["dp", "greedy"], "problem_rating": "2100", "solved_by": "x5778"},
{"url": "https://codeforces.com//problemset/problem/1312/D", "name": "Count the Arrays", "tags": ["combinatorics", "math"], "problem_rating": "1700", "solved_by": "x9279"},
{"url": "https://codeforces.com//problemset/problem/1312/C", "name": "Adding Powers", "tags": ["bitmasks", "greedy", "implementation", "math", "number theory", "ternary search"], "problem_rating": "1400", "solved_by": "x16251"},
{"url": "https://codeforces.com//problemset/problem/1312/B", "name": "Bogosort", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x25846"},
{"url": "https://codeforces.com//problemset/problem/1312/A", "name": "Two Regular Polygons", "tags": ["geometry", "greedy", "math", "number theory"], "problem_rating": "800", "solved_by": "x25753"},
{"url": "https://codeforces.com//problemset/problem/1311/F", "name": "Moving Points", "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4158"},
{"url": "https://codeforces.com//problemset/problem/1311/E", "name": "Construct the Binary Tree", "tags": ["brute force", "constructive algorithms", "trees"], "problem_rating": "2200", "solved_by": "x2323"},
{"url": "https://codeforces.com//problemset/problem/1311/D", "name": "Three Integers", "tags": ["brute force", "math"], "problem_rating": "2000", "solved_by": "x8938"},
{"url": "https://codeforces.com//problemset/problem/1311/C", "name": "Perform the Combo", "tags": ["brute force"], "problem_rating": "1300", "solved_by": "x15906"},
{"url": "https://codeforces.com//problemset/problem/1311/B", "name": "WeirdSort", "tags": ["dfs and similar", "sortings"], "problem_rating": "1200", "solved_by": "x18764"},
{"url": "https://codeforces.com//problemset/problem/1311/A", "name": "Add Odd or Subtract Even", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x41406"},
{"url": "https://codeforces.com//problemset/problem/1310/F", "name": "Bad Cryptography", "tags": ["math", "number theory"], "problem_rating": "3400", "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1310/E", "name": "Strange Function", "tags": ["dp"], "problem_rating": "2900", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1310/D", "name": "Tourism", "tags": ["dp", "graphs", "probabilities"], "problem_rating": "2300", "solved_by": "x1521"},
{"url": "https://codeforces.com//problemset/problem/1310/C", "name": "Au Pont Rouge", "tags": ["binary search", "dp", "strings"], "problem_rating": "2800", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1310/B", "name": "Double Elimination", "tags": ["dp", "implementation"], "problem_rating": "2500", "solved_by": "x493"},
{"url": "https://codeforces.com//problemset/problem/1310/A", "name": "Recommendations", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x5149"},
{"url": "https://codeforces.com//problemset/problem/1307/G", "name": "Cow and Exercise", "tags": ["flows", "graphs", "shortest paths"], "problem_rating": "3100", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/1307/F", "name": "Cow and Vacation", "tags": ["dfs and similar", "dsu", "trees"], "problem_rating": "3300", "solved_by": "x575"},
{"url": "https://codeforces.com//problemset/problem/1307/E", "name": "Cow and Treats", "tags": ["binary search", "combinatorics", "dp", "greedy", "implementation", "math"], "problem_rating": "2500", "solved_by": "x1267"},
{"url": "https://codeforces.com//problemset/problem/1307/D", "name": "Cow and Fields", "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"], "problem_rating": "1900", "solved_by": "x6244"},
{"url": "https://codeforces.com//problemset/problem/1307/C", "name": "Cow and Message", "tags": ["brute force", "dp", "math", "strings"], "problem_rating": "1500", "solved_by": "x11749"},
{"url": "https://codeforces.com//problemset/problem/1307/B", "name": "Cow and Friend", "tags": ["geometry", "greedy", "math"], "problem_rating": "1300", "solved_by": "x13182"},
{"url": "https://codeforces.com//problemset/problem/1307/A", "name": "Cow and Haybales", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x14913"},
{"url": "https://codeforces.com//problemset/problem/1305/H", "name": "Kuroni the Private Tutor", "tags": ["binary search", "greedy"], "problem_rating": "3500", "solved_by": "x113"},
{"url": "https://codeforces.com//problemset/problem/1305/G", "name": "Kuroni and Antihype", "tags": ["bitmasks", "brute force", "dp", "dsu", "graphs"], "problem_rating": "3500", "solved_by": "x963"},
{"url": "https://codeforces.com//problemset/problem/1305/F", "name": "Kuroni and the Punishment", "tags": ["math", "number theory", "probabilities"], "problem_rating": "2500", "solved_by": "x2574"},
{"url": "https://codeforces.com//problemset/problem/1305/E", "name": "Kuroni and the Score Distribution", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2200", "solved_by": "x3066"},
{"url": "https://codeforces.com//problemset/problem/1305/D", "name": "Kuroni and the Celebration", "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "problem_rating": "1900", "solved_by": "x4931"},
{"url": "https://codeforces.com//problemset/problem/1305/C", "name": "Kuroni and Impossible Calculation", "tags": ["brute force", "combinatorics", "math", "number theory"], "problem_rating": "1600", "solved_by": "x14210"},
{"url": "https://codeforces.com//problemset/problem/1305/B", "name": "Kuroni and Simple Strings", "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x11668"},
{"url": "https://codeforces.com//problemset/problem/1305/A", "name": "Kuroni and the Gifts", "tags": ["brute force", "constructive algorithms", "greedy", "sortings"], "problem_rating": "800", "solved_by": "x13977"},
{"url": "https://codeforces.com//problemset/problem/1304/F2", "name": "Animal Observation (hard version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1497"},
{"url": "https://codeforces.com//problemset/problem/1304/F1", "name": "Animal Observation (easy version)", "tags": ["data structures", "dp"], "problem_rating": "2300", "solved_by": "x1732"},
{"url": "https://codeforces.com//problemset/problem/1304/E", "name": "1-Trees and Queries", "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "problem_rating": "2000", "solved_by": "x5141"},
{"url": "https://codeforces.com//problemset/problem/1304/D", "name": "Shortest and Longest LIS", "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"], "problem_rating": "1800", "solved_by": "x6274"},
{"url": "https://codeforces.com//problemset/problem/1304/C", "name": "Air Conditioner", "tags": ["dp", "greedy", "implementation", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x16180"},
{"url": "https://codeforces.com//problemset/problem/1304/B", "name": "Longest Palindrome", "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1100", "solved_by": "x17756"},
{"url": "https://codeforces.com//problemset/problem/1304/A", "name": "Two Rabbits", "tags": ["math"], "problem_rating": "800", "solved_by": "x25285"},
{"url": "https://codeforces.com//problemset/problem/1303/G", "name": "Sum of Prefix Sums", "tags": ["data structures", "divide and conquer", "geometry", "trees"], "problem_rating": "2700", "solved_by": "x774"},
{"url": "https://codeforces.com//problemset/problem/1303/F", "name": "Number of Components", "tags": ["dsu", "implementation"], "problem_rating": "2800", "solved_by": "x519"},
{"url": "https://codeforces.com//problemset/problem/1303/E", "name": "Erase Subsequences", "tags": ["dp", "strings"], "problem_rating": "2200", "solved_by": "x2747"},
{"url": "https://codeforces.com//problemset/problem/1303/D", "name": "Fill The Bag", "tags": ["bitmasks", "greedy"], "problem_rating": "1900", "solved_by": "x7024"},
{"url": "https://codeforces.com//problemset/problem/1303/C", "name": "Perfect Keyboard", "tags": ["dfs and similar", "greedy", "implementation"], "problem_rating": "1600", "solved_by": "x12083"},
{"url": "https://codeforces.com//problemset/problem/1303/B", "name": "National Project", "tags": ["math"], "problem_rating": "1400", "solved_by": "x15625"},
{"url": "https://codeforces.com//problemset/problem/1303/A", "name": "Erasing Zeroes", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x31516"},
{"url": "https://codeforces.com//problemset/problem/1302/J", "name": "Keep talking and nobody explodes -- hard", "tags": [], "problem_rating": [null], "solved_by": "x10"},
{"url": "https://codeforces.com//problemset/problem/1302/I", "name": "Deja vu", "tags": [], "problem_rating": [null], "solved_by": "x2"},
{"url": "https://codeforces.com//problemset/problem/1302/H", "name": "Who needs suffix structures?", "tags": [], "problem_rating": [null], "solved_by": "x8"},
{"url": "https://codeforces.com//problemset/problem/1302/G", "name": "Keep talking and nobody explodes -- medium", "tags": [], "problem_rating": [null], "solved_by": "x23"},
{"url": "https://codeforces.com//problemset/problem/1302/F", "name": "Keep talking and nobody explodes -- easy", "tags": ["bitmasks", "brute force", "expression parsing"], "problem_rating": [null], "solved_by": "x74"},
{"url": "https://codeforces.com//problemset/problem/1302/E", "name": "Amazing bitset", "tags": [], "problem_rating": [null], "solved_by": "x46"},
{"url": "https://codeforces.com//problemset/problem/1302/D", "name": "Dijkstra", "tags": [], "problem_rating": [null], "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1302/C", "name": "Segment tree or Fenwick?", "tags": ["data structures"], "problem_rating": [null], "solved_by": "x380"},
{"url": "https://codeforces.com//problemset/problem/1302/B", "name": "DAG", "tags": ["constructive algorithms"], "problem_rating": [null], "solved_by": "x144"},
{"url": "https://codeforces.com//problemset/problem/1302/A", "name": "Nash equilibrium", "tags": [], "problem_rating": [null], "solved_by": "x295"},
{"url": "https://codeforces.com//problemset/problem/1301/F", "name": "Super Jaber", "tags": ["dfs and similar", "graphs", "implementation", "shortest paths"], "problem_rating": "2600", "solved_by": "x1235"},
{"url": "https://codeforces.com//problemset/problem/1301/E", "name": "Nanosoft", "tags": ["binary search", "data structures", "dp", "implementation"], "problem_rating": "2500", "solved_by": "x1490"},
{"url": "https://codeforces.com//problemset/problem/1301/D", "name": "Time to Run", "tags": ["constructive algorithms", "graphs", "implementation"], "problem_rating": "2000", "solved_by": "x3970"},
{"url": "https://codeforces.com//problemset/problem/1301/C", "name": "Ayoub's function", "tags": ["binary search", "combinatorics", "greedy", "math", "strings"], "problem_rating": "1700", "solved_by": "x9267"},
{"url": "https://codeforces.com//problemset/problem/1301/B", "name": "Motarack's Birthday", "tags": ["binary search", "greedy", "ternary search"], "problem_rating": "1500", "solved_by": "x14098"},
{"url": "https://codeforces.com//problemset/problem/1301/A", "name": "Three Strings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x19281"},
{"url": "https://codeforces.com//problemset/problem/1300/B", "name": "Assigning to Classes", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "1000", "solved_by": "x22914"},
{"url": "https://codeforces.com//problemset/problem/1300/A", "name": "Non-zero", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x20927"},
{"url": "https://codeforces.com//problemset/problem/1299/E", "name": "So Mean", "tags": ["interactive", "math"], "problem_rating": "3400", "solved_by": "x155"},
{"url": "https://codeforces.com//problemset/problem/1299/D", "name": "Around the World", "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"], "problem_rating": "3000", "solved_by": "x425"},
{"url": "https://codeforces.com//problemset/problem/1299/C", "name": "Water Balance", "tags": ["data structures", "geometry", "greedy"], "problem_rating": "2100", "solved_by": "x3862"},
{"url": "https://codeforces.com//problemset/problem/1299/B", "name": "Aerodynamic", "tags": ["geometry"], "problem_rating": "1800", "solved_by": "x5218"},
{"url": "https://codeforces.com//problemset/problem/1299/A", "name": "Anu Has a Function", "tags": ["brute force", "greedy", "math"], "problem_rating": "1500", "solved_by": "x11952"},
{"url": "https://codeforces.com//problemset/problem/1297/I", "name": "Falling Blocks", "tags": ["*special problem", "data structures"], "problem_rating": [null], "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1297/H", "name": "Paint the String", "tags": ["*special problem", "dp", "strings"], "problem_rating": [null], "solved_by": "x43"},
{"url": "https://codeforces.com//problemset/problem/1297/G", "name": "M-numbers", "tags": ["*special problem", "dp", "math"], "problem_rating": [null], "solved_by": "x69"},
{"url": "https://codeforces.com//problemset/problem/1297/F", "name": "Movie Fan", "tags": ["*special problem", "data structures", "greedy", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x117"},
{"url": "https://codeforces.com//problemset/problem/1297/E", "name": "Modernization of Treeland", "tags": ["*special problem", "dfs and similar", "trees"], "problem_rating": [null], "solved_by": "x205"},
{"url": "https://codeforces.com//problemset/problem/1297/D", "name": "Bonus Distribution", "tags": ["*special problem", "binary search", "greedy", "sortings"], "problem_rating": [null], "solved_by": "x262"},
{"url": "https://codeforces.com//problemset/problem/1297/C", "name": "Dream Team", "tags": ["*special problem", "greedy"], "problem_rating": [null], "solved_by": "x399"},
{"url": "https://codeforces.com//problemset/problem/1297/B", "name": "Cartoons", "tags": ["*special problem", "implementation", "sortings"], "problem_rating": [null], "solved_by": "x413"},
{"url": "https://codeforces.com//problemset/problem/1297/A", "name": "Likes Display", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x941"},
{"url": "https://codeforces.com//problemset/problem/1296/F", "name": "Berland Beauty", "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2853"},
{"url": "https://codeforces.com//problemset/problem/1296/E2", "name": "String Coloring (hard version)", "tags": ["data structures", "dp"], "problem_rating": "2000", "solved_by": "x4973"},
{"url": "https://codeforces.com//problemset/problem/1296/E1", "name": "String Coloring (easy version)", "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x7381"},
{"url": "https://codeforces.com//problemset/problem/1296/D", "name": "Fight with Monsters", "tags": ["greedy", "sortings"], "problem_rating": "1500", "solved_by": "x14153"},
{"url": "https://codeforces.com//problemset/problem/1296/C", "name": "Yet Another Walking Robot", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x14704"},
{"url": "https://codeforces.com//problemset/problem/1296/B", "name": "Food Buying", "tags": ["math"], "problem_rating": "900", "solved_by": "x29897"},
{"url": "https://codeforces.com//problemset/problem/1296/A", "name": "Array with Odd Sum", "tags": ["math"], "problem_rating": "800", "solved_by": "x40724"},
{"url": "https://codeforces.com//problemset/problem/1295/F", "name": "Good Contest", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2700", "solved_by": "x1174"},
{"url": "https://codeforces.com//problemset/problem/1295/E", "name": "Permutation Separation", "tags": ["data structures", "divide and conquer"], "problem_rating": "2200", "solved_by": "x2499"},
{"url": "https://codeforces.com//problemset/problem/1295/D", "name": "Same GCDs", "tags": ["math", "number theory"], "problem_rating": "1800", "solved_by": "x8717"},
{"url": "https://codeforces.com//problemset/problem/1295/C", "name": "Obtain The String", "tags": ["dp", "greedy", "strings"], "problem_rating": "1600", "solved_by": "x12800"},
{"url": "https://codeforces.com//problemset/problem/1295/B", "name": "Infinite Prefixes", "tags": ["math", "strings"], "problem_rating": "1700", "solved_by": "x9261"},
{"url": "https://codeforces.com//problemset/problem/1295/A", "name": "Display The Number", "tags": ["greedy"], "problem_rating": "900", "solved_by": "x22651"},
{"url": "https://codeforces.com//problemset/problem/1294/F", "name": "Three Paths on a Tree", "tags": ["dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x5634"},
{"url": "https://codeforces.com//problemset/problem/1294/E", "name": "Obtain a Permutation", "tags": ["greedy", "implementation", "math"], "problem_rating": "1900", "solved_by": "x4869"},
{"url": "https://codeforces.com//problemset/problem/1294/D", "name": "MEX maximizing", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "1600", "solved_by": "x11605"},
{"url": "https://codeforces.com//problemset/problem/1294/C", "name": "Product of Three Numbers", "tags": ["greedy", "math", "number theory"], "problem_rating": "1300", "solved_by": "x33700"},
{"url": "https://codeforces.com//problemset/problem/1294/B", "name": "Collecting Packages", "tags": ["implementation", "sortings"], "problem_rating": "1200", "solved_by": "x21591"},
{"url": "https://codeforces.com//problemset/problem/1294/A", "name": "Collecting Coins", "tags": ["math"], "problem_rating": "800", "solved_by": "x45578"},
{"url": "https://codeforces.com//problemset/problem/1293/B", "name": "JOE is on TV!", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1000", "solved_by": "x21100"},
{"url": "https://codeforces.com//problemset/problem/1293/A", "name": "ConneR and the A.R.C. Markland-N", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1100", "solved_by": "x15309"},
{"url": "https://codeforces.com//problemset/problem/1292/F", "name": "Nora's Toy Boxes", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "3500", "solved_by": "x309"},
{"url": "https://codeforces.com//problemset/problem/1292/E", "name": "Rin and The Unknown Flower", "tags": ["constructive algorithms", "greedy", "interactive", "math"], "problem_rating": "3500", "solved_by": "x331"},
{"url": "https://codeforces.com//problemset/problem/1292/D", "name": "Chaotic V.", "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"], "problem_rating": "2700", "solved_by": "x790"},
{"url": "https://codeforces.com//problemset/problem/1292/C", "name": "Xenon's Attack on the Gangs", "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "2300", "solved_by": "x2034"},
{"url": "https://codeforces.com//problemset/problem/1292/B", "name": "Aroma's Search", "tags": ["brute force", "constructive algorithms", "geometry", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x6284"},
{"url": "https://codeforces.com//problemset/problem/1292/A", "name": "NEKO's Maze Game", "tags": ["data structures", "dsu", "implementation"], "problem_rating": "1400", "solved_by": "x13150"},
{"url": "https://codeforces.com//problemset/problem/1291/F", "name": "Coffee Varieties (easy version)", "tags": ["graphs", "interactive"], "problem_rating": "2800", "solved_by": "x652"},
{"url": "https://codeforces.com//problemset/problem/1291/B", "name": "Array Sharpening", "tags": ["greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14082"},
{"url": "https://codeforces.com//problemset/problem/1291/A", "name": "Even But Not Even", "tags": ["greedy", "math", "strings"], "problem_rating": "900", "solved_by": "x19445"},
{"url": "https://codeforces.com//problemset/problem/1290/F", "name": "Making Shapes", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x359"},
{"url": "https://codeforces.com//problemset/problem/1290/E", "name": "Cartesian Tree", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x532"},
{"url": "https://codeforces.com//problemset/problem/1290/D", "name": "Coffee Varieties (hard version)", "tags": ["constructive algorithms", "graphs", "interactive"], "problem_rating": "3000", "solved_by": "x816"},
{"url": "https://codeforces.com//problemset/problem/1290/C", "name": "Prefix Enlightenment", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "2400", "solved_by": "x1715"},
{"url": "https://codeforces.com//problemset/problem/1290/B", "name": "Irreducible Anagrams", "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"], "problem_rating": "1800", "solved_by": "x5250"},
{"url": "https://codeforces.com//problemset/problem/1290/A", "name": "Mind Control", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1600", "solved_by": "x8531"},
{"url": "https://codeforces.com//problemset/problem/1288/F", "name": "Red-Blue Graph", "tags": ["constructive algorithms", "flows"], "problem_rating": "2900", "solved_by": "x451"},
{"url": "https://codeforces.com//problemset/problem/1288/E", "name": "Messenger Simulator", "tags": ["data structures"], "problem_rating": "2000", "solved_by": "x3528"},
{"url": "https://codeforces.com//problemset/problem/1288/D", "name": "Minimax Problem", "tags": ["binary search", "bitmasks", "dp"], "problem_rating": "2000", "solved_by": "x7021"},
{"url": "https://codeforces.com//problemset/problem/1288/C", "name": "Two Arrays", "tags": ["combinatorics", "dp"], "problem_rating": "1600", "solved_by": "x12633"},
{"url": "https://codeforces.com//problemset/problem/1288/B", "name": "Yet Another Meme Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16969"},
{"url": "https://codeforces.com//problemset/problem/1288/A", "name": "Deadline", "tags": ["binary search", "brute force", "math", "ternary search"], "problem_rating": "1100", "solved_by": "x18167"},
{"url": "https://codeforces.com//problemset/problem/1287/B", "name": "Hyperset", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "1500", "solved_by": "x9394"},
{"url": "https://codeforces.com//problemset/problem/1287/A", "name": "Angry Students", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x20462"},
{"url": "https://codeforces.com//problemset/problem/1286/F", "name": "Harry The Potter", "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"], "problem_rating": "3100", "solved_by": "x242"},
{"url": "https://codeforces.com//problemset/problem/1286/E", "name": "Fedya the Potter Strikes Back", "tags": ["data structures", "strings"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1286/D", "name": "LCC", "tags": ["data structures", "math", "matrices", "probabilities"], "problem_rating": "3100", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/1286/C2", "name": "Madhouse (Hard version)", "tags": ["brute force", "constructive algorithms", "hashing", "interactive", "math"], "problem_rating": "2800", "solved_by": "x617"},
{"url": "https://codeforces.com//problemset/problem/1286/C1", "name": "Madhouse (Easy version)", "tags": ["brute force", "constructive algorithms", "interactive", "math"], "problem_rating": "2400", "solved_by": "x1410"},
{"url": "https://codeforces.com//problemset/problem/1286/B", "name": "Numbers on Tree", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1800", "solved_by": "x4643"},
{"url": "https://codeforces.com//problemset/problem/1286/A", "name": "Garland", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x8686"},
{"url": "https://codeforces.com//problemset/problem/1285/F", "name": "Classical?", "tags": ["binary search", "combinatorics", "number theory"], "problem_rating": "2900", "solved_by": "x1099"},
{"url": "https://codeforces.com//problemset/problem/1285/E", "name": "Delete a Segment", "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "problem_rating": "2300", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1285/D", "name": "Dr. Evil Underscores", "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "problem_rating": "1900", "solved_by": "x7598"},
{"url": "https://codeforces.com//problemset/problem/1285/C", "name": "Fadi and LCM", "tags": ["brute force", "math", "number theory"], "problem_rating": "1400", "solved_by": "x22870"},
{"url": "https://codeforces.com//problemset/problem/1285/B", "name": "Just Eat It!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x21964"},
{"url": "https://codeforces.com//problemset/problem/1285/A", "name": "Mezo Playing Zoma", "tags": ["math"], "problem_rating": "800", "solved_by": "x27848"},
{"url": "https://codeforces.com//problemset/problem/1284/G", "name": "Seollal", "tags": ["graphs"], "problem_rating": "3300", "solved_by": "x168"},
{"url": "https://codeforces.com//problemset/problem/1284/F", "name": "New Year and Social Network", "tags": ["data structures", "graph matchings", "graphs", "math", "trees"], "problem_rating": "3200", "solved_by": "x315"},
{"url": "https://codeforces.com//problemset/problem/1284/E", "name": "New Year and Castle Construction", "tags": ["combinatorics", "geometry", "math", "sortings"], "problem_rating": "2500", "solved_by": "x1289"},
{"url": "https://codeforces.com//problemset/problem/1284/D", "name": "New Year and Conference", "tags": ["binary search", "data structures", "hashing", "sortings"], "problem_rating": "2100", "solved_by": "x3128"},
{"url": "https://codeforces.com//problemset/problem/1284/C", "name": "New Year and Permutation", "tags": ["combinatorics", "math"], "problem_rating": "1600", "solved_by": "x7953"},
{"url": "https://codeforces.com//problemset/problem/1284/B", "name": "New Year and Ascent Sequence", "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"], "problem_rating": "1400", "solved_by": "x10784"},
{"url": "https://codeforces.com//problemset/problem/1284/A", "name": "New Year and Naming", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x17951"},
{"url": "https://codeforces.com//problemset/problem/1283/F", "name": "DIY Garland", "tags": ["constructive algorithms", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x1813"},
{"url": "https://codeforces.com//problemset/problem/1283/E", "name": "New Year Parties", "tags": ["dp", "greedy"], "problem_rating": "1800", "solved_by": "x6488"},
{"url": "https://codeforces.com//problemset/problem/1283/D", "name": "Christmas Trees", "tags": ["graphs", "greedy", "shortest paths"], "problem_rating": "1800", "solved_by": "x7691"},
{"url": "https://codeforces.com//problemset/problem/1283/C", "name": "Friends and Gifts", "tags": ["constructive algorithms", "data structures", "math"], "problem_rating": "1500", "solved_by": "x13050"},
{"url": "https://codeforces.com//problemset/problem/1283/B", "name": "Candies Division", "tags": ["math"], "problem_rating": "900", "solved_by": "x21524"},
{"url": "https://codeforces.com//problemset/problem/1283/A", "name": "Minutes Before the New Year", "tags": ["math"], "problem_rating": "800", "solved_by": "x48199"},
{"url": "https://codeforces.com//problemset/problem/1282/E", "name": "The Cake Is a Lie", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x1139"},
{"url": "https://codeforces.com//problemset/problem/1282/D", "name": "Enchanted Artifact", "tags": ["constructive algorithms", "interactive", "strings"], "problem_rating": "2300", "solved_by": "x2223"},
{"url": "https://codeforces.com//problemset/problem/1282/C", "name": "Petya and Exam", "tags": ["greedy", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x4270"},
{"url": "https://codeforces.com//problemset/problem/1282/B2", "name": "K for the Price of One (Hard Version)", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1600", "solved_by": "x10092"},
{"url": "https://codeforces.com//problemset/problem/1282/B1", "name": "K for the Price of One (Easy Version)", "tags": ["dp", "greedy", "sortings"], "problem_rating": "1400", "solved_by": "x11408"},
{"url": "https://codeforces.com//problemset/problem/1282/A", "name": "Temporarily unavailable", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x14719"},
{"url": "https://codeforces.com//problemset/problem/1281/B", "name": "Azamon Web Services", "tags": ["greedy"], "problem_rating": "1600", "solved_by": "x8241"},
{"url": "https://codeforces.com//problemset/problem/1281/A", "name": "Suffix Three", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x17899"},
{"url": "https://codeforces.com//problemset/problem/1280/F", "name": "Intergalactic Sliding Puzzle", "tags": ["combinatorics", "constructive algorithms", "math"], "problem_rating": "3400", "solved_by": "x59"},
{"url": "https://codeforces.com//problemset/problem/1280/E", "name": "Kirchhoff's Current Loss", "tags": ["math"], "problem_rating": "2900", "solved_by": "x199"},
{"url": "https://codeforces.com//problemset/problem/1280/D", "name": "Miss Punyverse", "tags": ["dp", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x978"},
{"url": "https://codeforces.com//problemset/problem/1280/C", "name": "Jeremy Bearimy", "tags": ["dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "2000", "solved_by": "x2653"},
{"url": "https://codeforces.com//problemset/problem/1280/B", "name": "Beingawesomeism", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x3913"},
{"url": "https://codeforces.com//problemset/problem/1280/A", "name": "Cut and Paste", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x5350"},
{"url": "https://codeforces.com//problemset/problem/1279/F", "name": "New Year and Handle Change", "tags": ["binary search", "dp"], "problem_rating": "2800", "solved_by": "x850"},
{"url": "https://codeforces.com//problemset/problem/1279/E", "name": "New Year Permutations", "tags": ["combinatorics", "dp"], "problem_rating": "2700", "solved_by": "x360"},
{"url": "https://codeforces.com//problemset/problem/1279/D", "name": "Santa's Bot", "tags": ["combinatorics", "math", "probabilities"], "problem_rating": "1700", "solved_by": "x6167"},
{"url": "https://codeforces.com//problemset/problem/1279/C", "name": "Stack of Presents", "tags": ["data structures", "implementation"], "problem_rating": "1400", "solved_by": "x11621"},
{"url": "https://codeforces.com//problemset/problem/1279/B", "name": "Verse For Santa", "tags": ["binary search", "brute force", "implementation"], "problem_rating": "1300", "solved_by": "x13552"},
{"url": "https://codeforces.com//problemset/problem/1279/A", "name": "New Year Garland", "tags": ["math"], "problem_rating": "900", "solved_by": "x16813"},
{"url": "https://codeforces.com//problemset/problem/1278/F", "name": "Cards", "tags": ["combinatorics", "dp", "math", "number theory", "probabilities"], "problem_rating": "2600", "solved_by": "x1806"},
{"url": "https://codeforces.com//problemset/problem/1278/E", "name": "Tests for problem D", "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "problem_rating": "2200", "solved_by": "x1898"},
{"url": "https://codeforces.com//problemset/problem/1278/D", "name": "Segment Tree", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2100", "solved_by": "x3921"},
{"url": "https://codeforces.com//problemset/problem/1278/C", "name": "Berry Jam", "tags": ["data structures", "dp", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x7918"},
{"url": "https://codeforces.com//problemset/problem/1278/B", "name": "A and B", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x13153"},
{"url": "https://codeforces.com//problemset/problem/1278/A", "name": "Shuffle Hashing", "tags": ["brute force", "implementation", "strings"], "problem_rating": "1000", "solved_by": "x16382"},
{"url": "https://codeforces.com//problemset/problem/1277/D", "name": "Let's Play the Words?", "tags": ["data structures", "hashing", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3098"},
{"url": "https://codeforces.com//problemset/problem/1277/B", "name": "Make Them Odd", "tags": ["greedy", "number theory"], "problem_rating": "1200", "solved_by": "x14982"},
{"url": "https://codeforces.com//problemset/problem/1277/A", "name": "Happy Birthday, Polycarp!", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x13226"},
{"url": "https://codeforces.com//problemset/problem/1276/F", "name": "Asterisk Substrings", "tags": ["string suffix structures"], "problem_rating": "3400", "solved_by": "x336"},
{"url": "https://codeforces.com//problemset/problem/1276/E", "name": "Four Stones", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x82"},
{"url": "https://codeforces.com//problemset/problem/1276/D", "name": "Tree Elimination", "tags": ["dp", "trees"], "problem_rating": "2900", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/1276/C", "name": "Beautiful Rectangle", "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"], "problem_rating": "2300", "solved_by": "x1642"},
{"url": "https://codeforces.com//problemset/problem/1276/B", "name": "Two Fairs", "tags": ["combinatorics", "dfs and similar", "dsu", "graphs"], "problem_rating": "1900", "solved_by": "x4873"},
{"url": "https://codeforces.com//problemset/problem/1276/A", "name": "As Simple as One and Two", "tags": ["dp", "greedy"], "problem_rating": "1400", "solved_by": "x12244"},
{"url": "https://codeforces.com//problemset/problem/1275/F", "name": "Шардирование постов", "tags": ["*special problem", "binary search", "interactive"], "problem_rating": [null], "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1275/E3", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x56"},
{"url": "https://codeforces.com//problemset/problem/1275/E2", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1275/E1", "name": "Контрольная сумма", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x254"},
{"url": "https://codeforces.com//problemset/problem/1275/D", "name": "Storage2", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1275/C", "name": "#define Задача B ...", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x668"},
{"url": "https://codeforces.com//problemset/problem/1275/B", "name": "Code Review", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x820"},
{"url": "https://codeforces.com//problemset/problem/1275/A", "name": "Скрытый друг", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x887"},
{"url": "https://codeforces.com//problemset/problem/1272/F", "name": "Two Bracket Sequences", "tags": ["dp", "strings", "two pointers"], "problem_rating": "2200", "solved_by": "x1920"},
{"url": "https://codeforces.com//problemset/problem/1272/E", "name": "Nearest Opposite Parity", "tags": ["dfs and similar", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x6154"},
{"url": "https://codeforces.com//problemset/problem/1272/D", "name": "Remove One Element", "tags": ["brute force", "dp"], "problem_rating": "1500", "solved_by": "x16298"},
{"url": "https://codeforces.com//problemset/problem/1272/C", "name": "Yet Another Broken Keyboard", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "1200", "solved_by": "x25994"},
{"url": "https://codeforces.com//problemset/problem/1272/B", "name": "Snow Walking Robot", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x13807"},
{"url": "https://codeforces.com//problemset/problem/1272/A", "name": "Three Friends", "tags": ["brute force", "greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x20394"},
{"url": "https://codeforces.com//problemset/problem/1271/F", "name": "Divide The Students", "tags": ["brute force"], "problem_rating": "2700", "solved_by": "x190"},
{"url": "https://codeforces.com//problemset/problem/1271/E", "name": "Common Number", "tags": ["binary search", "combinatorics", "dp", "math"], "problem_rating": "2100", "solved_by": "x3341"},
{"url": "https://codeforces.com//problemset/problem/1271/D", "name": "Portals", "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x2980"},
{"url": "https://codeforces.com//problemset/problem/1271/C", "name": "Shawarma Tent", "tags": ["brute force", "geometry", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10451"},
{"url": "https://codeforces.com//problemset/problem/1271/B", "name": "Blocks", "tags": ["greedy", "math"], "problem_rating": "1300", "solved_by": "x11289"},
{"url": "https://codeforces.com//problemset/problem/1271/A", "name": "Suits", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x14897"},
{"url": "https://codeforces.com//problemset/problem/1270/I", "name": "Xor on Figures", "tags": ["constructive algorithms", "fft", "math"], "problem_rating": "3500", "solved_by": "x232"},
{"url": "https://codeforces.com//problemset/problem/1270/H", "name": "Number of Components", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1270/G", "name": "Subset with Zero Sum", "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "problem_rating": "2700", "solved_by": "x2139"},
{"url": "https://codeforces.com//problemset/problem/1270/F", "name": "Awesome Substrings", "tags": ["math", "strings"], "problem_rating": "2600", "solved_by": "x1118"},
{"url": "https://codeforces.com//problemset/problem/1270/E", "name": "Divide Points", "tags": ["constructive algorithms", "geometry", "math"], "problem_rating": "2300", "solved_by": "x2360"},
{"url": "https://codeforces.com//problemset/problem/1270/D", "name": "Strange Device", "tags": ["constructive algorithms", "interactive", "math", "sortings"], "problem_rating": "1900", "solved_by": "x4652"},
{"url": "https://codeforces.com//problemset/problem/1270/C", "name": "Make Good", "tags": ["bitmasks", "constructive algorithms", "math"], "problem_rating": "1400", "solved_by": "x13932"},
{"url": "https://codeforces.com//problemset/problem/1270/B", "name": "Interesting Subarray", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x16262"},
{"url": "https://codeforces.com//problemset/problem/1270/A", "name": "Card Game", "tags": ["games", "greedy", "math"], "problem_rating": "800", "solved_by": "x16911"},
{"url": "https://codeforces.com//problemset/problem/1269/B", "name": "Modulo Equality", "tags": ["brute force", "sortings"], "problem_rating": "1500", "solved_by": "x9087"},
{"url": "https://codeforces.com//problemset/problem/1269/A", "name": "Equation", "tags": ["brute force", "math"], "problem_rating": "800", "solved_by": "x21303"},
{"url": "https://codeforces.com//problemset/problem/1268/E", "name": "Happy Cactus", "tags": ["dp"], "problem_rating": "3400", "solved_by": "x229"},
{"url": "https://codeforces.com//problemset/problem/1268/D", "name": "Invertation in Tournament", "tags": ["brute force", "divide and conquer", "graphs", "math"], "problem_rating": "3200", "solved_by": "x489"},
{"url": "https://codeforces.com//problemset/problem/1268/C", "name": "K Integers", "tags": ["binary search", "data structures"], "problem_rating": "2300", "solved_by": "x1688"},
{"url": "https://codeforces.com//problemset/problem/1268/B", "name": "Domino for Young", "tags": ["dp", "greedy", "math"], "problem_rating": "2000", "solved_by": "x5835"},
{"url": "https://codeforces.com//problemset/problem/1268/A", "name": "Long Beautiful Integer", "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "problem_rating": "1700", "solved_by": "x8506"},
{"url": "https://codeforces.com//problemset/problem/1267/L", "name": "Lexicography", "tags": ["constructive algorithms", "strings"], "problem_rating": "1800", "solved_by": "x3006"},
{"url": "https://codeforces.com//problemset/problem/1267/K", "name": "Key Storage", "tags": ["combinatorics", "math"], "problem_rating": "2100", "solved_by": "x1881"},
{"url": "https://codeforces.com//problemset/problem/1267/J", "name": "Just Arrange the Icons", "tags": ["greedy", "implementation", "math"], "problem_rating": "1800", "solved_by": "x2783"},
{"url": "https://codeforces.com//problemset/problem/1267/I", "name": "Intriguing Selection", "tags": ["brute force", "constructive algorithms", "implementation", "interactive", "sortings"], "problem_rating": "2600", "solved_by": "x870"},
{"url": "https://codeforces.com//problemset/problem/1267/H", "name": "Help BerLine", "tags": ["constructive algorithms"], "problem_rating": "3200", "solved_by": "x141"},
{"url": "https://codeforces.com//problemset/problem/1267/G", "name": "Game Relics", "tags": ["math", "probabilities"], "problem_rating": "3000", "solved_by": "x637"},
{"url": "https://codeforces.com//problemset/problem/1267/F", "name": "Foolprüf Security", "tags": ["graphs"], "problem_rating": "2600", "solved_by": "x644"},
{"url": "https://codeforces.com//problemset/problem/1267/E", "name": "Elections", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x3153"},
{"url": "https://codeforces.com//problemset/problem/1267/D", "name": "DevOps Best Practices", "tags": ["constructive algorithms"], "problem_rating": "2800", "solved_by": "x209"},
{"url": "https://codeforces.com//problemset/problem/1267/C", "name": "Cactus Revenge", "tags": ["constructive algorithms"], "problem_rating": "3500", "solved_by": "x379"},
{"url": "https://codeforces.com//problemset/problem/1267/B", "name": "Balls of Buma", "tags": [], "problem_rating": "900", "solved_by": "x3953"},
{"url": "https://codeforces.com//problemset/problem/1267/A", "name": "Apprentice Learning Trajectory", "tags": [], "problem_rating": "2400", "solved_by": "x965"},
{"url": "https://codeforces.com//problemset/problem/1266/H", "name": "Red-Blue Graph", "tags": ["dp", "graphs", "math", "matrices", "meet-in-the-middle"], "problem_rating": "3400", "solved_by": "x102"},
{"url": "https://codeforces.com//problemset/problem/1266/G", "name": "Permutation Concatenation", "tags": ["string suffix structures"], "problem_rating": "3300", "solved_by": "x118"},
{"url": "https://codeforces.com//problemset/problem/1266/F", "name": "Almost Same Distance", "tags": ["dfs and similar", "graphs"], "problem_rating": "2900", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1266/E", "name": "Spaceship Solitaire", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2216"},
{"url": "https://codeforces.com//problemset/problem/1266/D", "name": "Decreasing Debts", "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"], "problem_rating": "2000", "solved_by": "x3552"},
{"url": "https://codeforces.com//problemset/problem/1266/C", "name": "Diverse Matrix", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1400", "solved_by": "x9588"},
{"url": "https://codeforces.com//problemset/problem/1266/B", "name": "Dice Tower", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x14782"},
{"url": "https://codeforces.com//problemset/problem/1266/A", "name": "Competitive Programmer", "tags": ["chinese remainder theorem", "math"], "problem_rating": "1000", "solved_by": "x15469"},
{"url": "https://codeforces.com//problemset/problem/1265/E", "name": "Beautiful Mirrors", "tags": ["data structures", "dp", "math", "probabilities"], "problem_rating": "2100", "solved_by": "x3563"},
{"url": "https://codeforces.com//problemset/problem/1265/B", "name": "Beautiful Numbers", "tags": ["data structures", "implementation", "math", "two pointers"], "problem_rating": "1300", "solved_by": "x12524"},
{"url": "https://codeforces.com//problemset/problem/1265/A", "name": "Beautiful String", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1000", "solved_by": "x15006"},
{"url": "https://codeforces.com//problemset/problem/1264/F", "name": "Beautiful Fibonacci Problem", "tags": ["constructive algorithms", "number theory"], "problem_rating": "3500", "solved_by": "x902"},
{"url": "https://codeforces.com//problemset/problem/1264/E", "name": "Beautiful League", "tags": ["constructive algorithms", "flows", "graph matchings"], "problem_rating": "2700", "solved_by": "x776"},
{"url": "https://codeforces.com//problemset/problem/1264/D2", "name": "Beautiful Bracket Sequence (hard version)", "tags": ["combinatorics", "probabilities"], "problem_rating": "2900", "solved_by": "x880"},
{"url": "https://codeforces.com//problemset/problem/1264/D1", "name": "Beautiful Bracket Sequence (easy version)", "tags": ["combinatorics", "dp", "probabilities"], "problem_rating": "2600", "solved_by": "x1204"},
{"url": "https://codeforces.com//problemset/problem/1264/C", "name": "Beautiful Mirrors with queries", "tags": ["data structures", "probabilities"], "problem_rating": "2400", "solved_by": "x1133"},
{"url": "https://codeforces.com//problemset/problem/1264/B", "name": "Beautiful Sequence", "tags": ["brute force", "constructive algorithms", "greedy"], "problem_rating": "1900", "solved_by": "x5767"},
{"url": "https://codeforces.com//problemset/problem/1264/A", "name": "Beautiful Regional Contest", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x10019"},
{"url": "https://codeforces.com//problemset/problem/1263/F", "name": "Economic Difficulties", "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x863"},
{"url": "https://codeforces.com//problemset/problem/1263/E", "name": "Editor", "tags": ["data structures", "implementation"], "problem_rating": "2100", "solved_by": "x2761"},
{"url": "https://codeforces.com//problemset/problem/1263/D", "name": "Secret Passwords", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1500", "solved_by": "x13726"},
{"url": "https://codeforces.com//problemset/problem/1263/C", "name": "Everyone is a Winner!", "tags": ["binary search", "math", "meet-in-the-middle", "number theory"], "problem_rating": "1400", "solved_by": "x13581"},
{"url": "https://codeforces.com//problemset/problem/1263/B", "name": "PIN Codes", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11301"},
{"url": "https://codeforces.com//problemset/problem/1263/A", "name": "Sweet Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16245"},
{"url": "https://codeforces.com//problemset/problem/1261/F", "name": "Xor-Set", "tags": ["bitmasks", "divide and conquer", "math"], "problem_rating": "3100", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/1260/F", "name": "Colored Tree", "tags": ["data structures", "trees"], "problem_rating": "2700", "solved_by": "x492"},
{"url": "https://codeforces.com//problemset/problem/1260/E", "name": "Tournament", "tags": ["brute force", "dp", "greedy"], "problem_rating": "2400", "solved_by": "x1691"},
{"url": "https://codeforces.com//problemset/problem/1260/D", "name": "A Game with Traps", "tags": ["binary search", "dp", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x3807"},
{"url": "https://codeforces.com//problemset/problem/1260/C", "name": "Infinite Fence", "tags": ["greedy", "math", "number theory"], "problem_rating": "1700", "solved_by": "x8181"},
{"url": "https://codeforces.com//problemset/problem/1260/B", "name": "Obtain Two Zeroes", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x15599"},
{"url": "https://codeforces.com//problemset/problem/1260/A", "name": "Heating", "tags": ["math"], "problem_rating": "1000", "solved_by": "x14502"},
{"url": "https://codeforces.com//problemset/problem/1257/G", "name": "Divisor Set", "tags": ["divide and conquer", "fft", "greedy", "math", "number theory"], "problem_rating": "2600", "solved_by": "x593"},
{"url": "https://codeforces.com//problemset/problem/1257/F", "name": "Make Them Similar", "tags": ["bitmasks", "brute force", "hashing", "meet-in-the-middle"], "problem_rating": "2400", "solved_by": "x1982"},
{"url": "https://codeforces.com//problemset/problem/1257/E", "name": "The Contest", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2000", "solved_by": "x4168"},
{"url": "https://codeforces.com//problemset/problem/1257/D", "name": "Yet Another Monster Killing Problem", "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "problem_rating": "1700", "solved_by": "x7484"},
{"url": "https://codeforces.com//problemset/problem/1257/C", "name": "Dominated Subarray", "tags": ["greedy", "implementation", "sortings", "strings", "two pointers"], "problem_rating": "1200", "solved_by": "x15822"},
{"url": "https://codeforces.com//problemset/problem/1257/B", "name": "Magic Stick", "tags": ["math"], "problem_rating": "1000", "solved_by": "x20121"},
{"url": "https://codeforces.com//problemset/problem/1257/A", "name": "Two Rival Students", "tags": ["greedy", "math"], "problem_rating": "800", "solved_by": "x20322"},
{"url": "https://codeforces.com//problemset/problem/1256/F", "name": "Equalizing Two Strings", "tags": ["constructive algorithms", "sortings", "strings"], "problem_rating": "2000", "solved_by": "x3263"},
{"url": "https://codeforces.com//problemset/problem/1256/E", "name": "Yet Another Division Into Teams", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x4071"},
{"url": "https://codeforces.com//problemset/problem/1256/D", "name": "Binary String Minimizing", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x11940"},
{"url": "https://codeforces.com//problemset/problem/1256/C", "name": "Platforms Jumping", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x6834"},
{"url": "https://codeforces.com//problemset/problem/1256/B", "name": "Minimize the Permutation", "tags": ["greedy"], "problem_rating": "1400", "solved_by": "x13008"},
{"url": "https://codeforces.com//problemset/problem/1256/A", "name": "Payment Without Change", "tags": ["math"], "problem_rating": "1000", "solved_by": "x29050"},
{"url": "https://codeforces.com//problemset/problem/1255/C", "name": "League of Leesins", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1600", "solved_by": "x6668"},
{"url": "https://codeforces.com//problemset/problem/1255/B", "name": "Fridge Lockers", "tags": ["graphs", "implementation"], "problem_rating": "1100", "solved_by": "x11887"},
{"url": "https://codeforces.com//problemset/problem/1255/A", "name": "Changing Volume", "tags": ["math"], "problem_rating": "800", "solved_by": "x17087"},
{"url": "https://codeforces.com//problemset/problem/1254/E", "name": "Send Tree to Charlie", "tags": ["combinatorics", "dfs and similar", "dsu", "trees"], "problem_rating": "3300", "solved_by": "x263"},
{"url": "https://codeforces.com//problemset/problem/1254/D", "name": "Tree Queries", "tags": ["data structures", "probabilities", "trees"], "problem_rating": "2700", "solved_by": "x1187"},
{"url": "https://codeforces.com//problemset/problem/1254/C", "name": "Point Ordering", "tags": ["constructive algorithms", "geometry", "interactive", "math"], "problem_rating": "2300", "solved_by": "x1400"},
{"url": "https://codeforces.com//problemset/problem/1254/B2", "name": "Send Boxes to Alice (Hard Version)", "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "problem_rating": "2100", "solved_by": "x3124"},
{"url": "https://codeforces.com//problemset/problem/1254/B1", "name": "Send Boxes to Alice (Easy Version)", "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "problem_rating": "1800", "solved_by": "x4591"},
{"url": "https://codeforces.com//problemset/problem/1254/A", "name": "Feeding Chicken", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1700", "solved_by": "x5144"},
{"url": "https://codeforces.com//problemset/problem/1253/F", "name": "Cheap Robot", "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"], "problem_rating": "2500", "solved_by": "x1643"},
{"url": "https://codeforces.com//problemset/problem/1253/E", "name": "Antenna Coverage", "tags": ["data structures", "dp", "greedy", "sortings"], "problem_rating": "2200", "solved_by": "x2787"},
{"url": "https://codeforces.com//problemset/problem/1253/D", "name": "Harmonious Graph", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x9075"},
{"url": "https://codeforces.com//problemset/problem/1253/C", "name": "Sweets Eating", "tags": ["dp", "greedy", "math", "sortings"], "problem_rating": "1500", "solved_by": "x14105"},
{"url": "https://codeforces.com//problemset/problem/1253/B", "name": "Silly Mistake", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x11118"},
{"url": "https://codeforces.com//problemset/problem/1253/A", "name": "Single Push", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x17945"},
{"url": "https://codeforces.com//problemset/problem/1252/L", "name": "Road Construction", "tags": ["flows", "graphs"], "problem_rating": "2300", "solved_by": "x577"},
{"url": "https://codeforces.com//problemset/problem/1252/K", "name": "Addition Robot", "tags": ["data structures", "math", "matrices"], "problem_rating": "2100", "solved_by": "x1828"},
{"url": "https://codeforces.com//problemset/problem/1252/J", "name": "Tiling Terrace", "tags": ["brute force", "dp"], "problem_rating": "2300", "solved_by": "x695"},
{"url": "https://codeforces.com//problemset/problem/1252/I", "name": "Mission Possible", "tags": [], "problem_rating": "3000", "solved_by": "x31"},
{"url": "https://codeforces.com//problemset/problem/1252/H", "name": "Twin Buildings", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x2608"},
{"url": "https://codeforces.com//problemset/problem/1252/G", "name": "Performance Review", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x1388"},
{"url": "https://codeforces.com//problemset/problem/1252/F", "name": "Regular Forestation", "tags": ["hashing", "trees"], "problem_rating": "2400", "solved_by": "x908"},
{"url": "https://codeforces.com//problemset/problem/1252/E", "name": "Songwriter", "tags": ["greedy", "two pointers"], "problem_rating": "2200", "solved_by": "x1227"},
{"url": "https://codeforces.com//problemset/problem/1252/D", "name": "Find String in a Grid", "tags": ["data structures", "dp", "strings", "trees"], "problem_rating": "3000", "solved_by": "x333"},
{"url": "https://codeforces.com//problemset/problem/1252/C", "name": "Even Path", "tags": ["data structures", "implementation"], "problem_rating": "1600", "solved_by": "x3649"},
{"url": "https://codeforces.com//problemset/problem/1252/B", "name": "Cleaning Robots", "tags": ["dp", "trees"], "problem_rating": "2300", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/1252/A", "name": "Copying Homework", "tags": [], "problem_rating": "1000", "solved_by": "x5612"},
{"url": "https://codeforces.com//problemset/problem/1251/F", "name": "Red-White Fence", "tags": ["combinatorics", "fft"], "problem_rating": "2500", "solved_by": "x807"},
{"url": "https://codeforces.com//problemset/problem/1251/E2", "name": "Voting (Hard Version)", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "2400", "solved_by": "x2563"},
{"url": "https://codeforces.com//problemset/problem/1251/E1", "name": "Voting (Easy Version)", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x2271"},
{"url": "https://codeforces.com//problemset/problem/1251/D", "name": "Salary Changing", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1900", "solved_by": "x5861"},
{"url": "https://codeforces.com//problemset/problem/1251/C", "name": "Minimize The Integer", "tags": ["greedy", "two pointers"], "problem_rating": "1600", "solved_by": "x12107"},
{"url": "https://codeforces.com//problemset/problem/1251/B", "name": "Binary Palindromes", "tags": ["greedy", "strings"], "problem_rating": "1400", "solved_by": "x10931"},
{"url": "https://codeforces.com//problemset/problem/1251/A", "name": "Broken Keyboard", "tags": ["brute force", "strings", "two pointers"], "problem_rating": "1000", "solved_by": "x19356"},
{"url": "https://codeforces.com//problemset/problem/1250/N", "name": "Wires", "tags": ["dfs and similar", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x1567"},
{"url": "https://codeforces.com//problemset/problem/1250/M", "name": "SmartGarden", "tags": ["constructive algorithms", "divide and conquer"], "problem_rating": "2500", "solved_by": "x355"},
{"url": "https://codeforces.com//problemset/problem/1250/L", "name": "Divide The Students", "tags": ["binary search", "greedy", "math"], "problem_rating": "1500", "solved_by": "x4057"},
{"url": "https://codeforces.com//problemset/problem/1250/K", "name": "Projectors", "tags": ["flows", "graphs"], "problem_rating": "3100", "solved_by": "x185"},
{"url": "https://codeforces.com//problemset/problem/1250/J", "name": "The Parade", "tags": ["binary search", "greedy"], "problem_rating": "1800", "solved_by": "x2894"},
{"url": "https://codeforces.com//problemset/problem/1250/I", "name": "Show Must Go On", "tags": ["binary search", "brute force", "greedy", "shortest paths"], "problem_rating": "3100", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1250/H", "name": "Happy Birthday", "tags": ["math"], "problem_rating": "1500", "solved_by": "x4014"},
{"url": "https://codeforces.com//problemset/problem/1250/G", "name": "Discarding Game", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2300", "solved_by": "x716"},
{"url": "https://codeforces.com//problemset/problem/1250/F", "name": "Data Center", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x7227"},
{"url": "https://codeforces.com//problemset/problem/1250/E", "name": "The Coronation", "tags": ["graphs", "implementation"], "problem_rating": "2300", "solved_by": "x807"},
{"url": "https://codeforces.com//problemset/problem/1250/D", "name": "Conference Problem", "tags": ["dp"], "problem_rating": "3000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1250/C", "name": "Trip to Saint Petersburg", "tags": ["data structures"], "problem_rating": "2100", "solved_by": "x1300"},
{"url": "https://codeforces.com//problemset/problem/1250/B", "name": "The Feast and the Bus", "tags": ["brute force", "constructive algorithms", "greedy", "math"], "problem_rating": "1800", "solved_by": "x2587"},
{"url": "https://codeforces.com//problemset/problem/1250/A", "name": "Berstagram", "tags": ["implementation"], "problem_rating": "1400", "solved_by": "x4051"},
{"url": "https://codeforces.com//problemset/problem/1249/F", "name": "Maximum Weight Subset", "tags": ["dp", "trees"], "problem_rating": "2200", "solved_by": "x2294"},
{"url": "https://codeforces.com//problemset/problem/1249/E", "name": "By Elevator or Stairs?", "tags": ["dp", "shortest paths"], "problem_rating": "1700", "solved_by": "x9518"},
{"url": "https://codeforces.com//problemset/problem/1249/D2", "name": "Too Many Segments (hard version)", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1800", "solved_by": "x5164"},
{"url": "https://codeforces.com//problemset/problem/1249/D1", "name": "Too Many Segments (easy version)", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x5033"},
{"url": "https://codeforces.com//problemset/problem/1249/C2", "name": "Good Numbers (hard version)", "tags": ["binary search", "greedy", "math", "meet-in-the-middle"], "problem_rating": "1500", "solved_by": "x12498"},
{"url": "https://codeforces.com//problemset/problem/1249/C1", "name": "Good Numbers (easy version)", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x15392"},
{"url": "https://codeforces.com//problemset/problem/1249/B2", "name": "Books Exchange (hard version)", "tags": ["dfs and similar", "dsu", "math"], "problem_rating": "1300", "solved_by": "x16601"},
{"url": "https://codeforces.com//problemset/problem/1249/B1", "name": "Books Exchange (easy version)", "tags": ["dsu", "math"], "problem_rating": "1000", "solved_by": "x20485"},
{"url": "https://codeforces.com//problemset/problem/1249/A", "name": "Yet Another Dividing into Teams", "tags": ["math"], "problem_rating": "800", "solved_by": "x22144"},
{"url": "https://codeforces.com//problemset/problem/1248/D1", "name": "The World Is Just a Programming Task (Easy Version)", "tags": ["brute force", "dp", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2366"},
{"url": "https://codeforces.com//problemset/problem/1248/B", "name": "Grow The Tree", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x16758"},
{"url": "https://codeforces.com//problemset/problem/1248/A", "name": "Integer Points", "tags": ["geometry", "math"], "problem_rating": "1000", "solved_by": "x13995"},
{"url": "https://codeforces.com//problemset/problem/1246/F", "name": "Cursor Distance", "tags": [], "problem_rating": "3500", "solved_by": "x161"},
{"url": "https://codeforces.com//problemset/problem/1245/F", "name": "Daniel and Spring Cleaning", "tags": ["bitmasks", "brute force", "combinatorics", "dp"], "problem_rating": "2300", "solved_by": "x1814"},
{"url": "https://codeforces.com//problemset/problem/1245/E", "name": "Hyakugoku and Ladders", "tags": ["dp", "probabilities", "shortest paths"], "problem_rating": "2300", "solved_by": "x1252"},
{"url": "https://codeforces.com//problemset/problem/1245/D", "name": "Shichikuji and Power Grid", "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"], "problem_rating": "1900", "solved_by": "x7294"},
{"url": "https://codeforces.com//problemset/problem/1245/C", "name": "Constanze's Machine", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x17274"},
{"url": "https://codeforces.com//problemset/problem/1245/B", "name": "Restricted RPS", "tags": ["constructive algorithms", "dp", "greedy"], "problem_rating": "1200", "solved_by": "x13688"},
{"url": "https://codeforces.com//problemset/problem/1245/A", "name": "Good ol' Numbers Coloring", "tags": ["math", "number theory"], "problem_rating": "1000", "solved_by": "x14099"},
{"url": "https://codeforces.com//problemset/problem/1244/G", "name": "Running in Pairs", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "2400", "solved_by": "x1325"},
{"url": "https://codeforces.com//problemset/problem/1244/F", "name": "Chips", "tags": ["constructive algorithms", "implementation"], "problem_rating": "2300", "solved_by": "x1515"},
{"url": "https://codeforces.com//problemset/problem/1244/E", "name": "Minimizing Difference", "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"], "problem_rating": "2000", "solved_by": "x4956"},
{"url": "https://codeforces.com//problemset/problem/1244/D", "name": "Paint the Tree", "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "problem_rating": "1800", "solved_by": "x7452"},
{"url": "https://codeforces.com//problemset/problem/1244/C", "name": "The Football Season", "tags": ["brute force", "math", "number theory"], "problem_rating": "2000", "solved_by": "x7505"},
{"url": "https://codeforces.com//problemset/problem/1244/B", "name": "Rooms and Staircases", "tags": ["brute force", "implementation"], "problem_rating": "1000", "solved_by": "x15520"},
{"url": "https://codeforces.com//problemset/problem/1244/A", "name": "Pens and Pencils", "tags": ["math"], "problem_rating": "800", "solved_by": "x19063"},
{"url": "https://codeforces.com//problemset/problem/1243/B2", "name": "Character Swap (Hard Version)", "tags": ["strings"], "problem_rating": "1600", "solved_by": "x7057"},
{"url": "https://codeforces.com//problemset/problem/1243/B1", "name": "Character Swap (Easy Version)", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x14772"},
{"url": "https://codeforces.com//problemset/problem/1243/A", "name": "Maximum Square", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x15567"},
{"url": "https://codeforces.com//problemset/problem/1242/E", "name": "Planar Perimeter", "tags": ["constructive algorithms", "graphs"], "problem_rating": "3200", "solved_by": "x130"},
{"url": "https://codeforces.com//problemset/problem/1242/D", "name": "Number Discovery", "tags": ["math"], "problem_rating": "3400", "solved_by": "x187"},
{"url": "https://codeforces.com//problemset/problem/1242/C", "name": "Sum Balance", "tags": ["bitmasks", "dfs and similar", "dp", "graphs"], "problem_rating": "2400", "solved_by": "x1622"},
{"url": "https://codeforces.com//problemset/problem/1242/B", "name": "0-1 MST", "tags": ["dfs and similar", "dsu", "graphs", "sortings"], "problem_rating": "1900", "solved_by": "x7365"},
{"url": "https://codeforces.com//problemset/problem/1242/A", "name": "Tile Painting", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1500", "solved_by": "x12507"},
{"url": "https://codeforces.com//problemset/problem/1240/F", "name": "Football", "tags": ["graphs"], "problem_rating": "3100", "solved_by": "x244"},
{"url": "https://codeforces.com//problemset/problem/1239/F", "name": "Swiper, no swiping!", "tags": ["graphs", "implementation"], "problem_rating": "3400", "solved_by": "x249"},
{"url": "https://codeforces.com//problemset/problem/1239/E", "name": "Turtle", "tags": ["dp", "implementation"], "problem_rating": "3100", "solved_by": "x927"},
{"url": "https://codeforces.com//problemset/problem/1239/D", "name": "Catowice City", "tags": ["2-sat", "dfs and similar", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1940"},
{"url": "https://codeforces.com//problemset/problem/1239/C", "name": "Queue in the Train", "tags": ["data structures", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1322"},
{"url": "https://codeforces.com//problemset/problem/1239/B", "name": "The World Is Just a Programming Task (Hard Version)", "tags": ["implementation"], "problem_rating": "2500", "solved_by": "x1029"},
{"url": "https://codeforces.com//problemset/problem/1239/A", "name": "Ivan the Fool and the Probability Theory", "tags": ["combinatorics", "dp", "math"], "problem_rating": "1700", "solved_by": "x7301"},
{"url": "https://codeforces.com//problemset/problem/1238/G", "name": "Adilbek and the Watering System", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "2700", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/1238/F", "name": "The Maximum Subtree", "tags": ["dfs and similar", "dp", "graphs", "trees"], "problem_rating": "2200", "solved_by": "x1841"},
{"url": "https://codeforces.com//problemset/problem/1238/E", "name": "Keyboard Purchase", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2907"},
{"url": "https://codeforces.com//problemset/problem/1238/D", "name": "AB-string", "tags": ["binary search", "combinatorics", "dp", "strings"], "problem_rating": "1900", "solved_by": "x5916"},
{"url": "https://codeforces.com//problemset/problem/1238/C", "name": "Standard Free2play", "tags": ["dp", "greedy", "math"], "problem_rating": "1600", "solved_by": "x7348"},
{"url": "https://codeforces.com//problemset/problem/1238/B", "name": "Kill `Em All", "tags": ["greedy", "sortings"], "problem_rating": "1300", "solved_by": "x13457"},
{"url": "https://codeforces.com//problemset/problem/1238/A", "name": "Prime Subtraction", "tags": ["math", "number theory"], "problem_rating": "900", "solved_by": "x23850"},
{"url": "https://codeforces.com//problemset/problem/1237/H", "name": "Balanced Reversals", "tags": ["constructive algorithms"], "problem_rating": "3300", "solved_by": "x369"},
{"url": "https://codeforces.com//problemset/problem/1237/G", "name": "Balanced Distribution", "tags": ["data structures", "dp", "greedy"], "problem_rating": "3500", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1237/F", "name": "Balanced Domino Placements", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x848"},
{"url": "https://codeforces.com//problemset/problem/1237/E", "name": "Balanced Binary Search Trees", "tags": ["dp", "math"], "problem_rating": "2400", "solved_by": "x1277"},
{"url": "https://codeforces.com//problemset/problem/1237/D", "name": "Balanced Playlist", "tags": ["binary search", "data structures", "implementation"], "problem_rating": "2000", "solved_by": "x4134"},
{"url": "https://codeforces.com//problemset/problem/1237/C2", "name": "Balanced Removals (Harder)", "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"], "problem_rating": "1900", "solved_by": "x4283"},
{"url": "https://codeforces.com//problemset/problem/1237/C1", "name": "Balanced Removals (Easier)", "tags": ["constructive algorithms", "geometry", "greedy"], "problem_rating": "1700", "solved_by": "x6046"},
{"url": "https://codeforces.com//problemset/problem/1237/B", "name": "Balanced Tunnel", "tags": ["data structures", "sortings", "two pointers"], "problem_rating": "1300", "solved_by": "x15436"},
{"url": "https://codeforces.com//problemset/problem/1237/A", "name": "Balanced Rating Changes", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x19294"},
{"url": "https://codeforces.com//problemset/problem/1236/F", "name": "Alice and the Cactus", "tags": ["dfs and similar", "graphs", "math", "probabilities"], "problem_rating": "3000", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1236/E", "name": "Alice and the Unfair Game", "tags": ["binary search", "data structures", "dp", "dsu"], "problem_rating": "2500", "solved_by": "x644"},
{"url": "https://codeforces.com//problemset/problem/1236/D", "name": "Alice and the Doll", "tags": ["brute force", "data structures", "greedy", "implementation"], "problem_rating": "2300", "solved_by": "x1654"},
{"url": "https://codeforces.com//problemset/problem/1236/C", "name": "Labs", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x10066"},
{"url": "https://codeforces.com//problemset/problem/1236/B", "name": "Alice and the List of Presents", "tags": ["combinatorics", "math"], "problem_rating": "1500", "solved_by": "x10938"},
{"url": "https://codeforces.com//problemset/problem/1236/A", "name": "Stones", "tags": ["brute force", "greedy", "math"], "problem_rating": "800", "solved_by": "x16169"},
{"url": "https://codeforces.com//problemset/problem/1234/F", "name": "Yet Another Substring Reverse", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2412"},
{"url": "https://codeforces.com//problemset/problem/1234/E", "name": "Special Permutations", "tags": ["math"], "problem_rating": "2000", "solved_by": "x2754"},
{"url": "https://codeforces.com//problemset/problem/1234/D", "name": "Distinct Characters Queries", "tags": ["data structures"], "problem_rating": "1600", "solved_by": "x14637"},
{"url": "https://codeforces.com//problemset/problem/1234/C", "name": "Pipes", "tags": ["dp", "implementation"], "problem_rating": "1500", "solved_by": "x12455"},
{"url": "https://codeforces.com//problemset/problem/1234/B2", "name": "Social Network (hard version)", "tags": ["data structures", "implementation"], "problem_rating": "1300", "solved_by": "x16761"},
{"url": "https://codeforces.com//problemset/problem/1234/B1", "name": "Social Network (easy version)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x18607"},
{"url": "https://codeforces.com//problemset/problem/1234/A", "name": "Equalize Prices Again", "tags": ["math"], "problem_rating": "800", "solved_by": "x27658"},
{"url": "https://codeforces.com//problemset/problem/1231/E", "name": "Middle-Out", "tags": ["constructive algorithms", "greedy", "strings"], "problem_rating": "2200", "solved_by": "x828"},
{"url": "https://codeforces.com//problemset/problem/1231/C", "name": "Increasing Matrix", "tags": ["greedy"], "problem_rating": "1100", "solved_by": "x3787"},
{"url": "https://codeforces.com//problemset/problem/1230/B", "name": "Ania and Minimizing", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x18570"},
{"url": "https://codeforces.com//problemset/problem/1230/A", "name": "Dawid and Bags of Candies", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x21360"},
{"url": "https://codeforces.com//problemset/problem/1228/F", "name": "One Node is Gone", "tags": ["constructive algorithms", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1228/E", "name": "Another Filling the Grid", "tags": ["combinatorics", "dp", "math"], "problem_rating": "2300", "solved_by": "x2594"},
{"url": "https://codeforces.com//problemset/problem/1228/D", "name": "Complete Tripartite", "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"], "problem_rating": "1900", "solved_by": "x5173"},
{"url": "https://codeforces.com//problemset/problem/1228/C", "name": "Primes and Multiplication", "tags": ["math", "number theory"], "problem_rating": "1700", "solved_by": "x8934"},
{"url": "https://codeforces.com//problemset/problem/1228/B", "name": "Filling the Grid", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x11483"},
{"url": "https://codeforces.com//problemset/problem/1228/A", "name": "Distinct Digits", "tags": ["brute force", "implementation"], "problem_rating": "800", "solved_by": "x21493"},
{"url": "https://codeforces.com//problemset/problem/1227/G", "name": "Not Same", "tags": ["constructive algorithms"], "problem_rating": "2600", "solved_by": "x980"},
{"url": "https://codeforces.com//problemset/problem/1227/F2", "name": "Wrong Answer on test 233 (Hard Version)", "tags": ["combinatorics", "math"], "problem_rating": "2400", "solved_by": "x1479"},
{"url": "https://codeforces.com//problemset/problem/1227/F1", "name": "Wrong Answer on test 233 (Easy Version)", "tags": ["dp"], "problem_rating": "2200", "solved_by": "x1778"},
{"url": "https://codeforces.com//problemset/problem/1227/E", "name": "Arson In Berland Forest", "tags": ["binary search", "graphs", "graphs", "shortest paths"], "problem_rating": "2200", "solved_by": "x1463"},
{"url": "https://codeforces.com//problemset/problem/1227/D2", "name": "Optimal Subsequences (Hard Version)", "tags": ["data structures", "greedy"], "problem_rating": "1800", "solved_by": "x4285"},
{"url": "https://codeforces.com//problemset/problem/1227/D1", "name": "Optimal Subsequences (Easy Version)", "tags": ["data structures", "greedy"], "problem_rating": "1600", "solved_by": "x6350"},
{"url": "https://codeforces.com//problemset/problem/1227/C", "name": "Messy", "tags": ["constructive algorithms"], "problem_rating": "1700", "solved_by": "x5488"},
{"url": "https://codeforces.com//problemset/problem/1227/B", "name": "Box", "tags": ["constructive algorithms"], "problem_rating": "1200", "solved_by": "x9561"},
{"url": "https://codeforces.com//problemset/problem/1227/A", "name": "Math Problem", "tags": ["math"], "problem_rating": "1100", "solved_by": "x9745"},
{"url": "https://codeforces.com//problemset/problem/1225/G", "name": "To Make 1", "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"], "problem_rating": "3100", "solved_by": "x535"},
{"url": "https://codeforces.com//problemset/problem/1225/F", "name": "Tree Factory", "tags": ["constructive algorithms", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x875"},
{"url": "https://codeforces.com//problemset/problem/1225/E", "name": "Rock Is Push", "tags": ["binary search", "dp"], "problem_rating": "2200", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/1225/D", "name": "Power Products", "tags": ["hashing", "math", "number theory"], "problem_rating": "1800", "solved_by": "x7776"},
{"url": "https://codeforces.com//problemset/problem/1225/C", "name": "p-binary", "tags": ["bitmasks", "brute force", "math"], "problem_rating": "1600", "solved_by": "x8871"},
{"url": "https://codeforces.com//problemset/problem/1225/B2", "name": "TV Subscriptions (Hard Version)", "tags": ["implementation", "two pointers"], "problem_rating": "1300", "solved_by": "x10394"},
{"url": "https://codeforces.com//problemset/problem/1225/B1", "name": "TV Subscriptions (Easy Version)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x11802"},
{"url": "https://codeforces.com//problemset/problem/1225/A", "name": "Forgetting Things", "tags": ["math"], "problem_rating": "900", "solved_by": "x15730"},
{"url": "https://codeforces.com//problemset/problem/1223/G", "name": "Wooden Raft", "tags": ["binary search", "math", "number theory"], "problem_rating": "3200", "solved_by": "x228"},
{"url": "https://codeforces.com//problemset/problem/1223/F", "name": "Stack Exterminable Arrays", "tags": ["data structures", "divide and conquer", "dp", "hashing"], "problem_rating": "2600", "solved_by": "x1995"},
{"url": "https://codeforces.com//problemset/problem/1223/E", "name": "Paint the Tree", "tags": ["dp", "sortings", "trees"], "problem_rating": "2100", "solved_by": "x2557"},
{"url": "https://codeforces.com//problemset/problem/1223/D", "name": "Sequence Sorting", "tags": ["dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x3973"},
{"url": "https://codeforces.com//problemset/problem/1223/C", "name": "Save the Nature", "tags": ["binary search", "greedy"], "problem_rating": "1600", "solved_by": "x8085"},
{"url": "https://codeforces.com//problemset/problem/1223/B", "name": "Strings Equalization", "tags": ["strings"], "problem_rating": "1000", "solved_by": "x14654"},
{"url": "https://codeforces.com//problemset/problem/1223/A", "name": "CME", "tags": ["math"], "problem_rating": "800", "solved_by": "x21534"},
{"url": "https://codeforces.com//problemset/problem/1221/G", "name": "Graph And Numbers", "tags": ["bitmasks", "brute force", "combinatorics", "dp", "meet-in-the-middle"], "problem_rating": "2900", "solved_by": "x572"},
{"url": "https://codeforces.com//problemset/problem/1221/F", "name": "Choose a Square", "tags": ["binary search", "data structures", "sortings"], "problem_rating": "2400", "solved_by": "x1025"},
{"url": "https://codeforces.com//problemset/problem/1221/E", "name": "Game With String", "tags": ["games"], "problem_rating": "2500", "solved_by": "x1029"},
{"url": "https://codeforces.com//problemset/problem/1221/D", "name": "Make The Fence Great Again", "tags": ["dp"], "problem_rating": "1800", "solved_by": "x8822"},
{"url": "https://codeforces.com//problemset/problem/1221/C", "name": "Perfect Team", "tags": ["binary search", "math"], "problem_rating": "1200", "solved_by": "x20560"},
{"url": "https://codeforces.com//problemset/problem/1221/B", "name": "Knights", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x11747"},
{"url": "https://codeforces.com//problemset/problem/1221/A", "name": "2048 Game", "tags": ["brute force", "greedy", "math"], "problem_rating": "1000", "solved_by": "x16486"},
{"url": "https://codeforces.com//problemset/problem/1220/G", "name": "Geolocation", "tags": ["geometry"], "problem_rating": "3400", "solved_by": "x49"},
{"url": "https://codeforces.com//problemset/problem/1220/F", "name": "Gardener Alex", "tags": ["binary search", "data structures"], "problem_rating": "2700", "solved_by": "x675"},
{"url": "https://codeforces.com//problemset/problem/1220/E", "name": "Tourism", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2200", "solved_by": "x2708"},
{"url": "https://codeforces.com//problemset/problem/1220/D", "name": "Alex and Julian", "tags": ["bitmasks", "math", "number theory"], "problem_rating": "1900", "solved_by": "x3864"},
{"url": "https://codeforces.com//problemset/problem/1220/C", "name": "Substring Game in the Lesson", "tags": ["games", "greedy", "strings"], "problem_rating": "1300", "solved_by": "x10132"},
{"url": "https://codeforces.com//problemset/problem/1220/B", "name": "Multiplication Table", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x11541"},
{"url": "https://codeforces.com//problemset/problem/1220/A", "name": "Cards", "tags": ["implementation", "sortings", "strings"], "problem_rating": "800", "solved_by": "x29350"},
{"url": "https://codeforces.com//problemset/problem/1219/G", "name": "Harvester", "tags": ["implementation"], "problem_rating": "2000", "solved_by": "x646"},
{"url": "https://codeforces.com//problemset/problem/1219/C", "name": "Periodic integer number", "tags": ["implementation", "strings"], "problem_rating": "1700", "solved_by": "x1769"},
{"url": "https://codeforces.com//problemset/problem/1218/I", "name": "The Light Square", "tags": ["2-sat", "dfs and similar", "greedy"], "problem_rating": "2100", "solved_by": "x583"},
{"url": "https://codeforces.com//problemset/problem/1218/H", "name": "Function Composition", "tags": ["dfs and similar"], "problem_rating": "2900", "solved_by": "x110"},
{"url": "https://codeforces.com//problemset/problem/1218/G", "name": "Alpha planetary system", "tags": ["constructive algorithms", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x94"},
{"url": "https://codeforces.com//problemset/problem/1218/F", "name": "Workout plan", "tags": ["data structures", "greedy"], "problem_rating": "1500", "solved_by": "x2904"},
{"url": "https://codeforces.com//problemset/problem/1218/E", "name": "Product Tuples", "tags": ["divide and conquer", "fft"], "problem_rating": "2500", "solved_by": "x362"},
{"url": "https://codeforces.com//problemset/problem/1218/D", "name": "Xor Spanning Tree", "tags": ["divide and conquer", "fft", "graphs"], "problem_rating": "2400", "solved_by": "x493"},
{"url": "https://codeforces.com//problemset/problem/1218/C", "name": "Jumping Transformers", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1218/B", "name": "Guarding warehouses", "tags": ["data structures", "geometry"], "problem_rating": "3000", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1218/A", "name": "BubbleReactor", "tags": ["dp", "graphs"], "problem_rating": "2800", "solved_by": "x124"},
{"url": "https://codeforces.com//problemset/problem/1217/F", "name": "Forced Online Queries Problem", "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "problem_rating": "2600", "solved_by": "x562"},
{"url": "https://codeforces.com//problemset/problem/1217/E", "name": "Sum Queries?", "tags": ["data structures", "greedy", "implementation", "math"], "problem_rating": "2300", "solved_by": "x1851"},
{"url": "https://codeforces.com//problemset/problem/1217/D", "name": "Coloring Edges", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2100", "solved_by": "x5162"},
{"url": "https://codeforces.com//problemset/problem/1217/C", "name": "The Number Of Good Substrings", "tags": ["binary search", "bitmasks", "brute force"], "problem_rating": "1700", "solved_by": "x7364"},
{"url": "https://codeforces.com//problemset/problem/1217/B", "name": "Zmei Gorynich", "tags": ["greedy", "math"], "problem_rating": "1600", "solved_by": "x11122"},
{"url": "https://codeforces.com//problemset/problem/1217/A", "name": "Creating a Character", "tags": ["binary search", "math"], "problem_rating": "1300", "solved_by": "x14847"},
{"url": "https://codeforces.com//problemset/problem/1216/F", "name": "Wi-Fi", "tags": ["data structures", "dp", "greedy"], "problem_rating": "2100", "solved_by": "x2560"},
{"url": "https://codeforces.com//problemset/problem/1216/E2", "name": "Numerical Sequence (hard version)", "tags": ["binary search", "math"], "problem_rating": "2200", "solved_by": "x1442"},
{"url": "https://codeforces.com//problemset/problem/1216/E1", "name": "Numerical Sequence (easy version)", "tags": ["binary search", "brute force", "math"], "problem_rating": "1900", "solved_by": "x3404"},
{"url": "https://codeforces.com//problemset/problem/1216/D", "name": "Swords", "tags": ["math"], "problem_rating": "1300", "solved_by": "x10998"},
{"url": "https://codeforces.com//problemset/problem/1216/C", "name": "White Sheet", "tags": ["geometry", "math"], "problem_rating": "1700", "solved_by": "x9097"},
{"url": "https://codeforces.com//problemset/problem/1216/B", "name": "Shooting", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x18252"},
{"url": "https://codeforces.com//problemset/problem/1216/A", "name": "Prefixes", "tags": ["strings"], "problem_rating": "800", "solved_by": "x18509"},
{"url": "https://codeforces.com//problemset/problem/1215/F", "name": "Radio Stations", "tags": ["2-sat"], "problem_rating": "2700", "solved_by": "x948"},
{"url": "https://codeforces.com//problemset/problem/1215/E", "name": "Marbles", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2949"},
{"url": "https://codeforces.com//problemset/problem/1215/D", "name": "Ticket Game", "tags": ["games", "greedy", "math"], "problem_rating": "1700", "solved_by": "x6040"},
{"url": "https://codeforces.com//problemset/problem/1215/C", "name": "Swap Letters", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x11022"},
{"url": "https://codeforces.com//problemset/problem/1215/B", "name": "The Number of Products", "tags": ["combinatorics", "dp", "implementation"], "problem_rating": "1400", "solved_by": "x12580"},
{"url": "https://codeforces.com//problemset/problem/1215/A", "name": "Yellow Cards", "tags": ["greedy", "implementation", "math"], "problem_rating": "1000", "solved_by": "x11484"},
{"url": "https://codeforces.com//problemset/problem/1214/H", "name": "Tiles Placement", "tags": ["constructive algorithms", "dfs and similar", "trees"], "problem_rating": "2800", "solved_by": "x378"},
{"url": "https://codeforces.com//problemset/problem/1214/G", "name": "Feeling Good", "tags": ["bitmasks", "data structures"], "problem_rating": "3200", "solved_by": "x286"},
{"url": "https://codeforces.com//problemset/problem/1214/F", "name": "Employment", "tags": ["greedy", "sortings"], "problem_rating": "2700", "solved_by": "x426"},
{"url": "https://codeforces.com//problemset/problem/1214/E", "name": "Petya and Construction Set", "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"], "problem_rating": "2000", "solved_by": "x2664"},
{"url": "https://codeforces.com//problemset/problem/1214/D", "name": "Treasure Island", "tags": ["dfs and similar", "dp", "flows", "hashing"], "problem_rating": "1900", "solved_by": "x5130"},
{"url": "https://codeforces.com//problemset/problem/1214/C", "name": "Bad Sequence", "tags": ["data structures", "greedy"], "problem_rating": "1200", "solved_by": "x13134"},
{"url": "https://codeforces.com//problemset/problem/1214/B", "name": "Badges", "tags": ["brute force", "math"], "problem_rating": "1100", "solved_by": "x10769"},
{"url": "https://codeforces.com//problemset/problem/1214/A", "name": "Optimal Currency Exchange", "tags": ["brute force", "math"], "problem_rating": "1400", "solved_by": "x9031"},
{"url": "https://codeforces.com//problemset/problem/1213/G", "name": "Path Queries", "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "problem_rating": "1800", "solved_by": "x7003"},
{"url": "https://codeforces.com//problemset/problem/1213/F", "name": "Unstable String Sort", "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "problem_rating": "2100", "solved_by": "x2540"},
{"url": "https://codeforces.com//problemset/problem/1213/E", "name": "Two Small Strings", "tags": ["brute force", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x5113"},
{"url": "https://codeforces.com//problemset/problem/1213/D2", "name": "Equalizing by Division (hard version)", "tags": ["brute force", "math", "sortings"], "problem_rating": "1600", "solved_by": "x11344"},
{"url": "https://codeforces.com//problemset/problem/1213/D1", "name": "Equalizing by Division (easy version)", "tags": ["brute force", "implementation"], "problem_rating": "1500", "solved_by": "x11297"},
{"url": "https://codeforces.com//problemset/problem/1213/C", "name": "Book Reading", "tags": ["math"], "problem_rating": "1200", "solved_by": "x18261"},
{"url": "https://codeforces.com//problemset/problem/1213/B", "name": "Bad Prices", "tags": ["data structures", "implementation"], "problem_rating": "1100", "solved_by": "x26181"},
{"url": "https://codeforces.com//problemset/problem/1213/A", "name": "Chips Moving", "tags": ["math"], "problem_rating": "900", "solved_by": "x23882"},
{"url": "https://codeforces.com//problemset/problem/1211/I", "name": "Unusual Graph", "tags": ["*special problem", "graphs"], "problem_rating": "3000", "solved_by": "x37"},
{"url": "https://codeforces.com//problemset/problem/1211/H", "name": "Road Repair in Treeland", "tags": ["*special problem", "binary search", "dp", "trees"], "problem_rating": "3100", "solved_by": "x45"},
{"url": "https://codeforces.com//problemset/problem/1211/G", "name": "King's Path", "tags": ["*special problem", "math", "trees"], "problem_rating": "2500", "solved_by": "x70"},
{"url": "https://codeforces.com//problemset/problem/1211/F", "name": "kotlinkotlinkotlinkotlin...", "tags": ["*special problem", "graphs", "implementation", "strings"], "problem_rating": "2300", "solved_by": "x121"},
{"url": "https://codeforces.com//problemset/problem/1211/E", "name": "Double Permutation Inc.", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": "2000", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1211/D", "name": "Teams", "tags": ["*special problem", "binary search", "greedy", "math"], "problem_rating": "2000", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/1211/C", "name": "Ice Cream", "tags": ["*special problem", "greedy", "sortings"], "problem_rating": "1700", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1211/B", "name": "Traveling Around the Golden Ring of Berland", "tags": ["*special problem", "implementation"], "problem_rating": "1500", "solved_by": "x760"},
{"url": "https://codeforces.com//problemset/problem/1211/A", "name": "Three Problems", "tags": ["*special problem", "implementation"], "problem_rating": "1000", "solved_by": "x1382"},
{"url": "https://codeforces.com//problemset/problem/1210/G", "name": "Mateusz and Escape Room", "tags": ["dp"], "problem_rating": "3500", "solved_by": "x159"},
{"url": "https://codeforces.com//problemset/problem/1210/F2", "name": "Marek and Matching (hard version)", "tags": ["brute force", "probabilities"], "problem_rating": "3200", "solved_by": "x194"},
{"url": "https://codeforces.com//problemset/problem/1210/F1", "name": "Marek and Matching (easy version)", "tags": ["brute force", "probabilities"], "problem_rating": "3100", "solved_by": "x191"},
{"url": "https://codeforces.com//problemset/problem/1210/E", "name": "Wojtek and Card Tricks", "tags": ["math"], "problem_rating": "2700", "solved_by": "x394"},
{"url": "https://codeforces.com//problemset/problem/1210/D", "name": "Konrad and Company Evaluation", "tags": ["graphs"], "problem_rating": "2400", "solved_by": "x1488"},
{"url": "https://codeforces.com//problemset/problem/1210/C", "name": "Kamil and Making a Stream", "tags": ["math", "number theory", "trees"], "problem_rating": "2000", "solved_by": "x3292"},
{"url": "https://codeforces.com//problemset/problem/1210/B", "name": "Marcin and Training Camp", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5737"},
{"url": "https://codeforces.com//problemset/problem/1210/A", "name": "Anadi and Domino", "tags": ["brute force", "graphs"], "problem_rating": "1700", "solved_by": "x5133"},
{"url": "https://codeforces.com//problemset/problem/1209/H", "name": "Moving Walkways", "tags": ["data structures", "greedy", "math"], "problem_rating": "3300", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1209/G2", "name": "Into Blocks (hard version)", "tags": ["data structures"], "problem_rating": "3200", "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1209/G1", "name": "Into Blocks (easy version)", "tags": ["data structures", "dsu", "greedy", "implementation", "two pointers"], "problem_rating": "2000", "solved_by": "x3132"},
{"url": "https://codeforces.com//problemset/problem/1209/F", "name": "Koala and Notebook", "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"], "problem_rating": "2600", "solved_by": "x1116"},
{"url": "https://codeforces.com//problemset/problem/1209/E2", "name": "Rotate Columns (hard version)", "tags": ["bitmasks", "dp", "greedy", "sortings"], "problem_rating": "2500", "solved_by": "x1896"},
{"url": "https://codeforces.com//problemset/problem/1209/E1", "name": "Rotate Columns (easy version)", "tags": ["bitmasks", "brute force", "dp", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x2911"},
{"url": "https://codeforces.com//problemset/problem/1209/D", "name": "Cow and Snacks", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1700", "solved_by": "x9114"},
{"url": "https://codeforces.com//problemset/problem/1209/C", "name": "Paint the Digits", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1500", "solved_by": "x7436"},
{"url": "https://codeforces.com//problemset/problem/1209/B", "name": "Koala and Lights", "tags": ["implementation", "math", "number theory"], "problem_rating": "1300", "solved_by": "x8127"},
{"url": "https://codeforces.com//problemset/problem/1209/A", "name": "Paint the Numbers", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x12143"},
{"url": "https://codeforces.com//problemset/problem/1208/H", "name": "Red Blue Tree", "tags": ["data structures", "implementation", "trees"], "problem_rating": "3500", "solved_by": "x147"},
{"url": "https://codeforces.com//problemset/problem/1208/G", "name": "Polygons", "tags": ["greedy", "math", "number theory"], "problem_rating": "2800", "solved_by": "x739"},
{"url": "https://codeforces.com//problemset/problem/1208/F", "name": "Bits And Pieces", "tags": ["bitmasks", "dfs and similar", "dp", "greedy"], "problem_rating": "2600", "solved_by": "x2236"},
{"url": "https://codeforces.com//problemset/problem/1208/E", "name": "Let Them Slide", "tags": ["data structures", "implementation"], "problem_rating": "2200", "solved_by": "x2011"},
{"url": "https://codeforces.com//problemset/problem/1208/D", "name": "Restore Permutation", "tags": ["binary search", "data structures", "greedy", "implementation"], "problem_rating": "1900", "solved_by": "x4831"},
{"url": "https://codeforces.com//problemset/problem/1208/C", "name": "Magic Grid", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x5971"},
{"url": "https://codeforces.com//problemset/problem/1208/B", "name": "Uniqueness", "tags": ["binary search", "brute force", "implementation", "two pointers"], "problem_rating": "1500", "solved_by": "x10295"},
{"url": "https://codeforces.com//problemset/problem/1208/A", "name": "XORinacci", "tags": ["math"], "problem_rating": "900", "solved_by": "x16588"},
{"url": "https://codeforces.com//problemset/problem/1207/G", "name": "Indie Album", "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "problem_rating": "2700", "solved_by": "x990"},
{"url": "https://codeforces.com//problemset/problem/1207/F", "name": "Remainder Problem", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "2100", "solved_by": "x5040"},
{"url": "https://codeforces.com//problemset/problem/1207/E", "name": "XOR Guessing", "tags": ["bitmasks", "interactive", "math"], "problem_rating": "1900", "solved_by": "x5837"},
{"url": "https://codeforces.com//problemset/problem/1207/D", "name": "Number Of Permutations", "tags": ["combinatorics"], "problem_rating": "1800", "solved_by": "x6021"},
{"url": "https://codeforces.com//problemset/problem/1207/C", "name": "Gas Pipeline", "tags": ["dp", "greedy"], "problem_rating": "1500", "solved_by": "x9766"},
{"url": "https://codeforces.com//problemset/problem/1207/B", "name": "Square Filling", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x13144"},
{"url": "https://codeforces.com//problemset/problem/1207/A", "name": "There Are Two Types Of Burgers", "tags": ["brute force", "greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x21595"},
{"url": "https://codeforces.com//problemset/problem/1206/B", "name": "Make Product Equal One", "tags": ["dp", "implementation"], "problem_rating": "900", "solved_by": "x26581"},
{"url": "https://codeforces.com//problemset/problem/1206/A", "name": "Choose Two Numbers", "tags": ["math", "sortings"], "problem_rating": "800", "solved_by": "x23886"},
{"url": "https://codeforces.com//problemset/problem/1205/F", "name": "Beauty of a Permutation", "tags": ["constructive algorithms", "math"], "problem_rating": "3400", "solved_by": "x122"},
{"url": "https://codeforces.com//problemset/problem/1205/E", "name": "Expected Value Again", "tags": ["combinatorics", "strings"], "problem_rating": "3100", "solved_by": "x273"},
{"url": "https://codeforces.com//problemset/problem/1205/D", "name": "Almost All", "tags": ["constructive algorithms", "trees"], "problem_rating": "2700", "solved_by": "x633"},
{"url": "https://codeforces.com//problemset/problem/1205/C", "name": "Palindromic Paths", "tags": ["implementation", "interactive"], "problem_rating": "2400", "solved_by": "x1146"},
{"url": "https://codeforces.com//problemset/problem/1205/B", "name": "Shortest Cycle", "tags": ["bitmasks", "brute force", "graphs", "shortest paths"], "problem_rating": "1900", "solved_by": "x6552"},
{"url": "https://codeforces.com//problemset/problem/1205/A", "name": "Almost Equal", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1200", "solved_by": "x14022"},
{"url": "https://codeforces.com//problemset/problem/1204/E", "name": "Natasha, Sasha and the Prefix Sums", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1635"},
{"url": "https://codeforces.com//problemset/problem/1204/D2", "name": "Kirk and a Binary String (hard version)", "tags": ["data structures", "greedy", "math", "strings"], "problem_rating": "2100", "solved_by": "x3211"},
{"url": "https://codeforces.com//problemset/problem/1204/D1", "name": "Kirk and a Binary String (easy version)", "tags": ["brute force", "greedy", "strings"], "problem_rating": "2000", "solved_by": "x3044"},
{"url": "https://codeforces.com//problemset/problem/1204/C", "name": "Anna, Svyatoslav and Maps", "tags": ["dp", "graphs", "greedy", "shortest paths"], "problem_rating": "1700", "solved_by": "x6640"},
{"url": "https://codeforces.com//problemset/problem/1204/B", "name": "Mislove Has Lost an Array", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x17402"},
{"url": "https://codeforces.com//problemset/problem/1204/A", "name": "BowWow and the Timetable", "tags": ["math"], "problem_rating": "1000", "solved_by": "x20461"},
{"url": "https://codeforces.com//problemset/problem/1203/F2", "name": "Complete the Projects (hard version)", "tags": ["dp", "greedy"], "problem_rating": "2300", "solved_by": "x2807"},
{"url": "https://codeforces.com//problemset/problem/1203/F1", "name": "Complete the Projects (easy version)", "tags": ["greedy"], "problem_rating": "2100", "solved_by": "x3468"},
{"url": "https://codeforces.com//problemset/problem/1203/E", "name": "Boxers", "tags": ["greedy", "sortings"], "problem_rating": "1500", "solved_by": "x13697"},
{"url": "https://codeforces.com//problemset/problem/1203/D2", "name": "Remove the Substring (hard version)", "tags": ["binary search", "greedy", "implementation", "two pointers"], "problem_rating": "1700", "solved_by": "x7253"},
{"url": "https://codeforces.com//problemset/problem/1203/D1", "name": "Remove the Substring (easy version)", "tags": ["greedy", "implementation"], "problem_rating": "1600", "solved_by": "x8661"},
{"url": "https://codeforces.com//problemset/problem/1203/C", "name": "Common Divisors", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x20182"},
{"url": "https://codeforces.com//problemset/problem/1203/B", "name": "Equal Rectangles", "tags": ["greedy", "math"], "problem_rating": "1200", "solved_by": "x15793"},
{"url": "https://codeforces.com//problemset/problem/1203/A", "name": "Circle of Students", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x16624"},
{"url": "https://codeforces.com//problemset/problem/1202/F", "name": "You Are Given Some Letters...", "tags": ["binary search", "implementation", "math"], "problem_rating": "2700", "solved_by": "x387"},
{"url": "https://codeforces.com//problemset/problem/1202/E", "name": "You Are Given Some Strings...", "tags": ["brute force", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x2009"},
{"url": "https://codeforces.com//problemset/problem/1202/D", "name": "Print a 1337-string...", "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "problem_rating": "1900", "solved_by": "x5052"},
{"url": "https://codeforces.com//problemset/problem/1202/C", "name": "You Are Given a WASD-string...", "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"], "problem_rating": "2100", "solved_by": "x2506"},
{"url": "https://codeforces.com//problemset/problem/1202/B", "name": "You Are Given a Decimal String...", "tags": ["brute force", "dp", "shortest paths"], "problem_rating": "1700", "solved_by": "x4538"},
{"url": "https://codeforces.com//problemset/problem/1202/A", "name": "You Are Given Two Binary Strings...", "tags": ["bitmasks", "greedy"], "problem_rating": "1100", "solved_by": "x9139"},
{"url": "https://codeforces.com//problemset/problem/1201/E2", "name": "Knightmare (hard)", "tags": ["graphs", "interactive", "shortest paths"], "problem_rating": "3000", "solved_by": "x143"},
{"url": "https://codeforces.com//problemset/problem/1201/E1", "name": "Knightmare (easy)", "tags": ["graphs", "interactive", "shortest paths"], "problem_rating": "2900", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1201/D", "name": "Treasure Hunting", "tags": ["binary search", "dp", "greedy", "implementation"], "problem_rating": "2100", "solved_by": "x2329"},
{"url": "https://codeforces.com//problemset/problem/1201/C", "name": "Maximum Median", "tags": ["binary search", "greedy", "math", "sortings"], "problem_rating": "1400", "solved_by": "x22530"},
{"url": "https://codeforces.com//problemset/problem/1201/B", "name": "Zero Array", "tags": ["greedy", "math"], "problem_rating": "1500", "solved_by": "x18310"},
{"url": "https://codeforces.com//problemset/problem/1201/A", "name": "Important Exam", "tags": ["implementation", "strings"], "problem_rating": "900", "solved_by": "x15462"},
{"url": "https://codeforces.com//problemset/problem/1200/F", "name": "Graph Traveler", "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"], "problem_rating": "2300", "solved_by": "x1060"},
{"url": "https://codeforces.com//problemset/problem/1200/E", "name": "Compress Words", "tags": ["brute force", "hashing", "implementation", "string suffix structures", "strings"], "problem_rating": "2000", "solved_by": "x7346"},
{"url": "https://codeforces.com//problemset/problem/1200/D", "name": "White Lines", "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x4096"},
{"url": "https://codeforces.com//problemset/problem/1200/C", "name": "Round Corridor", "tags": ["math", "number theory"], "problem_rating": "1400", "solved_by": "x9778"},
{"url": "https://codeforces.com//problemset/problem/1200/B", "name": "Block Adventure", "tags": ["dp", "greedy"], "problem_rating": "1200", "solved_by": "x13875"},
{"url": "https://codeforces.com//problemset/problem/1200/A", "name": "Hotelier", "tags": ["brute force", "data structures", "implementation"], "problem_rating": "800", "solved_by": "x20196"},
{"url": "https://codeforces.com//problemset/problem/1199/B", "name": "Water Lily", "tags": ["geometry", "math"], "problem_rating": "1000", "solved_by": "x20123"},
{"url": "https://codeforces.com//problemset/problem/1199/A", "name": "City Day", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x14500"},
{"url": "https://codeforces.com//problemset/problem/1198/F", "name": "GCD Groups 2", "tags": ["greedy", "number theory", "probabilities"], "problem_rating": "2900", "solved_by": "x846"},
{"url": "https://codeforces.com//problemset/problem/1198/E", "name": "Rectangle Painting 2", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2500", "solved_by": "x1167"},
{"url": "https://codeforces.com//problemset/problem/1198/D", "name": "Rectangle Painting 1", "tags": ["dp"], "problem_rating": "2300", "solved_by": "x3150"},
{"url": "https://codeforces.com//problemset/problem/1198/C", "name": "Matching vs  Independent Set", "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "problem_rating": "2000", "solved_by": "x3499"},
{"url": "https://codeforces.com//problemset/problem/1198/B", "name": "Welfare State", "tags": ["binary search", "brute force", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x9389"},
{"url": "https://codeforces.com//problemset/problem/1198/A", "name": "MP3", "tags": ["sortings", "two pointers"], "problem_rating": "1600", "solved_by": "x8971"},
{"url": "https://codeforces.com//problemset/problem/1197/F", "name": "Coloring Game", "tags": ["dp", "games", "matrices"], "problem_rating": "2700", "solved_by": "x245"},
{"url": "https://codeforces.com//problemset/problem/1197/E", "name": "Culture Code", "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"], "problem_rating": "2300", "solved_by": "x1618"},
{"url": "https://codeforces.com//problemset/problem/1197/D", "name": "Yet Another Subarray Problem", "tags": ["dp", "greedy", "math"], "problem_rating": "1900", "solved_by": "x5301"},
{"url": "https://codeforces.com//problemset/problem/1197/C", "name": "Array Splitting", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13779"},
{"url": "https://codeforces.com//problemset/problem/1197/B", "name": "Pillars", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x13725"},
{"url": "https://codeforces.com//problemset/problem/1197/A", "name": "DIY Wooden Ladder", "tags": ["greedy", "math", "sortings"], "problem_rating": "900", "solved_by": "x13455"},
{"url": "https://codeforces.com//problemset/problem/1196/F", "name": "K-th Path", "tags": ["brute force", "constructive algorithms", "shortest paths", "sortings"], "problem_rating": "2200", "solved_by": "x2494"},
{"url": "https://codeforces.com//problemset/problem/1196/E", "name": "Connected Component on a Chessboard", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1800", "solved_by": "x3687"},
{"url": "https://codeforces.com//problemset/problem/1196/D2", "name": "RGB Substring (hard version)", "tags": ["data structures", "dp", "implementation", "two pointers"], "problem_rating": "1600", "solved_by": "x9631"},
{"url": "https://codeforces.com//problemset/problem/1196/D1", "name": "RGB Substring (easy version)", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x10446"},
{"url": "https://codeforces.com//problemset/problem/1196/C", "name": "Robot Breakout", "tags": ["implementation"], "problem_rating": "1500", "solved_by": "x9280"},
{"url": "https://codeforces.com//problemset/problem/1196/B", "name": "Odd Sum Segments", "tags": ["constructive algorithms", "math"], "problem_rating": "1200", "solved_by": "x16441"},
{"url": "https://codeforces.com//problemset/problem/1196/A", "name": "Three Piles of Candies", "tags": ["brute force", "constructive algorithms", "math"], "problem_rating": "800", "solved_by": "x27511"},
{"url": "https://codeforces.com//problemset/problem/1195/F", "name": "Geometers Anonymous Club", "tags": ["data structures", "geometry", "math", "sortings"], "problem_rating": "2500", "solved_by": "x877"},
{"url": "https://codeforces.com//problemset/problem/1195/E", "name": "OpenStreetMap", "tags": ["data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2974"},
{"url": "https://codeforces.com//problemset/problem/1195/D2", "name": "Submarine in the Rybinsk Sea (hard edition)", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1800", "solved_by": "x4617"},
{"url": "https://codeforces.com//problemset/problem/1195/D1", "name": "Submarine in the Rybinsk Sea (easy edition)", "tags": ["combinatorics", "math", "number theory"], "problem_rating": "1500", "solved_by": "x7836"},
{"url": "https://codeforces.com//problemset/problem/1195/C", "name": "Basketball Exercise", "tags": ["dp"], "problem_rating": "1400", "solved_by": "x24969"},
{"url": "https://codeforces.com//problemset/problem/1195/B", "name": "Sport Mafia", "tags": ["binary search", "brute force", "math"], "problem_rating": "1000", "solved_by": "x19437"},
{"url": "https://codeforces.com//problemset/problem/1195/A", "name": "Drinks Choosing", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x12740"},
{"url": "https://codeforces.com//problemset/problem/1194/G", "name": "Another Meme Problem", "tags": ["dp"], "problem_rating": "2700", "solved_by": "x239"},
{"url": "https://codeforces.com//problemset/problem/1194/F", "name": "Crossword Expert", "tags": ["combinatorics", "dp", "number theory", "probabilities", "two pointers"], "problem_rating": "2400", "solved_by": "x981"},
{"url": "https://codeforces.com//problemset/problem/1194/E", "name": "Count The Rectangles", "tags": ["bitmasks", "brute force", "data structures", "geometry", "sortings"], "problem_rating": "2200", "solved_by": "x1910"},
{"url": "https://codeforces.com//problemset/problem/1194/D", "name": "1-2-K Game", "tags": ["games", "math"], "problem_rating": "1700", "solved_by": "x6425"},
{"url": "https://codeforces.com//problemset/problem/1194/C", "name": "From S To T", "tags": ["implementation", "strings"], "problem_rating": "1300", "solved_by": "x13047"},
{"url": "https://codeforces.com//problemset/problem/1194/B", "name": "Yet Another Crosses Problem", "tags": ["implementation"], "problem_rating": "1300", "solved_by": "x10260"},
{"url": "https://codeforces.com//problemset/problem/1194/A", "name": "Remove a Progression", "tags": ["math"], "problem_rating": "800", "solved_by": "x16129"},
{"url": "https://codeforces.com//problemset/problem/1193/C", "name": "Scissors and Tape", "tags": ["*special problem", "constructive algorithms", "geometry"], "problem_rating": [null], "solved_by": "x38"},
{"url": "https://codeforces.com//problemset/problem/1193/B", "name": "Magic Tree", "tags": ["*special problem", "data structures", "dp", "trees"], "problem_rating": [null], "solved_by": "x427"},
{"url": "https://codeforces.com//problemset/problem/1193/A", "name": "Amusement Park", "tags": ["*special problem", "dp", "math"], "problem_rating": [null], "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1192/C", "name": "Cubeword", "tags": ["*special problem", "brute force", "dp", "meet-in-the-middle"], "problem_rating": [null], "solved_by": "x326"},
{"url": "https://codeforces.com//problemset/problem/1192/B", "name": "Dynamic Diameter", "tags": ["*special problem", "data structures", "dfs and similar", "divide and conquer", "trees"], "problem_rating": [null], "solved_by": "x1104"},
{"url": "https://codeforces.com//problemset/problem/1192/A", "name": "Building Skyscrapers", "tags": ["*special problem"], "problem_rating": [null], "solved_by": "x62"},
{"url": "https://codeforces.com//problemset/problem/1191/B", "name": "Tokitsukaze and Mahjong", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x9577"},
{"url": "https://codeforces.com//problemset/problem/1191/A", "name": "Tokitsukaze and Enhancement", "tags": ["brute force"], "problem_rating": "800", "solved_by": "x18012"},
{"url": "https://codeforces.com//problemset/problem/1190/F", "name": "Tokitsukaze and Powers", "tags": ["number theory", "probabilities"], "problem_rating": "3400", "solved_by": "x92"},
{"url": "https://codeforces.com//problemset/problem/1190/E", "name": "Tokitsukaze and Explosion", "tags": ["binary search", "greedy"], "problem_rating": "3100", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1190/D", "name": "Tokitsukaze and Strange Rectangle", "tags": ["data structures", "divide and conquer", "sortings", "two pointers"], "problem_rating": "2000", "solved_by": "x2237"},
{"url": "https://codeforces.com//problemset/problem/1190/C", "name": "Tokitsukaze and Duel", "tags": ["brute force", "games", "greedy"], "problem_rating": "2300", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/1190/B", "name": "Tokitsukaze, CSL and Stone Game", "tags": ["games"], "problem_rating": "1800", "solved_by": "x6373"},
{"url": "https://codeforces.com//problemset/problem/1190/A", "name": "Tokitsukaze and Discard Items", "tags": ["implementation", "two pointers"], "problem_rating": "1400", "solved_by": "x9306"},
{"url": "https://codeforces.com//problemset/problem/1189/C", "name": "Candies!", "tags": ["data structures", "dp", "implementation", "math"], "problem_rating": "1400", "solved_by": "x10492"},
{"url": "https://codeforces.com//problemset/problem/1189/B", "name": "Number Circle", "tags": ["greedy", "math", "sortings"], "problem_rating": "1100", "solved_by": "x14031"},
{"url": "https://codeforces.com//problemset/problem/1189/A", "name": "Keanu Reeves", "tags": ["strings"], "problem_rating": "800", "solved_by": "x15162"},
{"url": "https://codeforces.com//problemset/problem/1188/E", "name": "Problem from Red Panda", "tags": ["combinatorics"], "problem_rating": "3300", "solved_by": "x227"},
{"url": "https://codeforces.com//problemset/problem/1188/D", "name": "Make Equal", "tags": ["dp"], "problem_rating": "3100", "solved_by": "x676"},
{"url": "https://codeforces.com//problemset/problem/1188/C", "name": "Array Beauty", "tags": ["dp"], "problem_rating": "2500", "solved_by": "x1734"},
{"url": "https://codeforces.com//problemset/problem/1188/B", "name": "Count Pairs", "tags": ["math", "matrices", "number theory", "two pointers"], "problem_rating": "2300", "solved_by": "x4409"},
{"url": "https://codeforces.com//problemset/problem/1188/A2", "name": "Add on a Tree: Revolution", "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"], "problem_rating": "2500", "solved_by": "x1219"},
{"url": "https://codeforces.com//problemset/problem/1188/A1", "name": "Add on a Tree", "tags": ["trees"], "problem_rating": "1600", "solved_by": "x8351"},
{"url": "https://codeforces.com//problemset/problem/1187/G", "name": "Gang Up", "tags": ["flows", "graphs"], "problem_rating": "2500", "solved_by": "x507"},
{"url": "https://codeforces.com//problemset/problem/1187/F", "name": "Expected Square Beauty", "tags": ["dp", "math", "probabilities"], "problem_rating": "2500", "solved_by": "x856"},
{"url": "https://codeforces.com//problemset/problem/1187/E", "name": "Tree Painting", "tags": ["dfs and similar", "dp", "trees"], "problem_rating": "2100", "solved_by": "x7916"},
{"url": "https://codeforces.com//problemset/problem/1187/D", "name": "Subarray Sorting", "tags": ["data structures", "sortings"], "problem_rating": "2400", "solved_by": "x2517"},
{"url": "https://codeforces.com//problemset/problem/1187/C", "name": "Vasya And Array", "tags": ["constructive algorithms", "greedy", "implementation"], "problem_rating": "1800", "solved_by": "x6298"},
{"url": "https://codeforces.com//problemset/problem/1187/B", "name": "Letters Shop", "tags": ["binary search", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x12119"},
{"url": "https://codeforces.com//problemset/problem/1187/A", "name": "Stickers and Toys", "tags": ["math"], "problem_rating": "900", "solved_by": "x14782"},
{"url": "https://codeforces.com//problemset/problem/1186/F", "name": "Vus the Cossack and a Graph", "tags": ["dfs and similar", "graphs", "greedy", "implementation"], "problem_rating": "2400", "solved_by": "x762"},
{"url": "https://codeforces.com//problemset/problem/1186/E", "name": "Vus the Cossack and a Field", "tags": ["divide and conquer", "implementation", "math"], "problem_rating": "2500", "solved_by": "x619"},
{"url": "https://codeforces.com//problemset/problem/1186/D", "name": "Vus the Cossack and Numbers", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1500", "solved_by": "x8888"},
{"url": "https://codeforces.com//problemset/problem/1186/C", "name": "Vus the Cossack and Strings", "tags": ["implementation", "math"], "problem_rating": "1800", "solved_by": "x6041"},
{"url": "https://codeforces.com//problemset/problem/1186/A", "name": "Vus the Cossack and a Contest", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x36893"},
{"url": "https://codeforces.com//problemset/problem/1185/G2", "name": "Playlist for Polycarp (hard version)", "tags": ["combinatorics", "dp"], "problem_rating": "2600", "solved_by": "x748"},
{"url": "https://codeforces.com//problemset/problem/1185/G1", "name": "Playlist for Polycarp (easy version)", "tags": ["bitmasks", "combinatorics", "dp"], "problem_rating": "2100", "solved_by": "x2824"},
{"url": "https://codeforces.com//problemset/problem/1185/F", "name": "Two Pizzas", "tags": ["bitmasks", "brute force"], "problem_rating": "2100", "solved_by": "x2020"},
{"url": "https://codeforces.com//problemset/problem/1185/E", "name": "Polycarp and Snakes", "tags": ["brute force", "implementation"], "problem_rating": "2000", "solved_by": "x2637"},
{"url": "https://codeforces.com//problemset/problem/1185/D", "name": "Extra Element", "tags": ["implementation", "math"], "problem_rating": "1700", "solved_by": "x6667"},
{"url": "https://codeforces.com//problemset/problem/1185/C2", "name": "Exam in BerSU (hard version)", "tags": ["brute force", "data structures", "greedy", "math"], "problem_rating": "1700", "solved_by": "x7405"},
{"url": "https://codeforces.com//problemset/problem/1185/C1", "name": "Exam in BerSU (easy version)", "tags": ["greedy", "sortings"], "problem_rating": "1200", "solved_by": "x11311"},
{"url": "https://codeforces.com//problemset/problem/1185/B", "name": "Email from Polycarp", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x13241"},
{"url": "https://codeforces.com//problemset/problem/1185/A", "name": "Ropewalkers", "tags": ["math"], "problem_rating": "800", "solved_by": "x14804"},
{"url": "https://codeforces.com//problemset/problem/1184/E3", "name": "Daleks' Invasion (hard)", "tags": ["data structures", "dsu", "graphs", "trees"], "problem_rating": "2400", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/1184/E2", "name": "Daleks' Invasion (medium)", "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "problem_rating": "2100", "solved_by": "x918"},
{"url": "https://codeforces.com//problemset/problem/1184/E1", "name": "Daleks' Invasion (easy)", "tags": ["graphs", "trees"], "problem_rating": "1900", "solved_by": "x1586"},
{"url": "https://codeforces.com//problemset/problem/1184/D2", "name": "Parallel Universes (Hard)", "tags": ["math", "matrices"], "problem_rating": "3100", "solved_by": "x104"},
{"url": "https://codeforces.com//problemset/problem/1184/D1", "name": "Parallel Universes (Easy)", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2496"},
{"url": "https://codeforces.com//problemset/problem/1184/C3", "name": "Heidi and the Turing Test (Hard)", "tags": [], "problem_rating": "3200", "solved_by": "x41"},
{"url": "https://codeforces.com//problemset/problem/1184/C2", "name": "Heidi and the Turing Test (Medium)", "tags": ["data structures"], "problem_rating": "2200", "solved_by": "x606"},
{"url": "https://codeforces.com//problemset/problem/1184/C1", "name": "Heidi and the Turing Test (Easy)", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x2283"},
{"url": "https://codeforces.com//problemset/problem/1184/B3", "name": "The Doctor Meets Vader (Hard)", "tags": ["flows", "shortest paths"], "problem_rating": "2700", "solved_by": "x171"},
{"url": "https://codeforces.com//problemset/problem/1184/B2", "name": "The Doctor Meets Vader (Medium)", "tags": ["flows", "graph matchings", "graphs", "shortest paths", "sortings"], "problem_rating": "2200", "solved_by": "x571"},
{"url": "https://codeforces.com//problemset/problem/1184/B1", "name": "The Doctor Meets Vader (Easy)", "tags": ["binary search", "sortings"], "problem_rating": "1400", "solved_by": "x5177"},
{"url": "https://codeforces.com//problemset/problem/1184/A3", "name": "Heidi Learns Hashing (Hard)", "tags": ["fft", "math", "number theory"], "problem_rating": "3100", "solved_by": "x139"},
{"url": "https://codeforces.com//problemset/problem/1184/A2", "name": "Heidi Learns Hashing (Medium)", "tags": ["brute force", "number theory"], "problem_rating": "2100", "solved_by": "x947"},
{"url": "https://codeforces.com//problemset/problem/1184/A1", "name": "Heidi Learns Hashing (Easy)", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x5900"},
{"url": "https://codeforces.com//problemset/problem/1183/H", "name": "Subsequences (hard version)", "tags": ["dp", "strings"], "problem_rating": "1900", "solved_by": "x3103"},
{"url": "https://codeforces.com//problemset/problem/1183/G", "name": "Candy Box (hard version)", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "2000", "solved_by": "x2328"},
{"url": "https://codeforces.com//problemset/problem/1183/F", "name": "Topforces Strikes Back", "tags": ["brute force", "math", "sortings"], "problem_rating": "2100", "solved_by": "x1988"},
{"url": "https://codeforces.com//problemset/problem/1183/E", "name": "Subsequences (easy version)", "tags": ["dp", "graphs", "implementation", "shortest paths"], "problem_rating": "2000", "solved_by": "x4738"},
{"url": "https://codeforces.com//problemset/problem/1183/D", "name": "Candy Box (easy version)", "tags": ["greedy", "sortings"], "problem_rating": "1400", "solved_by": "x13798"},
{"url": "https://codeforces.com//problemset/problem/1183/C", "name": "Computer Game", "tags": ["binary search", "math"], "problem_rating": "1400", "solved_by": "x13836"},
{"url": "https://codeforces.com//problemset/problem/1183/B", "name": "Equalize Prices", "tags": ["math"], "problem_rating": "900", "solved_by": "x18334"},
{"url": "https://codeforces.com//problemset/problem/1183/A", "name": "Nearest Interesting Number", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x24504"},
{"url": "https://codeforces.com//problemset/problem/1182/F", "name": "Maximum Sine", "tags": ["binary search", "data structures", "number theory"], "problem_rating": "2700", "solved_by": "x334"},
{"url": "https://codeforces.com//problemset/problem/1182/E", "name": "Product Oriented Recurrence", "tags": ["dp", "math", "matrices", "number theory"], "problem_rating": "2300", "solved_by": "x2626"},
{"url": "https://codeforces.com//problemset/problem/1182/D", "name": "Complete Mirror", "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"], "problem_rating": "2400", "solved_by": "x819"},
{"url": "https://codeforces.com//problemset/problem/1182/C", "name": "Beautiful Lyrics", "tags": ["data structures", "greedy", "strings"], "problem_rating": "1700", "solved_by": "x4401"},
{"url": "https://codeforces.com//problemset/problem/1182/B", "name": "Plus from Picture", "tags": ["dfs and similar", "implementation", "strings"], "problem_rating": "1300", "solved_by": "x11066"},
{"url": "https://codeforces.com//problemset/problem/1182/A", "name": "Filling Shapes", "tags": ["dp", "math"], "problem_rating": "1000", "solved_by": "x30261"},
{"url": "https://codeforces.com//problemset/problem/1181/E2", "name": "A Story of One Country (Hard)", "tags": ["brute force", "greedy", "sortings"], "problem_rating": "3000", "solved_by": "x276"},
{"url": "https://codeforces.com//problemset/problem/1181/E1", "name": "A Story of One Country (Easy)", "tags": ["brute force", "divide and conquer", "sortings"], "problem_rating": "2500", "solved_by": "x466"},
{"url": "https://codeforces.com//problemset/problem/1181/D", "name": "Irrigation", "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "problem_rating": "2200", "solved_by": "x2322"},
{"url": "https://codeforces.com//problemset/problem/1181/C", "name": "Flag", "tags": ["brute force", "combinatorics", "dp", "implementation"], "problem_rating": "1900", "solved_by": "x3102"},
{"url": "https://codeforces.com//problemset/problem/1181/B", "name": "Split a Number", "tags": ["greedy", "implementation", "strings"], "problem_rating": "1500", "solved_by": "x6240"},
{"url": "https://codeforces.com//problemset/problem/1181/A", "name": "Chunga-Changa", "tags": ["greedy", "math"], "problem_rating": "1000", "solved_by": "x13376"},
{"url": "https://codeforces.com//problemset/problem/1180/B", "name": "Nick and Array", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x9484"},
{"url": "https://codeforces.com//problemset/problem/1180/A", "name": "Alex and a Rhombus", "tags": ["dp", "implementation", "math"], "problem_rating": "800", "solved_by": "x24801"},
{"url": "https://codeforces.com//problemset/problem/1179/E", "name": "Alesya and Discrete Math", "tags": ["divide and conquer", "interactive"], "problem_rating": "3200", "solved_by": "x173"},
{"url": "https://codeforces.com//problemset/problem/1179/D", "name": "Fedor Runs for President", "tags": ["data structures", "dp", "trees"], "problem_rating": "2700", "solved_by": "x799"},
{"url": "https://codeforces.com//problemset/problem/1179/C", "name": "Serge and Dining Room", "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"], "problem_rating": "2200", "solved_by": "x1991"},
{"url": "https://codeforces.com//problemset/problem/1179/B", "name": "Tolik and His Uncle", "tags": ["constructive algorithms"], "problem_rating": "1800", "solved_by": "x4324"},
{"url": "https://codeforces.com//problemset/problem/1179/A", "name": "Valeriy and Deque", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x10322"},
{"url": "https://codeforces.com//problemset/problem/1178/H", "name": "Stock Exchange", "tags": ["binary search", "flows", "graphs"], "problem_rating": "3500", "solved_by": "x225"},
{"url": "https://codeforces.com//problemset/problem/1178/G", "name": "The Awesomest Vertex", "tags": ["data structures", "dfs and similar"], "problem_rating": "3000", "solved_by": "x432"},
{"url": "https://codeforces.com//problemset/problem/1178/F2", "name": "Long Colorful Strip", "tags": ["dp"], "problem_rating": "2600", "solved_by": "x871"},
{"url": "https://codeforces.com//problemset/problem/1178/F1", "name": "Short Colorful Strip", "tags": ["combinatorics", "dfs and similar", "dp"], "problem_rating": "2200", "solved_by": "x2077"},
{"url": "https://codeforces.com//problemset/problem/1178/E", "name": "Archaeology", "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "problem_rating": "1900", "solved_by": "x4290"},
{"url": "https://codeforces.com//problemset/problem/1178/D", "name": "Prime Graph", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1500", "solved_by": "x7345"},
{"url": "https://codeforces.com//problemset/problem/1178/C", "name": "Tiles", "tags": ["combinatorics", "greedy", "math"], "problem_rating": "1300", "solved_by": "x11741"},
{"url": "https://codeforces.com//problemset/problem/1178/B", "name": "WOW Factor", "tags": ["dp", "strings"], "problem_rating": "1300", "solved_by": "x14743"},
{"url": "https://codeforces.com//problemset/problem/1178/A", "name": "Prime Minister", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x10360"},
{"url": "https://codeforces.com//problemset/problem/1177/B", "name": "Digits Sequence (Hard Edition)", "tags": ["binary search", "divide and conquer", "implementation"], "problem_rating": "1800", "solved_by": "x2446"},
{"url": "https://codeforces.com//problemset/problem/1177/A", "name": "Digits Sequence (Easy Edition)", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x5551"},
{"url": "https://codeforces.com//problemset/problem/1176/F", "name": "Destroy it!", "tags": ["dp", "implementation", "sortings"], "problem_rating": "2100", "solved_by": "x1973"},
{"url": "https://codeforces.com//problemset/problem/1176/E", "name": "Cover it!", "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"], "problem_rating": "1700", "solved_by": "x10789"},
{"url": "https://codeforces.com//problemset/problem/1176/D", "name": "Recover it!", "tags": ["dfs and similar", "graphs", "greedy", "number theory", "sortings"], "problem_rating": "1800", "solved_by": "x5213"},
{"url": "https://codeforces.com//problemset/problem/1176/C", "name": "Lose it!", "tags": ["dp", "greedy", "implementation"], "problem_rating": "1300", "solved_by": "x14007"},
{"url": "https://codeforces.com//problemset/problem/1176/B", "name": "Merge it!", "tags": ["math"], "problem_rating": "1100", "solved_by": "x16979"},
{"url": "https://codeforces.com//problemset/problem/1176/A", "name": "Divide it!", "tags": ["brute force", "greedy", "implementation"], "problem_rating": "800", "solved_by": "x22339"},
{"url": "https://codeforces.com//problemset/problem/1175/G", "name": "Yet Another Partiton Problem", "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"], "problem_rating": "3000", "solved_by": "x448"},
{"url": "https://codeforces.com//problemset/problem/1175/F", "name": "The Number of Subpermutations", "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "problem_rating": "2500", "solved_by": "x1671"},
{"url": "https://codeforces.com//problemset/problem/1175/E", "name": "Minimal Segment Cover", "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "problem_rating": "2200", "solved_by": "x3471"},
{"url": "https://codeforces.com//problemset/problem/1175/D", "name": "Array Splitting", "tags": ["greedy", "sortings"], "problem_rating": "1900", "solved_by": "x6092"},
{"url": "https://codeforces.com//problemset/problem/1175/C", "name": "Electrification", "tags": ["binary search", "brute force", "greedy"], "problem_rating": "1600", "solved_by": "x6739"},
{"url": "https://codeforces.com//problemset/problem/1175/B", "name": "Catch Overflow!", "tags": ["data structures", "expression parsing", "implementation"], "problem_rating": "1600", "solved_by": "x10468"},
{"url": "https://codeforces.com//problemset/problem/1175/A", "name": "From Hero to Zero", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x18037"},
{"url": "https://codeforces.com//problemset/problem/1174/F", "name": "Ehab and the Big Finale", "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "problem_rating": "2400", "solved_by": "x1549"},
{"url": "https://codeforces.com//problemset/problem/1174/E", "name": "Ehab and the Expected GCD Problem", "tags": ["combinatorics", "dp", "math", "number theory"], "problem_rating": "2500", "solved_by": "x1381"},
{"url": "https://codeforces.com//problemset/problem/1174/D", "name": "Ehab and the Expected XOR Problem", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "1900", "solved_by": "x4650"},
{"url": "https://codeforces.com//problemset/problem/1174/C", "name": "Ehab and a Special Coloring Problem", "tags": ["constructive algorithms", "number theory"], "problem_rating": "1300", "solved_by": "x11902"},
{"url": "https://codeforces.com//problemset/problem/1174/B", "name": "Ehab Is an Odd Person", "tags": ["sortings"], "problem_rating": "1200", "solved_by": "x15278"},
{"url": "https://codeforces.com//problemset/problem/1174/A", "name": "Ehab Fails to Be Thanos", "tags": ["constructive algorithms", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x17423"},
{"url": "https://codeforces.com//problemset/problem/1173/B", "name": "Nauuo and Chess", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1100", "solved_by": "x9025"},
{"url": "https://codeforces.com//problemset/problem/1173/A", "name": "Nauuo and Votes", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x16142"},
{"url": "https://codeforces.com//problemset/problem/1172/F", "name": "Nauuo and Bug", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x422"},
{"url": "https://codeforces.com//problemset/problem/1172/E", "name": "Nauuo and ODT", "tags": ["data structures"], "problem_rating": "3300", "solved_by": "x301"},
{"url": "https://codeforces.com//problemset/problem/1172/D", "name": "Nauuo and Portals", "tags": ["constructive algorithms"], "problem_rating": "2900", "solved_by": "x488"},
{"url": "https://codeforces.com//problemset/problem/1172/C2", "name": "Nauuo and Pictures (hard version)", "tags": ["dp", "probabilities"], "problem_rating": "2600", "solved_by": "x829"},
{"url": "https://codeforces.com//problemset/problem/1172/C1", "name": "Nauuo and Pictures (easy version)", "tags": ["dp", "probabilities"], "problem_rating": "2300", "solved_by": "x1055"},
{"url": "https://codeforces.com//problemset/problem/1172/B", "name": "Nauuo and Circle", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "1900", "solved_by": "x3974"},
{"url": "https://codeforces.com//problemset/problem/1172/A", "name": "Nauuo and Cards", "tags": ["greedy", "implementation"], "problem_rating": "1800", "solved_by": "x4920"},
{"url": "https://codeforces.com//problemset/problem/1170/I", "name": "Good Subsets", "tags": ["*special problem", "dp"], "problem_rating": [null], "solved_by": "x39"},
{"url": "https://codeforces.com//problemset/problem/1170/H", "name": "Longest Saw", "tags": ["*special problem", "constructive algorithms"], "problem_rating": [null], "solved_by": "x47"},
{"url": "https://codeforces.com//problemset/problem/1170/G", "name": "Graph Decomposition", "tags": ["*special problem", "graphs"], "problem_rating": [null], "solved_by": "x72"},
{"url": "https://codeforces.com//problemset/problem/1170/F", "name": "Wheels", "tags": ["*special problem", "binary search", "greedy"], "problem_rating": [null], "solved_by": "x119"},
{"url": "https://codeforces.com//problemset/problem/1170/E", "name": "Sliding Doors", "tags": ["*special problem", "binary search"], "problem_rating": [null], "solved_by": "x258"},
{"url": "https://codeforces.com//problemset/problem/1170/D", "name": "Decoding of Integer Sequences", "tags": ["*special problem", "data structures", "implementation"], "problem_rating": [null], "solved_by": "x424"},
{"url": "https://codeforces.com//problemset/problem/1170/C", "name": "Minus and Minus Give Plus", "tags": ["*special problem", "implementation", "strings"], "problem_rating": [null], "solved_by": "x788"},
{"url": "https://codeforces.com//problemset/problem/1170/B", "name": "Bad Days", "tags": ["*special problem", "implementation"], "problem_rating": [null], "solved_by": "x1077"},
{"url": "https://codeforces.com//problemset/problem/1170/A", "name": "Three Integers Again", "tags": ["*special problem", "math"], "problem_rating": [null], "solved_by": "x1454"},
{"url": "https://codeforces.com//problemset/problem/1169/B", "name": "Pairs", "tags": ["graphs", "implementation"], "problem_rating": "1500", "solved_by": "x9617"},
{"url": "https://codeforces.com//problemset/problem/1169/A", "name": "Circle Metro", "tags": ["implementation", "math"], "problem_rating": "900", "solved_by": "x11788"},
{"url": "https://codeforces.com//problemset/problem/1168/E", "name": "Xor Permutations", "tags": ["constructive algorithms", "math"], "problem_rating": "3100", "solved_by": "x363"},
{"url": "https://codeforces.com//problemset/problem/1168/D", "name": "Anagram Paths", "tags": ["dp", "implementation", "trees"], "problem_rating": "3000", "solved_by": "x342"},
{"url": "https://codeforces.com//problemset/problem/1168/C", "name": "And Reachability", "tags": ["bitmasks", "dp"], "problem_rating": "2200", "solved_by": "x2355"},
{"url": "https://codeforces.com//problemset/problem/1168/B", "name": "Good Triple", "tags": ["brute force", "two pointers"], "problem_rating": "1900", "solved_by": "x3535"},
{"url": "https://codeforces.com//problemset/problem/1168/A", "name": "Increasing by Modulo", "tags": ["binary search", "greedy"], "problem_rating": "1700", "solved_by": "x6664"},
{"url": "https://codeforces.com//problemset/problem/1167/G", "name": "Low Budget Inception", "tags": ["brute force", "geometry"], "problem_rating": "3100", "solved_by": "x149"},
{"url": "https://codeforces.com//problemset/problem/1167/F", "name": "Scalar Queries", "tags": ["combinatorics", "data structures", "math", "sortings"], "problem_rating": "2300", "solved_by": "x1602"},
{"url": "https://codeforces.com//problemset/problem/1167/E", "name": "Range Deleting", "tags": ["binary search", "combinatorics", "data structures", "two pointers"], "problem_rating": "2100", "solved_by": "x2630"},
{"url": "https://codeforces.com//problemset/problem/1167/D", "name": "Bicolored RBS", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1500", "solved_by": "x6894"},
{"url": "https://codeforces.com//problemset/problem/1167/C", "name": "News Distribution", "tags": ["dfs and similar", "dsu", "graphs"], "problem_rating": "1400", "solved_by": "x17723"},
{"url": "https://codeforces.com//problemset/problem/1167/B", "name": "Lost Numbers", "tags": ["brute force", "divide and conquer", "interactive", "math"], "problem_rating": "1400", "solved_by": "x11033"},
{"url": "https://codeforces.com//problemset/problem/1167/A", "name": "Telephone Number", "tags": ["brute force", "greedy", "strings"], "problem_rating": "800", "solved_by": "x19130"},
{"url": "https://codeforces.com//problemset/problem/1166/F", "name": "Vicky's Delivery Service", "tags": ["data structures", "dsu", "graphs", "hashing"], "problem_rating": "2400", "solved_by": "x691"},
{"url": "https://codeforces.com//problemset/problem/1166/E", "name": "The LCMs Must be Large", "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "problem_rating": "2100", "solved_by": "x2801"},
{"url": "https://codeforces.com//problemset/problem/1166/D", "name": "Cute Sequences", "tags": ["binary search", "brute force", "greedy", "math"], "problem_rating": "2200", "solved_by": "x2147"},
{"url": "https://codeforces.com//problemset/problem/1166/C", "name": "A Tale of Two Lands", "tags": ["binary search", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x9280"},
{"url": "https://codeforces.com//problemset/problem/1166/B", "name": "All the Vowels Please", "tags": ["constructive algorithms", "math", "number theory"], "problem_rating": "1100", "solved_by": "x11398"},
{"url": "https://codeforces.com//problemset/problem/1166/A", "name": "Silent Classroom", "tags": ["combinatorics", "greedy"], "problem_rating": "900", "solved_by": "x14083"},
{"url": "https://codeforces.com//problemset/problem/1165/F2", "name": "Microtransactions (hard version)", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "2000", "solved_by": "x2128"},
{"url": "https://codeforces.com//problemset/problem/1165/F1", "name": "Microtransactions (easy version)", "tags": ["binary search", "greedy"], "problem_rating": "2000", "solved_by": "x1857"},
{"url": "https://codeforces.com//problemset/problem/1165/E", "name": "Two Arrays and Sum of Functions", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x8157"},
{"url": "https://codeforces.com//problemset/problem/1165/D", "name": "Almost All Divisors", "tags": ["math", "number theory"], "problem_rating": "1600", "solved_by": "x15661"},
{"url": "https://codeforces.com//problemset/problem/1165/C", "name": "Good String", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12803"},
{"url": "https://codeforces.com//problemset/problem/1165/B", "name": "Polycarp Training", "tags": ["data structures", "greedy", "sortings"], "problem_rating": "1000", "solved_by": "x20697"},
{"url": "https://codeforces.com//problemset/problem/1165/A", "name": "Remainder", "tags": ["implementation", "math"], "problem_rating": "1100", "solved_by": "x13685"},
{"url": "https://codeforces.com//problemset/problem/1163/F", "name": "Indecisive Taxi Fee", "tags": ["data structures", "graphs", "shortest paths"], "problem_rating": "3000", "solved_by": "x839"},
{"url": "https://codeforces.com//problemset/problem/1163/E", "name": "Magical Permutation", "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"], "problem_rating": "2400", "solved_by": "x651"},
{"url": "https://codeforces.com//problemset/problem/1163/D", "name": "Mysterious Code", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x1241"},
{"url": "https://codeforces.com//problemset/problem/1163/C2", "name": "Power Transmission (Hard Edition)", "tags": ["data structures", "geometry", "implementation", "math"], "problem_rating": "1900", "solved_by": "x3559"},
{"url": "https://codeforces.com//problemset/problem/1163/C1", "name": "Power Transmission (Easy Edition)", "tags": ["brute force", "geometry"], "problem_rating": "1900", "solved_by": "x3278"},
{"url": "https://codeforces.com//problemset/problem/1163/B2", "name": "Cat Party (Hard Edition)", "tags": ["data structures", "implementation"], "problem_rating": "1600", "solved_by": "x7146"},
{"url": "https://codeforces.com//problemset/problem/1163/B1", "name": "Cat Party (Easy Edition)", "tags": ["data structures", "implementation"], "problem_rating": "1500", "solved_by": "x6913"},
{"url": "https://codeforces.com//problemset/problem/1163/A", "name": "Eating Soup", "tags": ["greedy", "math"], "problem_rating": "900", "solved_by": "x12848"},
{"url": "https://codeforces.com//problemset/problem/1162/B", "name": "Double Matrix", "tags": ["brute force", "greedy"], "problem_rating": "1400", "solved_by": "x5785"},
{"url": "https://codeforces.com//problemset/problem/1162/A", "name": "Zoning Restrictions Again", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x8234"},
{"url": "https://codeforces.com//problemset/problem/1160/A2", "name": "Collaboration", "tags": ["*special problem"], "problem_rating": [null], "solved_by": [null]},
{"url": "https://codeforces.com//problemset/problem/1159/B", "name": "Expansion coefficient of the array", "tags": ["implementation", "math"], "problem_rating": "1300", "solved_by": "x7026"},
{"url": "https://codeforces.com//problemset/problem/1159/A", "name": "A pile of stones", "tags": ["implementation", "math"], "problem_rating": "800", "solved_by": "x12526"},
{"url": "https://codeforces.com//problemset/problem/1158/F", "name": "Density of subarrays", "tags": ["dp", "math"], "problem_rating": "3500", "solved_by": "x397"},
{"url": "https://codeforces.com//problemset/problem/1158/E", "name": "Strange device", "tags": ["binary search", "interactive", "math", "trees"], "problem_rating": "3400", "solved_by": "x150"},
{"url": "https://codeforces.com//problemset/problem/1158/D", "name": "Winding polygonal line", "tags": ["constructive algorithms", "geometry", "greedy", "math"], "problem_rating": "2600", "solved_by": "x720"},
{"url": "https://codeforces.com//problemset/problem/1158/C", "name": "Permutation recovery", "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"], "problem_rating": "2100", "solved_by": "x1911"},
{"url": "https://codeforces.com//problemset/problem/1158/B", "name": "The minimal unique substring", "tags": ["constructive algorithms", "math", "strings"], "problem_rating": "2200", "solved_by": "x2212"},
{"url": "https://codeforces.com//problemset/problem/1158/A", "name": "The Party and Sweets", "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "sortings", "two pointers"], "problem_rating": "1500", "solved_by": "x6984"},
{"url": "https://codeforces.com//problemset/problem/1157/G", "name": "Inverse of Rows and Columns", "tags": ["brute force", "constructive algorithms"], "problem_rating": "2200", "solved_by": "x903"},
{"url": "https://codeforces.com//problemset/problem/1157/F", "name": "Maximum Balanced Circle", "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "problem_rating": "2000", "solved_by": "x2584"},
{"url": "https://codeforces.com//problemset/problem/1157/E", "name": "Minimum Array", "tags": ["binary search", "data structures", "greedy"], "problem_rating": "1700", "solved_by": "x8274"},
{"url": "https://codeforces.com//problemset/problem/1157/D", "name": "N Problems During K Days", "tags": ["constructive algorithms", "greedy", "math"], "problem_rating": "1900", "solved_by": "x3700"},
{"url": "https://codeforces.com//problemset/problem/1157/C2", "name": "Increasing Subsequence (hard version)", "tags": ["greedy"], "problem_rating": "1700", "solved_by": "x7910"},
{"url": "https://codeforces.com//problemset/problem/1157/C1", "name": "Increasing Subsequence (easy version)", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x12510"},
{"url": "https://codeforces.com//problemset/problem/1157/B", "name": "Long Number", "tags": ["greedy"], "problem_rating": "1300", "solved_by": "x14575"},
{"url": "https://codeforces.com//problemset/problem/1157/A", "name": "Reachable Numbers", "tags": ["implementation"], "problem_rating": "1100", "solved_by": "x15522"},
{"url": "https://codeforces.com//problemset/problem/1156/G", "name": "Optimizer", "tags": ["graphs", "greedy", "hashing", "implementation"], "problem_rating": "2700", "solved_by": "x127"},
{"url": "https://codeforces.com//problemset/problem/1156/F", "name": "Card Bag", "tags": ["dp", "math", "probabilities"], "problem_rating": "2300", "solved_by": "x1361"},
{"url": "https://codeforces.com//problemset/problem/1156/E", "name": "Special Segments of Permutation", "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "problem_rating": "2200", "solved_by": "x2901"},
{"url": "https://codeforces.com//problemset/problem/1156/D", "name": "0-1-Tree", "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "problem_rating": "2200", "solved_by": "x3793"},
{"url": "https://codeforces.com//problemset/problem/1156/C", "name": "Match Points", "tags": ["binary search", "greedy", "sortings", "ternary search", "two pointers"], "problem_rating": "2000", "solved_by": "x5992"},
{"url": "https://codeforces.com//problemset/problem/1156/B", "name": "Ugly Pairs", "tags": ["dfs and similar", "greedy", "implementation", "sortings", "strings"], "problem_rating": "1800", "solved_by": "x6172"},
{"url": "https://codeforces.com//problemset/problem/1156/A", "name": "Inscribed Figures", "tags": ["geometry"], "problem_rating": "1400", "solved_by": "x8160"},
{"url": "https://codeforces.com//problemset/problem/1155/F", "name": "Delivery Oligopoly", "tags": ["brute force", "dp", "graphs"], "problem_rating": "2800", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/1155/E", "name": "Guess the Root", "tags": ["brute force", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1402"},
{"url": "https://codeforces.com//problemset/problem/1155/D", "name": "Beautiful Array", "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "problem_rating": "1900", "solved_by": "x6813"},
{"url": "https://codeforces.com//problemset/problem/1155/C", "name": "Alarm Clocks Everywhere", "tags": ["math", "number theory"], "problem_rating": "1300", "solved_by": "x9194"},
{"url": "https://codeforces.com//problemset/problem/1155/B", "name": "Game with Telephone Numbers", "tags": ["games", "greedy", "implementation"], "problem_rating": "1200", "solved_by": "x11818"},
{"url": "https://codeforces.com//problemset/problem/1155/A", "name": "Reverse a Substring", "tags": ["implementation", "sortings", "strings"], "problem_rating": "1000", "solved_by": "x14282"},
{"url": "https://codeforces.com//problemset/problem/1154/G", "name": "Minimum Possible LCM", "tags": ["brute force", "greedy", "math", "number theory"], "problem_rating": "2200", "solved_by": "x2676"},
{"url": "https://codeforces.com//problemset/problem/1154/F", "name": "Shovels Shop", "tags": ["dp", "greedy", "sortings"], "problem_rating": "2100", "solved_by": "x2795"},
{"url": "https://codeforces.com//problemset/problem/1154/E", "name": "Two Teams", "tags": ["data structures", "implementation", "sortings"], "problem_rating": "1800", "solved_by": "x6168"},
{"url": "https://codeforces.com//problemset/problem/1154/D", "name": "Walking Robot", "tags": ["greedy"], "problem_rating": "1500", "solved_by": "x9848"},
{"url": "https://codeforces.com//problemset/problem/1154/C", "name": "Gourmet Cat", "tags": ["implementation", "math"], "problem_rating": "1400", "solved_by": "x10309"},
{"url": "https://codeforces.com//problemset/problem/1154/B", "name": "Make Them Equal", "tags": ["math"], "problem_rating": "1200", "solved_by": "x16430"},
{"url": "https://codeforces.com//problemset/problem/1154/A", "name": "Restoring Three Numbers", "tags": ["math"], "problem_rating": "800", "solved_by": "x68476"},
{"url": "https://codeforces.com//problemset/problem/1153/F", "name": "Serval and Bonus Problem", "tags": ["combinatorics", "dp", "math", "probabilities"], "problem_rating": "2600", "solved_by": "x767"},
{"url": "https://codeforces.com//problemset/problem/1153/E", "name": "Serval and Snake", "tags": ["binary search", "brute force", "interactive"], "problem_rating": "2200", "solved_by": "x1457"},
{"url": "https://codeforces.com//problemset/problem/1153/D", "name": "Serval and Rooted Tree", "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x4881"},
{"url": "https://codeforces.com//problemset/problem/1153/C", "name": "Serval and Parenthesis Sequence", "tags": ["greedy", "strings"], "problem_rating": "1700", "solved_by": "x7351"},
{"url": "https://codeforces.com//problemset/problem/1153/B", "name": "Serval and Toy Bricks", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1200", "solved_by": "x9021"},
{"url": "https://codeforces.com//problemset/problem/1153/A", "name": "Serval and Bus", "tags": ["brute force", "math"], "problem_rating": "1000", "solved_by": "x11464"},
{"url": "https://codeforces.com//problemset/problem/1152/F2", "name": "Neko Rules the Catniverse (Large Version)", "tags": ["bitmasks", "dp", "matrices"], "problem_rating": "3000", "solved_by": "x616"},
{"url": "https://codeforces.com//problemset/problem/1152/F1", "name": "Neko Rules the Catniverse (Small Version)", "tags": ["bitmasks", "dp", "matrices"], "problem_rating": "2800", "solved_by": "x533"},
{"url": "https://codeforces.com//problemset/problem/1152/E", "name": "Neko and Flashback", "tags": ["constructive algorithms", "dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x950"},
{"url": "https://codeforces.com//problemset/problem/1152/D", "name": "Neko and Aki's Prank", "tags": ["dp", "greedy", "trees"], "problem_rating": "2100", "solved_by": "x2392"},
{"url": "https://codeforces.com//problemset/problem/1152/C", "name": "Neko does Maths", "tags": ["brute force", "math", "number theory"], "problem_rating": "1800", "solved_by": "x6573"},
{"url": "https://codeforces.com//problemset/problem/1152/B", "name": "Neko Performs Cat Furrier Transform", "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "math"], "problem_rating": "1300", "solved_by": "x8864"},
{"url": "https://codeforces.com//problemset/problem/1152/A", "name": "Neko Finds Grapes", "tags": ["greedy", "implementation", "math"], "problem_rating": "800", "solved_by": "x15055"},
{"url": "https://codeforces.com//problemset/problem/1151/F", "name": "Sonya and Informatics", "tags": ["combinatorics", "dp", "matrices", "probabilities"], "problem_rating": "2300", "solved_by": "x1174"},
{"url": "https://codeforces.com//problemset/problem/1151/E", "name": "Number of Components", "tags": ["combinatorics", "data structures", "dp", "math"], "problem_rating": "2100", "solved_by": "x3277"},
{"url": "https://codeforces.com//problemset/problem/1151/D", "name": "Stas and the Queue at the Buffet", "tags": ["greedy", "math", "sortings"], "problem_rating": "1600", "solved_by": "x8330"},
{"url": "https://codeforces.com//problemset/problem/1151/C", "name": "Problem for Nazar", "tags": ["constructive algorithms", "math"], "problem_rating": "1800", "solved_by": "x5300"},
{"url": "https://codeforces.com//problemset/problem/1151/B", "name": "Dima and a Bad XOR", "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "problem_rating": "1600", "solved_by": "x10940"},
{"url": "https://codeforces.com//problemset/problem/1151/A", "name": "Maxim and Biology", "tags": ["brute force", "strings"], "problem_rating": "1000", "solved_by": "x11117"},
{"url": "https://codeforces.com//problemset/problem/1150/B", "name": "Tiling Challenge", "tags": ["greedy", "implementation"], "problem_rating": "900", "solved_by": "x11218"},
{"url": "https://codeforces.com//problemset/problem/1150/A", "name": "Stock Arbitraging", "tags": ["greedy", "implementation"], "problem_rating": "800", "solved_by": "x11767"},
{"url": "https://codeforces.com//problemset/problem/1149/E", "name": "Election Promises", "tags": ["games", "graphs"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1149/D", "name": "Abandoning Roads", "tags": ["brute force", "dp", "graphs", "greedy"], "problem_rating": "3000", "solved_by": "x718"},
{"url": "https://codeforces.com//problemset/problem/1149/C", "name": "Tree Generator™", "tags": ["data structures", "implementation", "trees"], "problem_rating": "2700", "solved_by": "x1199"},
{"url": "https://codeforces.com//problemset/problem/1149/B", "name": "Three Religions", "tags": ["dp", "implementation", "strings"], "problem_rating": "2200", "solved_by": "x1879"},
{"url": "https://codeforces.com//problemset/problem/1149/A", "name": "Prefix Sum Primes", "tags": ["constructive algorithms", "greedy", "math", "number theory"], "problem_rating": "1200", "solved_by": "x14995"},
{"url": "https://codeforces.com//problemset/problem/1148/H", "name": "Holy Diver", "tags": ["data structures"], "problem_rating": "3500", "solved_by": "x252"},
{"url": "https://codeforces.com//problemset/problem/1148/G", "name": "Gold Experience", "tags": ["constructive algorithms", "graphs", "math", "number theory", "probabilities"], "problem_rating": "3300", "solved_by": "x319"},
{"url": "https://codeforces.com//problemset/problem/1148/F", "name": "Foo Fighters", "tags": ["bitmasks", "constructive algorithms"], "problem_rating": "2700", "solved_by": "x991"},
{"url": "https://codeforces.com//problemset/problem/1148/E", "name": "Earth Wind and Fire", "tags": ["constructive algorithms", "greedy", "math", "sortings", "two pointers"], "problem_rating": "2300", "solved_by": "x1660"},
{"url": "https://codeforces.com//problemset/problem/1148/D", "name": "Dirty Deeds Done Dirt Cheap", "tags": ["greedy", "sortings"], "problem_rating": "1800", "solved_by": "x4933"},
{"url": "https://codeforces.com//problemset/problem/1148/C", "name": "Crazy Diamond", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1700", "solved_by": "x5254"},
{"url": "https://codeforces.com//problemset/problem/1148/B", "name": "Born This Way", "tags": ["binary search", "brute force", "two pointers"], "problem_rating": "1600", "solved_by": "x7324"},
{"url": "https://codeforces.com//problemset/problem/1148/A", "name": "Another One Bites The Dust", "tags": ["greedy"], "problem_rating": "800", "solved_by": "x14799"},
{"url": "https://codeforces.com//problemset/problem/1147/F", "name": "Zigzag Game", "tags": ["games", "interactive"], "problem_rating": "3500", "solved_by": "x246"},
{"url": "https://codeforces.com//problemset/problem/1147/E", "name": "Rainbow Coins", "tags": ["interactive"], "problem_rating": "3000", "solved_by": "x332"},
{"url": "https://codeforces.com//problemset/problem/1147/D", "name": "Palindrome XOR", "tags": ["dfs and similar", "graphs"], "problem_rating": "2400", "solved_by": "x736"},
{"url": "https://codeforces.com//problemset/problem/1147/C", "name": "Thanos Nim", "tags": ["games"], "problem_rating": "2000", "solved_by": "x3190"},
{"url": "https://codeforces.com//problemset/problem/1147/B", "name": "Chladni Figure", "tags": ["brute force", "strings"], "problem_rating": "1900", "solved_by": "x2830"},
{"url": "https://codeforces.com//problemset/problem/1147/A", "name": "Hide and Seek", "tags": ["graphs"], "problem_rating": "1500", "solved_by": "x5175"},
{"url": "https://codeforces.com//problemset/problem/1146/H", "name": "Satanic Panic", "tags": ["dp", "geometry"], "problem_rating": "2900", "solved_by": "x596"},
{"url": "https://codeforces.com//problemset/problem/1146/G", "name": "Zoning Restrictions", "tags": ["dp", "flows", "graphs"], "problem_rating": "2700", "solved_by": "x808"},
{"url": "https://codeforces.com//problemset/problem/1146/F", "name": "Leaf Partition", "tags": ["dp", "trees"], "problem_rating": "2500", "solved_by": "x1102"},
{"url": "https://codeforces.com//problemset/problem/1146/E", "name": "Hot is Cold", "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"], "problem_rating": "2400", "solved_by": "x873"},
{"url": "https://codeforces.com//problemset/problem/1146/D", "name": "Frog Jumping", "tags": ["dfs and similar", "math", "number theory"], "problem_rating": "2100", "solved_by": "x1090"},
{"url": "https://codeforces.com//problemset/problem/1146/C", "name": "Tree Diameter", "tags": ["bitmasks", "graphs", "interactive"], "problem_rating": "1700", "solved_by": "x3644"},
{"url": "https://codeforces.com//problemset/problem/1146/B", "name": "Hate \"A\"", "tags": ["implementation", "strings"], "problem_rating": "1100", "solved_by": "x8474"},
{"url": "https://codeforces.com//problemset/problem/1146/A", "name": "Love \"A\"", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x21667"},
{"url": "https://codeforces.com//problemset/problem/1145/G", "name": "AI Takeover", "tags": ["interactive"], "problem_rating": [null], "solved_by": "x167"},
{"url": "https://codeforces.com//problemset/problem/1145/F", "name": "Neat Words", "tags": [], "problem_rating": [null], "solved_by": "x503"},
{"url": "https://codeforces.com//problemset/problem/1145/E", "name": "Fourier Doodles", "tags": [], "problem_rating": [null], "solved_by": "x419"},
{"url": "https://codeforces.com//problemset/problem/1145/D", "name": "Pigeon d'Or", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x1148"},
{"url": "https://codeforces.com//problemset/problem/1145/C", "name": "Mystery Circuit", "tags": ["bitmasks", "brute force"], "problem_rating": [null], "solved_by": "x795"},
{"url": "https://codeforces.com//problemset/problem/1145/B", "name": "Kanban Numbers", "tags": ["brute force"], "problem_rating": [null], "solved_by": "x1441"},
{"url": "https://codeforces.com//problemset/problem/1145/A", "name": "Thanos Sort", "tags": ["implementation"], "problem_rating": [null], "solved_by": "x8552"},
{"url": "https://codeforces.com//problemset/problem/1144/G", "name": "Two Merged Sequences", "tags": ["dp", "greedy"], "problem_rating": "2400", "solved_by": "x1906"},
{"url": "https://codeforces.com//problemset/problem/1144/F", "name": "Graph Without Long Directed Paths", "tags": ["dfs and similar", "graphs"], "problem_rating": "1700", "solved_by": "x11266"},
{"url": "https://codeforces.com//problemset/problem/1144/E", "name": "Median String", "tags": ["bitmasks", "math", "number theory", "strings"], "problem_rating": "1900", "solved_by": "x4099"},
{"url": "https://codeforces.com//problemset/problem/1144/D", "name": "Equalize Them All", "tags": ["constructive algorithms", "greedy"], "problem_rating": "1400", "solved_by": "x10152"},
{"url": "https://codeforces.com//problemset/problem/1144/C", "name": "Two Shuffled Sequences", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1000", "solved_by": "x15157"},
{"url": "https://codeforces.com//problemset/problem/1144/B", "name": "Parity Alternated Deletions", "tags": ["greedy", "implementation", "sortings"], "problem_rating": "900", "solved_by": "x16903"},
{"url": "https://codeforces.com//problemset/problem/1144/A", "name": "Diverse Strings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x19040"},
{"url": "https://codeforces.com//problemset/problem/1143/C", "name": "Queen", "tags": ["dfs and similar", "trees"], "problem_rating": "1400", "solved_by": "x11899"},
{"url": "https://codeforces.com//problemset/problem/1143/B", "name": "Nirvana", "tags": ["brute force", "math", "number theory"], "problem_rating": "1200", "solved_by": "x10349"},
{"url": "https://codeforces.com//problemset/problem/1143/A", "name": "The Doors", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x13222"},
{"url": "https://codeforces.com//problemset/problem/1142/E", "name": "Pink Floyd", "tags": ["graphs", "interactive"], "problem_rating": "3200", "solved_by": "x497"},
{"url": "https://codeforces.com//problemset/problem/1142/D", "name": "Foreigner", "tags": ["dp"], "problem_rating": "2800", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1142/C", "name": "U2", "tags": ["geometry"], "problem_rating": "2400", "solved_by": "x1332"},
{"url": "https://codeforces.com//problemset/problem/1142/B", "name": "Lynyrd Skynyrd", "tags": ["data structures", "dfs and similar", "dp", "math", "trees"], "problem_rating": "2000", "solved_by": "x2851"},
{"url": "https://codeforces.com//problemset/problem/1142/A", "name": "The Beatles", "tags": ["brute force", "math"], "problem_rating": "1700", "solved_by": "x3403"},
{"url": "https://codeforces.com//problemset/problem/1141/G", "name": "Privatization of Roads in Treeland", "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "problem_rating": "1900", "solved_by": "x2225"},
{"url": "https://codeforces.com//problemset/problem/1141/F2", "name": "Same Sum Blocks (Hard)", "tags": ["data structures", "greedy"], "problem_rating": "1900", "solved_by": "x4128"},
{"url": "https://codeforces.com//problemset/problem/1141/F1", "name": "Same Sum Blocks (Easy)", "tags": ["greedy"], "problem_rating": "1900", "solved_by": "x3801"},
{"url": "https://codeforces.com//problemset/problem/1141/E", "name": "Superhero Battle", "tags": ["math"], "problem_rating": "1700", "solved_by": "x6673"},
{"url": "https://codeforces.com//problemset/problem/1141/D", "name": "Colored Boots", "tags": ["greedy", "implementation"], "problem_rating": "1500", "solved_by": "x8455"},
{"url": "https://codeforces.com//problemset/problem/1141/C", "name": "Polycarp Restores Permutation", "tags": ["math"], "problem_rating": "1500", "solved_by": "x11353"},
{"url": "https://codeforces.com//problemset/problem/1141/B", "name": "Maximal Continuous Rest", "tags": ["implementation"], "problem_rating": "900", "solved_by": "x21022"},
{"url": "https://codeforces.com//problemset/problem/1141/A", "name": "Game 23", "tags": ["implementation", "math"], "problem_rating": "1000", "solved_by": "x30787"},
{"url": "https://codeforces.com//problemset/problem/1140/G", "name": "Double Tree", "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "problem_rating": "2700", "solved_by": "x476"},
{"url": "https://codeforces.com//problemset/problem/1140/F", "name": "Extending Set of Points", "tags": ["data structures", "divide and conquer", "dsu"], "problem_rating": "2600", "solved_by": "x1178"},
{"url": "https://codeforces.com//problemset/problem/1140/E", "name": "Palindrome-less Arrays", "tags": ["combinatorics", "divide and conquer", "dp"], "problem_rating": "2200", "solved_by": "x1904"},
{"url": "https://codeforces.com//problemset/problem/1140/D", "name": "Minimum Triangulation", "tags": ["dp", "greedy", "math"], "problem_rating": "1200", "solved_by": "x12483"},
{"url": "https://codeforces.com//problemset/problem/1140/C", "name": "Playlist", "tags": ["brute force", "data structures", "sortings"], "problem_rating": "1600", "solved_by": "x9433"},
{"url": "https://codeforces.com//problemset/problem/1140/B", "name": "Good String", "tags": ["implementation", "strings"], "problem_rating": "1200", "solved_by": "x11249"},
{"url": "https://codeforces.com//problemset/problem/1140/A", "name": "Detective Book", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x12202"},
{"url": "https://codeforces.com//problemset/problem/1139/F", "name": "Dish Shopping", "tags": ["data structures", "divide and conquer"], "problem_rating": "2500", "solved_by": "x401"},
{"url": "https://codeforces.com//problemset/problem/1139/E", "name": "Maximize Mex", "tags": ["flows", "graph matchings", "graphs"], "problem_rating": "2400", "solved_by": "x1745"},
{"url": "https://codeforces.com//problemset/problem/1139/D", "name": "Steps to One", "tags": ["dp", "math", "number theory", "probabilities"], "problem_rating": "2300", "solved_by": "x2211"},
{"url": "https://codeforces.com//problemset/problem/1139/C", "name": "Edgy Trees", "tags": ["dfs and similar", "dsu", "graphs", "math", "trees"], "problem_rating": "1500", "solved_by": "x12305"},
{"url": "https://codeforces.com//problemset/problem/1139/B", "name": "Chocolates", "tags": ["greedy", "implementation"], "problem_rating": "1000", "solved_by": "x16017"},
{"url": "https://codeforces.com//problemset/problem/1139/A", "name": "Even Substrings", "tags": ["implementation", "strings"], "problem_rating": "800", "solved_by": "x16695"},
{"url": "https://codeforces.com//problemset/problem/1138/B", "name": "Circus", "tags": ["brute force", "greedy", "math", "strings"], "problem_rating": "1800", "solved_by": "x3999"},
{"url": "https://codeforces.com//problemset/problem/1138/A", "name": "Sushi for Two", "tags": ["binary search", "greedy", "implementation"], "problem_rating": "900", "solved_by": "x17770"},
{"url": "https://codeforces.com//problemset/problem/1137/F", "name": "Matches Are Not a Child's Play", "tags": ["data structures", "trees"], "problem_rating": "3400", "solved_by": "x466"},
{"url": "https://codeforces.com//problemset/problem/1137/E", "name": "Train Car Selection", "tags": ["data structures", "greedy"], "problem_rating": "2700", "solved_by": "x500"},
{"url": "https://codeforces.com//problemset/problem/1137/D", "name": "Cooperative Game", "tags": ["constructive algorithms", "interactive", "number theory"], "problem_rating": "2400", "solved_by": "x1530"},
{"url": "https://codeforces.com//problemset/problem/1137/C", "name": "Museums Tour", "tags": ["dp", "graphs", "implementation"], "problem_rating": "2500", "solved_by": "x1175"},
{"url": "https://codeforces.com//problemset/problem/1137/B", "name": "Camp Schedule", "tags": ["greedy", "hashing", "strings"], "problem_rating": "1600", "solved_by": "x6014"},
{"url": "https://codeforces.com//problemset/problem/1137/A", "name": "Skyscrapers", "tags": ["implementation", "sortings"], "problem_rating": "1600", "solved_by": "x4447"},
{"url": "https://codeforces.com//problemset/problem/1136/E", "name": "Nastya Hasn't Written a Legend", "tags": ["binary search", "data structures"], "problem_rating": "2200", "solved_by": "x1051"},
{"url": "https://codeforces.com//problemset/problem/1136/D", "name": "Nastya Is Buying Lunch", "tags": ["greedy"], "problem_rating": "1800", "solved_by": "x3764"},
{"url": "https://codeforces.com//problemset/problem/1136/C", "name": "Nastya Is Transposing Matrices", "tags": ["constructive algorithms", "sortings"], "problem_rating": "1500", "solved_by": "x7666"},
{"url": "https://codeforces.com//problemset/problem/1136/B", "name": "Nastya Is Playing Computer Games", "tags": ["constructive algorithms", "math"], "problem_rating": "1000", "solved_by": "x11608"},
{"url": "https://codeforces.com//problemset/problem/1136/A", "name": "Nastya Is Reading a Book", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x16221"},
{"url": "https://codeforces.com//problemset/problem/1133/F2", "name": "Spanning Tree with One Fixed Degree", "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy"], "problem_rating": "1900", "solved_by": "x3289"},
{"url": "https://codeforces.com//problemset/problem/1133/F1", "name": "Spanning Tree with Maximum Degree", "tags": ["graphs"], "problem_rating": "1600", "solved_by": "x7665"},
{"url": "https://codeforces.com//problemset/problem/1133/E", "name": "K Balanced Teams", "tags": ["dp", "sortings", "two pointers"], "problem_rating": "1800", "solved_by": "x5338"},
{"url": "https://codeforces.com//problemset/problem/1133/D", "name": "Zero Quantity Maximization", "tags": ["hashing", "math", "number theory"], "problem_rating": "1500", "solved_by": "x11426"},
{"url": "https://codeforces.com//problemset/problem/1133/C", "name": "Balanced Team", "tags": ["sortings", "two pointers"], "problem_rating": "1200", "solved_by": "x21999"},
{"url": "https://codeforces.com//problemset/problem/1133/B", "name": "Preparation for International Women's Day", "tags": ["math", "number theory"], "problem_rating": "1200", "solved_by": "x12561"},
{"url": "https://codeforces.com//problemset/problem/1133/A", "name": "Middle of the Contest", "tags": ["implementation"], "problem_rating": "1000", "solved_by": "x16847"},
{"url": "https://codeforces.com//problemset/problem/1132/G", "name": "Greedy Subsequences", "tags": ["data structures", "dp", "trees"], "problem_rating": "2400", "solved_by": "x983"},
{"url": "https://codeforces.com//problemset/problem/1132/F", "name": "Clear the String", "tags": ["dp"], "problem_rating": "2000", "solved_by": "x7782"},
{"url": "https://codeforces.com//problemset/problem/1132/E", "name": "Knapsack", "tags": ["dfs and similar", "dp", "greedy"], "problem_rating": "2300", "solved_by": "x1440"},
{"url": "https://codeforces.com//problemset/problem/1132/D", "name": "Stressful Training", "tags": ["binary search", "greedy"], "problem_rating": "2300", "solved_by": "x1876"},
{"url": "https://codeforces.com//problemset/problem/1132/C", "name": "Painting the Fence", "tags": ["brute force"], "problem_rating": "1700", "solved_by": "x5379"},
{"url": "https://codeforces.com//problemset/problem/1132/B", "name": "Discounts", "tags": ["greedy", "sortings"], "problem_rating": "900", "solved_by": "x12832"},
{"url": "https://codeforces.com//problemset/problem/1132/A", "name": "Regular Bracket Sequence", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x9546"},
{"url": "https://codeforces.com//problemset/problem/1131/G", "name": "Most Dangerous Shark", "tags": ["data structures", "dp", "two pointers"], "problem_rating": "2700", "solved_by": "x408"},
{"url": "https://codeforces.com//problemset/problem/1131/F", "name": "Asya And Kittens", "tags": ["constructive algorithms", "dsu"], "problem_rating": "1700", "solved_by": "x6546"},
{"url": "https://codeforces.com//problemset/problem/1131/E", "name": "String Multiplication", "tags": ["dp", "greedy", "strings"], "problem_rating": "2300", "solved_by": "x1132"},
{"url": "https://codeforces.com//problemset/problem/1131/D", "name": "Gourmet choice", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy"], "problem_rating": "2000", "solved_by": "x3195"},
{"url": "https://codeforces.com//problemset/problem/1131/C", "name": "Birthday", "tags": ["binary search", "greedy", "sortings"], "problem_rating": "1200", "solved_by": "x14683"},
{"url": "https://codeforces.com//problemset/problem/1131/B", "name": "Draw!", "tags": ["greedy", "implementation"], "problem_rating": "1400", "solved_by": "x9670"},
{"url": "https://codeforces.com//problemset/problem/1131/A", "name": "Sea Battle", "tags": ["math"], "problem_rating": "800", "solved_by": "x12369"},
{"url": "https://codeforces.com//problemset/problem/1130/C", "name": "Connect", "tags": ["brute force", "dfs and similar", "dsu"], "problem_rating": "1400", "solved_by": "x8416"},
{"url": "https://codeforces.com//problemset/problem/1130/B", "name": "Two Cakes", "tags": ["greedy"], "problem_rating": "1200", "solved_by": "x7879"},
{"url": "https://codeforces.com//problemset/problem/1130/A", "name": "Be Positive", "tags": ["implementation"], "problem_rating": "800", "solved_by": "x11517"},
{"url": "https://codeforces.com//problemset/problem/1129/E", "name": "Legendary Tree", "tags": ["binary search", "interactive", "trees"], "problem_rating": "3100", "solved_by": "x421"},
{"url": "https://codeforces.com//problemset/problem/1129/D", "name": "Isolation", "tags": ["data structures", "dp"], "problem_rating": "2900", "solved_by": "x970"},
{"url": "https://codeforces.com//problemset/problem/1129/C", "name": "Morse Code", "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"], "problem_rating": "2400", "solved_by": "x911"},
{"url": "https://codeforces.com//problemset/problem/1129/B", "name": "Wrong Answer", "tags": ["constructive algorithms"], "problem_rating": "2000", "solved_by": "x2174"},
{"url": "https://codeforces.com//problemset/problem/1129/A2", "name": "Toy Train", "tags": ["brute force", "greedy"], "problem_rating": "1800", "solved_by": "x4067"},
{"url": "https://codeforces.com//problemset/problem/1129/A1", "name": "Toy Train (Simplified)", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x3797"},
{"url": "https://codeforces.com//problemset/problem/1121/C", "name": "System Testing", "tags": ["implementation"], "problem_rating": "1600", "solved_by": "x1951"},
{"url": "https://codeforces.com//problemset/problem/1121/B", "name": "Mike and Children", "tags": ["brute force", "implementation"], "problem_rating": "1200", "solved_by": "x8791"},
{"url": "https://codeforces.com//problemset/problem/1121/A", "name": "Technogoblet of Fire", "tags": ["implementation", "sortings"], "problem_rating": "1100", "solved_by": "x7148"},
{"url": "https://codeforces.com//problemset/problem/1120/F", "name": "Secret Letters", "tags": ["data structures", "dp", "greedy"], "problem_rating": "3100", "solved_by": "x254"},
{"url": "https://codeforces.com//problemset/problem/1120/E", "name": "The very same Munchhausen", "tags": ["brute force"], "problem_rating": "2600", "solved_by": "x116"},
{"url": "https://codeforces.com//problemset/problem/1120/D", "name": "Power Tree", "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "problem_rating": "2500", "solved_by": "x1298"},
{"url": "https://codeforces.com//problemset/problem/1120/C", "name": "Compress String", "tags": ["dp", "strings"], "problem_rating": "2100", "solved_by": "x2082"},
{"url": "https://codeforces.com//problemset/problem/1120/B", "name": "Once in a casino", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "2700", "solved_by": "x411"},
{"url": "https://codeforces.com//problemset/problem/1120/A", "name": "Diana and Liana", "tags": ["greedy", "implementation", "two pointers"], "problem_rating": "1900", "solved_by": "x1627"},
{"url": "https://codeforces.com//problemset/problem/1119/H", "name": "Triple", "tags": ["fft", "math"], "problem_rating": "3200", "solved_by": "x535"},
{"url": "https://codeforces.com//problemset/problem/1119/G", "name": "Get Ready for the Battle", "tags": ["constructive algorithms", "implementation"], "problem_rating": "3100", "solved_by": "x483"},
{"url": "https://codeforces.com//problemset/problem/1119/F", "name": "Niyaz and Small Degrees", "tags": ["data structures", "dp", "trees"], "problem_rating": "3400", "solved_by": "x700"},
{"url": "https://codeforces.com//problemset/problem/1119/E", "name": "Pavel and Triangles", "tags": ["brute force", "dp", "fft", "greedy", "ternary search"], "problem_rating": "1900", "solved_by": "x4937"},
{"url": "https://codeforces.com//problemset/problem/1119/D", "name": "Frets On Fire", "tags": ["binary search", "sortings"], "problem_rating": "1800", "solved_by": "x4767"},
{"url": "https://codeforces.com//problemset/problem/1119/C", "name": "Ramesses and Corner Inversion", "tags": ["constructive algorithms", "greedy", "implementation", "math"], "problem_rating": "1500", "solved_by": "x6804"},
{"url": "https://codeforces.com//problemset/problem/1119/B", "name": "Alyona and a Narrow Fridge", "tags": ["binary search", "flows", "greedy", "sortings"], "problem_rating": "1300", "solved_by": "x10566"},
{"url": "https://codeforces.com//problemset/problem/1119/A", "name": "Ilya and a Colorful Walk", "tags": ["greedy", "implementation"], "problem_rating": "1100", "solved_by": "x10664"},
{"url": "https://codeforces.com//problemset/problem/1118/F2", "name": "Tree Cutting (Hard Version)", "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "problem_rating": "2700", "solved_by": "x527"},
{"url": "https://codeforces.com//problemset/problem/1118/F1", "name": "Tree Cutting (Easy Version)", "tags": ["dfs and similar", "trees"], "problem_rating": "1800", "solved_by": "x5809"},
{"url": "https://codeforces.com//problemset/problem/1118/E", "name": "Yet Another Ball Problem", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x4095"},
{"url": "https://codeforces.com//problemset/problem/1118/D2", "name": "Coffee and Coursework (Hard Version)", "tags": ["binary search", "greedy"], "problem_rating": "1700", "solved_by": "x6181"},
{"url": "https://codeforces.com//problemset/problem/1118/D1", "name": "Coffee and Coursework (Easy version)", "tags": ["brute force", "greedy"], "problem_rating": "1700", "solved_by": "x5604"},
{"url": "https://codeforces.com//problemset/problem/1118/C", "name": "Palindromic Matrix", "tags": ["constructive algorithms", "implementation"], "problem_rating": "1700", "solved_by": "x5709"},
{"url": "https://codeforces.com//problemset/problem/1118/B", "name": "Tanya and Candies", "tags": ["implementation"], "problem_rating": "1200", "solved_by": "x11988"},
{"url": "https://codeforces.com//problemset/problem/1118/A", "name": "Water Buying", "tags": ["math"], "problem_rating": "800", "solved_by": "x19920"},
{"url": "https://codeforces.com//problemset/problem/1117/G", "name": "Recursive Queries", "tags": ["data structures"], "problem_rating": "2500", "solved_by": "x664"},
{"url": "https://codeforces.com//problemset/problem/1117/F", "name": "Crisp String", "tags": ["bitmasks", "dp"], "problem_rating": "2500", "solved_by": "x522"},
{"url": "https://codeforces.com//problemset/problem/1117/E", "name": "Decypher the String", "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "interactive", "math"], "problem_rating": "2200", "solved_by": "x1465"},
{"url": "https://codeforces.com//problemset/problem/1117/D", "name": "Magic Gems", "tags": ["dp", "math", "matrices"], "problem_rating": "2100", "solved_by": "x4102"}
]